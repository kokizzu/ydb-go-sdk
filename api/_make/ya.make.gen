PEERDIR(
    ${GOSTD}/fmt
    ${GOSTD}/math
    vendor/github.com/golang/protobuf/proto
    vendor/github.com/golang/protobuf/protoc-gen-go/descriptor
    vendor/github.com/golang/protobuf/protoc-gen-go/grpc
    vendor/google.golang.org/protobuf/types/known/anypb
    vendor/github.com/golang/protobuf/ptypes/empty
    vendor/google.golang.org/protobuf/types/known/durationpb
    vendor/google.golang.org/protobuf/types/known/timestamppb
    contrib/libs/protobuf
    ${GOSTD}/context
    vendor/google.golang.org/grpc
)

IF (OS_WINDOWS)
    SET(exe_ext .exe)
ELSE()
    SET(exe_ext)
ENDIF()

# Disclaimer:
# -----------
# The generator below scans entire ${api_spec_dirs} and reads all files there regardless of PEERDIRs.
# In order to correctly construct dependincies of this action we shall enlist entire content
# of these directories as INPUT. This macro collects all needed files in configure time to avoid missing
# dependencies.
#
# This all is an ugly hack: the proper generator shall not read files beyound needed and
# shall take list of needed files as input instead of directory. Also it shall not steal files,
# it shall use files provided via EXT_PROTO. The only excuse for existense of this generator
# is legacy and deprecation: the new API is already provided and this one is deprecated and eventually 
# will cease to exist
COLLECT_YDB_API_SPECS_LEGACY(all_api_spec_files ${api_spec_dirs})

RUN_PROGRAM(
    kikimr/public/sdk/go/ydb/internal/cmd/make
    -import="${protobuf_import_dirs}"
    -source="${api_spec_dirs}"
    -source-base=${ARCADIA_ROOT}
    -strip=${api_spec_root}
    -destination=${api_generated_root}
    -repository=a.yandex-team.ru/${api_generated_suffix}
    -compiler=contrib/tools/protoc/protoc${exe_ext}
    -custom=kikimr/public/sdk/go/ydb/internal/cmd/protoc-gen/protoc-gen${exe_ext}
    -plugins=ydb

    TOOL contrib/tools/protoc
    TOOL kikimr/public/sdk/go/ydb/internal/cmd/protoc-gen
    IN ${all_api_spec_files}
    OUT ${api_generated_files}
    CWD ${ARCADIA_BUILD_ROOT}
)
