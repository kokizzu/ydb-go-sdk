// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ydb_coordination.proto

package Ydb_Coordination

import (
	Ydb "github.com/yandex-cloud/ydb-go-sdk/api/protos/Ydb"
	Ydb_Issue "github.com/yandex-cloud/ydb-go-sdk/api/protos/Ydb_Issue"
	Ydb_Operations "github.com/yandex-cloud/ydb-go-sdk/api/protos/Ydb_Operations"
	Ydb_Scheme "github.com/yandex-cloud/ydb-go-sdk/api/protos/Ydb_Scheme"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
// Consistency mode
type ConsistencyMode int32

const (
	// The default or current value
	ConsistencyMode_CONSISTENCY_MODE_UNSET ConsistencyMode = 0
	// Strict mode makes sure operations may only complete on current master
	ConsistencyMode_CONSISTENCY_MODE_STRICT ConsistencyMode = 1
	// Relaxed mode allows operations to complete on stale masters
	ConsistencyMode_CONSISTENCY_MODE_RELAXED ConsistencyMode = 2
)

var ConsistencyMode_name = map[int32]string{
	0: "CONSISTENCY_MODE_UNSET",
	1: "CONSISTENCY_MODE_STRICT",
	2: "CONSISTENCY_MODE_RELAXED",
}

var ConsistencyMode_value = map[string]int32{
	"CONSISTENCY_MODE_UNSET":   0,
	"CONSISTENCY_MODE_STRICT":  1,
	"CONSISTENCY_MODE_RELAXED": 2,
}

func (x ConsistencyMode) String() string {
	return proto.EnumName(ConsistencyMode_name, int32(x))
}

func (ConsistencyMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{0}
}

//*
// Counters mode
type RateLimiterCountersMode int32

const (
	// The default or current value
	RateLimiterCountersMode_RATE_LIMITER_COUNTERS_MODE_UNSET RateLimiterCountersMode = 0
	// Aggregated counters for resource tree
	RateLimiterCountersMode_RATE_LIMITER_COUNTERS_MODE_AGGREGATED RateLimiterCountersMode = 1
	// Counters on every resource
	RateLimiterCountersMode_RATE_LIMITER_COUNTERS_MODE_DETAILED RateLimiterCountersMode = 2
)

var RateLimiterCountersMode_name = map[int32]string{
	0: "RATE_LIMITER_COUNTERS_MODE_UNSET",
	1: "RATE_LIMITER_COUNTERS_MODE_AGGREGATED",
	2: "RATE_LIMITER_COUNTERS_MODE_DETAILED",
}

var RateLimiterCountersMode_value = map[string]int32{
	"RATE_LIMITER_COUNTERS_MODE_UNSET":      0,
	"RATE_LIMITER_COUNTERS_MODE_AGGREGATED": 1,
	"RATE_LIMITER_COUNTERS_MODE_DETAILED":   2,
}

func (x RateLimiterCountersMode) String() string {
	return proto.EnumName(RateLimiterCountersMode_name, int32(x))
}

func (RateLimiterCountersMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{1}
}

//*
// Stub for unsupported messages
type Unsupported struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Unsupported) Reset()         { *m = Unsupported{} }
func (m *Unsupported) String() string { return proto.CompactTextString(m) }
func (*Unsupported) ProtoMessage()    {}
func (*Unsupported) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{0}
}

func (m *Unsupported) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Unsupported.Unmarshal(m, b)
}
func (m *Unsupported) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Unsupported.Marshal(b, m, deterministic)
}
func (m *Unsupported) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Unsupported.Merge(m, src)
}
func (m *Unsupported) XXX_Size() int {
	return xxx_messageInfo_Unsupported.Size(m)
}
func (m *Unsupported) XXX_DiscardUnknown() {
	xxx_messageInfo_Unsupported.DiscardUnknown(m)
}

var xxx_messageInfo_Unsupported proto.InternalMessageInfo

//*
// Configuration settings for a coordination node
type Config struct {
	// Initialized on creation, cannot be set
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Period in milliseconds for self-checks (default 1 second)
	SelfCheckPeriodMillis uint32 `protobuf:"varint,2,opt,name=self_check_period_millis,json=selfCheckPeriodMillis,proto3" json:"self_check_period_millis,omitempty"`
	// Grace period for sessions on master change (default 10 seconds)
	SessionGracePeriodMillis uint32 `protobuf:"varint,3,opt,name=session_grace_period_millis,json=sessionGracePeriodMillis,proto3" json:"session_grace_period_millis,omitempty"`
	// Concistency mode for read operations
	ReadConsistencyMode ConsistencyMode `protobuf:"varint,4,opt,name=read_consistency_mode,json=readConsistencyMode,proto3,enum=Ydb.Coordination.ConsistencyMode" json:"read_consistency_mode,omitempty"`
	// Consistency mode for attach operations
	AttachConsistencyMode ConsistencyMode `protobuf:"varint,5,opt,name=attach_consistency_mode,json=attachConsistencyMode,proto3,enum=Ydb.Coordination.ConsistencyMode" json:"attach_consistency_mode,omitempty"`
	// Rate limiter counters mode
	RateLimiterCountersMode RateLimiterCountersMode `protobuf:"varint,6,opt,name=rate_limiter_counters_mode,json=rateLimiterCountersMode,proto3,enum=Ydb.Coordination.RateLimiterCountersMode" json:"rate_limiter_counters_mode,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                `json:"-"`
	XXX_unrecognized        []byte                  `json:"-"`
	XXX_sizecache           int32                   `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{1}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Config) GetSelfCheckPeriodMillis() uint32 {
	if m != nil {
		return m.SelfCheckPeriodMillis
	}
	return 0
}

func (m *Config) GetSessionGracePeriodMillis() uint32 {
	if m != nil {
		return m.SessionGracePeriodMillis
	}
	return 0
}

func (m *Config) GetReadConsistencyMode() ConsistencyMode {
	if m != nil {
		return m.ReadConsistencyMode
	}
	return ConsistencyMode_CONSISTENCY_MODE_UNSET
}

func (m *Config) GetAttachConsistencyMode() ConsistencyMode {
	if m != nil {
		return m.AttachConsistencyMode
	}
	return ConsistencyMode_CONSISTENCY_MODE_UNSET
}

func (m *Config) GetRateLimiterCountersMode() RateLimiterCountersMode {
	if m != nil {
		return m.RateLimiterCountersMode
	}
	return RateLimiterCountersMode_RATE_LIMITER_COUNTERS_MODE_UNSET
}

//*
// Describes an active client session
type SessionDescription struct {
	// Session id generated by the server
	SessionId uint64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Expiration timeout of the session
	TimeoutMillis uint64 `protobuf:"varint,2,opt,name=timeout_millis,json=timeoutMillis,proto3" json:"timeout_millis,omitempty"`
	// User-specified description of this session
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// True if this session is currently attached to a client
	Attached             bool     `protobuf:"varint,4,opt,name=attached,proto3" json:"attached,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionDescription) Reset()         { *m = SessionDescription{} }
func (m *SessionDescription) String() string { return proto.CompactTextString(m) }
func (*SessionDescription) ProtoMessage()    {}
func (*SessionDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{2}
}

func (m *SessionDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionDescription.Unmarshal(m, b)
}
func (m *SessionDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionDescription.Marshal(b, m, deterministic)
}
func (m *SessionDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionDescription.Merge(m, src)
}
func (m *SessionDescription) XXX_Size() int {
	return xxx_messageInfo_SessionDescription.Size(m)
}
func (m *SessionDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionDescription.DiscardUnknown(m)
}

var xxx_messageInfo_SessionDescription proto.InternalMessageInfo

func (m *SessionDescription) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *SessionDescription) GetTimeoutMillis() uint64 {
	if m != nil {
		return m.TimeoutMillis
	}
	return 0
}

func (m *SessionDescription) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SessionDescription) GetAttached() bool {
	if m != nil {
		return m.Attached
	}
	return false
}

//*
// Describes an owner or a waiter of this semaphore
type SemaphoreSession struct {
	// A monotonically increasing id which determines locking order
	OrderId uint64 `protobuf:"varint,5,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// An id of the session which tried to acquire the semaphore
	SessionId uint64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// A timeout in milliseconds for operation in waiters queue
	TimeoutMillis uint64 `protobuf:"varint,2,opt,name=timeout_millis,json=timeoutMillis,proto3" json:"timeout_millis,omitempty"`
	// Number of tokens for an acquire operation
	Count uint64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	// User-defined data attached to the acquire operation
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SemaphoreSession) Reset()         { *m = SemaphoreSession{} }
func (m *SemaphoreSession) String() string { return proto.CompactTextString(m) }
func (*SemaphoreSession) ProtoMessage()    {}
func (*SemaphoreSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{3}
}

func (m *SemaphoreSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SemaphoreSession.Unmarshal(m, b)
}
func (m *SemaphoreSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SemaphoreSession.Marshal(b, m, deterministic)
}
func (m *SemaphoreSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SemaphoreSession.Merge(m, src)
}
func (m *SemaphoreSession) XXX_Size() int {
	return xxx_messageInfo_SemaphoreSession.Size(m)
}
func (m *SemaphoreSession) XXX_DiscardUnknown() {
	xxx_messageInfo_SemaphoreSession.DiscardUnknown(m)
}

var xxx_messageInfo_SemaphoreSession proto.InternalMessageInfo

func (m *SemaphoreSession) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *SemaphoreSession) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *SemaphoreSession) GetTimeoutMillis() uint64 {
	if m != nil {
		return m.TimeoutMillis
	}
	return 0
}

func (m *SemaphoreSession) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SemaphoreSession) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

//*
// Describes the state of a semaphore
type SemaphoreDescription struct {
	// Name of the semaphore
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// User-defined data attached to the semaphore
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// Number of tokens currently acquired by owners
	Count uint64 `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
	// Maximum number of tokens that may acquired
	Limit uint64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// Ephemeral semaphores are deleted when released by all owners and waiters
	Ephemeral bool `protobuf:"varint,4,opt,name=ephemeral,proto3" json:"ephemeral,omitempty"`
	// A list of current owners of the semaphore
	Owners []*SemaphoreSession `protobuf:"bytes,5,rep,name=owners,proto3" json:"owners,omitempty"`
	// A list of current waiters on the semaphore
	Waiters              []*SemaphoreSession `protobuf:"bytes,6,rep,name=waiters,proto3" json:"waiters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SemaphoreDescription) Reset()         { *m = SemaphoreDescription{} }
func (m *SemaphoreDescription) String() string { return proto.CompactTextString(m) }
func (*SemaphoreDescription) ProtoMessage()    {}
func (*SemaphoreDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{4}
}

func (m *SemaphoreDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SemaphoreDescription.Unmarshal(m, b)
}
func (m *SemaphoreDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SemaphoreDescription.Marshal(b, m, deterministic)
}
func (m *SemaphoreDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SemaphoreDescription.Merge(m, src)
}
func (m *SemaphoreDescription) XXX_Size() int {
	return xxx_messageInfo_SemaphoreDescription.Size(m)
}
func (m *SemaphoreDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_SemaphoreDescription.DiscardUnknown(m)
}

var xxx_messageInfo_SemaphoreDescription proto.InternalMessageInfo

func (m *SemaphoreDescription) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SemaphoreDescription) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SemaphoreDescription) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SemaphoreDescription) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SemaphoreDescription) GetEphemeral() bool {
	if m != nil {
		return m.Ephemeral
	}
	return false
}

func (m *SemaphoreDescription) GetOwners() []*SemaphoreSession {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *SemaphoreDescription) GetWaiters() []*SemaphoreSession {
	if m != nil {
		return m.Waiters
	}
	return nil
}

//*
// Session request message sent from client to server
type SessionRequest struct {
	// Types that are valid to be assigned to Request:
	//	*SessionRequest_Ping
	//	*SessionRequest_Pong
	//	*SessionRequest_SessionStart_
	//	*SessionRequest_SessionStop_
	//	*SessionRequest_Unsupported_5
	//	*SessionRequest_Unsupported_6
	//	*SessionRequest_AcquireSemaphore_
	//	*SessionRequest_ReleaseSemaphore_
	//	*SessionRequest_DescribeSemaphore_
	//	*SessionRequest_CreateSemaphore_
	//	*SessionRequest_UpdateSemaphore_
	//	*SessionRequest_DeleteSemaphore_
	//	*SessionRequest_Unsupported_13
	//	*SessionRequest_Unsupported_14
	//	*SessionRequest_Unsupported_15
	Request              isSessionRequest_Request `protobuf_oneof:"request"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SessionRequest) Reset()         { *m = SessionRequest{} }
func (m *SessionRequest) String() string { return proto.CompactTextString(m) }
func (*SessionRequest) ProtoMessage()    {}
func (*SessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{5}
}

func (m *SessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest.Unmarshal(m, b)
}
func (m *SessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest.Marshal(b, m, deterministic)
}
func (m *SessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest.Merge(m, src)
}
func (m *SessionRequest) XXX_Size() int {
	return xxx_messageInfo_SessionRequest.Size(m)
}
func (m *SessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest proto.InternalMessageInfo

type isSessionRequest_Request interface {
	isSessionRequest_Request()
}

type SessionRequest_Ping struct {
	Ping *SessionRequest_PingPong `protobuf:"bytes,1,opt,name=ping,proto3,oneof"`
}

type SessionRequest_Pong struct {
	Pong *SessionRequest_PingPong `protobuf:"bytes,2,opt,name=pong,proto3,oneof"`
}

type SessionRequest_SessionStart_ struct {
	SessionStart *SessionRequest_SessionStart `protobuf:"bytes,3,opt,name=session_start,json=sessionStart,proto3,oneof"`
}

type SessionRequest_SessionStop_ struct {
	SessionStop *SessionRequest_SessionStop `protobuf:"bytes,4,opt,name=session_stop,json=sessionStop,proto3,oneof"`
}

type SessionRequest_Unsupported_5 struct {
	Unsupported_5 *Unsupported `protobuf:"bytes,5,opt,name=unsupported_5,json=unsupported5,proto3,oneof"`
}

type SessionRequest_Unsupported_6 struct {
	Unsupported_6 *Unsupported `protobuf:"bytes,6,opt,name=unsupported_6,json=unsupported6,proto3,oneof"`
}

type SessionRequest_AcquireSemaphore_ struct {
	AcquireSemaphore *SessionRequest_AcquireSemaphore `protobuf:"bytes,7,opt,name=acquire_semaphore,json=acquireSemaphore,proto3,oneof"`
}

type SessionRequest_ReleaseSemaphore_ struct {
	ReleaseSemaphore *SessionRequest_ReleaseSemaphore `protobuf:"bytes,8,opt,name=release_semaphore,json=releaseSemaphore,proto3,oneof"`
}

type SessionRequest_DescribeSemaphore_ struct {
	DescribeSemaphore *SessionRequest_DescribeSemaphore `protobuf:"bytes,9,opt,name=describe_semaphore,json=describeSemaphore,proto3,oneof"`
}

type SessionRequest_CreateSemaphore_ struct {
	CreateSemaphore *SessionRequest_CreateSemaphore `protobuf:"bytes,10,opt,name=create_semaphore,json=createSemaphore,proto3,oneof"`
}

type SessionRequest_UpdateSemaphore_ struct {
	UpdateSemaphore *SessionRequest_UpdateSemaphore `protobuf:"bytes,11,opt,name=update_semaphore,json=updateSemaphore,proto3,oneof"`
}

type SessionRequest_DeleteSemaphore_ struct {
	DeleteSemaphore *SessionRequest_DeleteSemaphore `protobuf:"bytes,12,opt,name=delete_semaphore,json=deleteSemaphore,proto3,oneof"`
}

type SessionRequest_Unsupported_13 struct {
	Unsupported_13 *Unsupported `protobuf:"bytes,13,opt,name=unsupported_13,json=unsupported13,proto3,oneof"`
}

type SessionRequest_Unsupported_14 struct {
	Unsupported_14 *Unsupported `protobuf:"bytes,14,opt,name=unsupported_14,json=unsupported14,proto3,oneof"`
}

type SessionRequest_Unsupported_15 struct {
	Unsupported_15 *Unsupported `protobuf:"bytes,15,opt,name=unsupported_15,json=unsupported15,proto3,oneof"`
}

func (*SessionRequest_Ping) isSessionRequest_Request() {}

func (*SessionRequest_Pong) isSessionRequest_Request() {}

func (*SessionRequest_SessionStart_) isSessionRequest_Request() {}

func (*SessionRequest_SessionStop_) isSessionRequest_Request() {}

func (*SessionRequest_Unsupported_5) isSessionRequest_Request() {}

func (*SessionRequest_Unsupported_6) isSessionRequest_Request() {}

func (*SessionRequest_AcquireSemaphore_) isSessionRequest_Request() {}

func (*SessionRequest_ReleaseSemaphore_) isSessionRequest_Request() {}

func (*SessionRequest_DescribeSemaphore_) isSessionRequest_Request() {}

func (*SessionRequest_CreateSemaphore_) isSessionRequest_Request() {}

func (*SessionRequest_UpdateSemaphore_) isSessionRequest_Request() {}

func (*SessionRequest_DeleteSemaphore_) isSessionRequest_Request() {}

func (*SessionRequest_Unsupported_13) isSessionRequest_Request() {}

func (*SessionRequest_Unsupported_14) isSessionRequest_Request() {}

func (*SessionRequest_Unsupported_15) isSessionRequest_Request() {}

func (m *SessionRequest) GetRequest() isSessionRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *SessionRequest) GetPing() *SessionRequest_PingPong {
	if x, ok := m.GetRequest().(*SessionRequest_Ping); ok {
		return x.Ping
	}
	return nil
}

func (m *SessionRequest) GetPong() *SessionRequest_PingPong {
	if x, ok := m.GetRequest().(*SessionRequest_Pong); ok {
		return x.Pong
	}
	return nil
}

func (m *SessionRequest) GetSessionStart() *SessionRequest_SessionStart {
	if x, ok := m.GetRequest().(*SessionRequest_SessionStart_); ok {
		return x.SessionStart
	}
	return nil
}

func (m *SessionRequest) GetSessionStop() *SessionRequest_SessionStop {
	if x, ok := m.GetRequest().(*SessionRequest_SessionStop_); ok {
		return x.SessionStop
	}
	return nil
}

func (m *SessionRequest) GetUnsupported_5() *Unsupported {
	if x, ok := m.GetRequest().(*SessionRequest_Unsupported_5); ok {
		return x.Unsupported_5
	}
	return nil
}

func (m *SessionRequest) GetUnsupported_6() *Unsupported {
	if x, ok := m.GetRequest().(*SessionRequest_Unsupported_6); ok {
		return x.Unsupported_6
	}
	return nil
}

func (m *SessionRequest) GetAcquireSemaphore() *SessionRequest_AcquireSemaphore {
	if x, ok := m.GetRequest().(*SessionRequest_AcquireSemaphore_); ok {
		return x.AcquireSemaphore
	}
	return nil
}

func (m *SessionRequest) GetReleaseSemaphore() *SessionRequest_ReleaseSemaphore {
	if x, ok := m.GetRequest().(*SessionRequest_ReleaseSemaphore_); ok {
		return x.ReleaseSemaphore
	}
	return nil
}

func (m *SessionRequest) GetDescribeSemaphore() *SessionRequest_DescribeSemaphore {
	if x, ok := m.GetRequest().(*SessionRequest_DescribeSemaphore_); ok {
		return x.DescribeSemaphore
	}
	return nil
}

func (m *SessionRequest) GetCreateSemaphore() *SessionRequest_CreateSemaphore {
	if x, ok := m.GetRequest().(*SessionRequest_CreateSemaphore_); ok {
		return x.CreateSemaphore
	}
	return nil
}

func (m *SessionRequest) GetUpdateSemaphore() *SessionRequest_UpdateSemaphore {
	if x, ok := m.GetRequest().(*SessionRequest_UpdateSemaphore_); ok {
		return x.UpdateSemaphore
	}
	return nil
}

func (m *SessionRequest) GetDeleteSemaphore() *SessionRequest_DeleteSemaphore {
	if x, ok := m.GetRequest().(*SessionRequest_DeleteSemaphore_); ok {
		return x.DeleteSemaphore
	}
	return nil
}

func (m *SessionRequest) GetUnsupported_13() *Unsupported {
	if x, ok := m.GetRequest().(*SessionRequest_Unsupported_13); ok {
		return x.Unsupported_13
	}
	return nil
}

func (m *SessionRequest) GetUnsupported_14() *Unsupported {
	if x, ok := m.GetRequest().(*SessionRequest_Unsupported_14); ok {
		return x.Unsupported_14
	}
	return nil
}

func (m *SessionRequest) GetUnsupported_15() *Unsupported {
	if x, ok := m.GetRequest().(*SessionRequest_Unsupported_15); ok {
		return x.Unsupported_15
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SessionRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SessionRequest_Ping)(nil),
		(*SessionRequest_Pong)(nil),
		(*SessionRequest_SessionStart_)(nil),
		(*SessionRequest_SessionStop_)(nil),
		(*SessionRequest_Unsupported_5)(nil),
		(*SessionRequest_Unsupported_6)(nil),
		(*SessionRequest_AcquireSemaphore_)(nil),
		(*SessionRequest_ReleaseSemaphore_)(nil),
		(*SessionRequest_DescribeSemaphore_)(nil),
		(*SessionRequest_CreateSemaphore_)(nil),
		(*SessionRequest_UpdateSemaphore_)(nil),
		(*SessionRequest_DeleteSemaphore_)(nil),
		(*SessionRequest_Unsupported_13)(nil),
		(*SessionRequest_Unsupported_14)(nil),
		(*SessionRequest_Unsupported_15)(nil),
	}
}

//*
// Used for checking liveness of the connection
type SessionRequest_PingPong struct {
	// Opaque number specified in the ping message is echoed in the pong message
	Opaque               uint64   `protobuf:"varint,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequest_PingPong) Reset()         { *m = SessionRequest_PingPong{} }
func (m *SessionRequest_PingPong) String() string { return proto.CompactTextString(m) }
func (*SessionRequest_PingPong) ProtoMessage()    {}
func (*SessionRequest_PingPong) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{5, 0}
}

func (m *SessionRequest_PingPong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest_PingPong.Unmarshal(m, b)
}
func (m *SessionRequest_PingPong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest_PingPong.Marshal(b, m, deterministic)
}
func (m *SessionRequest_PingPong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest_PingPong.Merge(m, src)
}
func (m *SessionRequest_PingPong) XXX_Size() int {
	return xxx_messageInfo_SessionRequest_PingPong.Size(m)
}
func (m *SessionRequest_PingPong) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest_PingPong.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest_PingPong proto.InternalMessageInfo

func (m *SessionRequest_PingPong) GetOpaque() uint64 {
	if m != nil {
		return m.Opaque
	}
	return 0
}

//*
// First message used to start/restore a session
type SessionRequest_SessionStart struct {
	// Path to a coordination node
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Non-zero when restoring a session, 0 when creating a new session
	SessionId uint64 `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Timeout in milliseconds during which client may restore a detached session
	TimeoutMillis uint64 `protobuf:"varint,3,opt,name=timeout_millis,json=timeoutMillis,proto3" json:"timeout_millis,omitempty"`
	// User-defined description that may be used to describe the client
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Monotonically increasing sequence number generated by the client
	// When concurrent SessionStart requests are detected the one with
	// the biggest sequence number will succeed
	SeqNo uint64 `protobuf:"varint,5,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	// Random bytes used to protect session from restore by other clients (max. 16 bytes)
	ProtectionKey        []byte   `protobuf:"bytes,6,opt,name=protection_key,json=protectionKey,proto3" json:"protection_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequest_SessionStart) Reset()         { *m = SessionRequest_SessionStart{} }
func (m *SessionRequest_SessionStart) String() string { return proto.CompactTextString(m) }
func (*SessionRequest_SessionStart) ProtoMessage()    {}
func (*SessionRequest_SessionStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{5, 1}
}

func (m *SessionRequest_SessionStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest_SessionStart.Unmarshal(m, b)
}
func (m *SessionRequest_SessionStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest_SessionStart.Marshal(b, m, deterministic)
}
func (m *SessionRequest_SessionStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest_SessionStart.Merge(m, src)
}
func (m *SessionRequest_SessionStart) XXX_Size() int {
	return xxx_messageInfo_SessionRequest_SessionStart.Size(m)
}
func (m *SessionRequest_SessionStart) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest_SessionStart.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest_SessionStart proto.InternalMessageInfo

func (m *SessionRequest_SessionStart) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *SessionRequest_SessionStart) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *SessionRequest_SessionStart) GetTimeoutMillis() uint64 {
	if m != nil {
		return m.TimeoutMillis
	}
	return 0
}

func (m *SessionRequest_SessionStart) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SessionRequest_SessionStart) GetSeqNo() uint64 {
	if m != nil {
		return m.SeqNo
	}
	return 0
}

func (m *SessionRequest_SessionStart) GetProtectionKey() []byte {
	if m != nil {
		return m.ProtectionKey
	}
	return nil
}

//*
// Last message used to cleanly stop session before its timeout expires
type SessionRequest_SessionStop struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequest_SessionStop) Reset()         { *m = SessionRequest_SessionStop{} }
func (m *SessionRequest_SessionStop) String() string { return proto.CompactTextString(m) }
func (*SessionRequest_SessionStop) ProtoMessage()    {}
func (*SessionRequest_SessionStop) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{5, 2}
}

func (m *SessionRequest_SessionStop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest_SessionStop.Unmarshal(m, b)
}
func (m *SessionRequest_SessionStop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest_SessionStop.Marshal(b, m, deterministic)
}
func (m *SessionRequest_SessionStop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest_SessionStop.Merge(m, src)
}
func (m *SessionRequest_SessionStop) XXX_Size() int {
	return xxx_messageInfo_SessionRequest_SessionStop.Size(m)
}
func (m *SessionRequest_SessionStop) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest_SessionStop.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest_SessionStop proto.InternalMessageInfo

//*
// Used to acquire a semaphore
//
// WARNING: a single session cannot acquire the same semaphore multiple times
//
// Later requests override previous operations with the same semaphore,
// e.g. to reduce acquired count, change timeout or attached data.
type SessionRequest_AcquireSemaphore struct {
	// Client-defined request id, echoed in the response
	ReqId uint64 `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	// Name of the semaphore to acquire
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Timeout in milliseconds after which operation will fail
	// if it's still waiting in the waiters queue
	TimeoutMillis uint64 `protobuf:"varint,3,opt,name=timeout_millis,json=timeoutMillis,proto3" json:"timeout_millis,omitempty"`
	// Number of tokens to acquire on the semaphore
	Count uint64 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	// User-defined binary data that may be attached to the operation
	Data []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	// Ephemeral semaphores are created with the first acquire operation
	// and automatically deleted with the last release operation
	Ephemeral            bool     `protobuf:"varint,6,opt,name=ephemeral,proto3" json:"ephemeral,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequest_AcquireSemaphore) Reset()         { *m = SessionRequest_AcquireSemaphore{} }
func (m *SessionRequest_AcquireSemaphore) String() string { return proto.CompactTextString(m) }
func (*SessionRequest_AcquireSemaphore) ProtoMessage()    {}
func (*SessionRequest_AcquireSemaphore) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{5, 3}
}

func (m *SessionRequest_AcquireSemaphore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest_AcquireSemaphore.Unmarshal(m, b)
}
func (m *SessionRequest_AcquireSemaphore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest_AcquireSemaphore.Marshal(b, m, deterministic)
}
func (m *SessionRequest_AcquireSemaphore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest_AcquireSemaphore.Merge(m, src)
}
func (m *SessionRequest_AcquireSemaphore) XXX_Size() int {
	return xxx_messageInfo_SessionRequest_AcquireSemaphore.Size(m)
}
func (m *SessionRequest_AcquireSemaphore) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest_AcquireSemaphore.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest_AcquireSemaphore proto.InternalMessageInfo

func (m *SessionRequest_AcquireSemaphore) GetReqId() uint64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *SessionRequest_AcquireSemaphore) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SessionRequest_AcquireSemaphore) GetTimeoutMillis() uint64 {
	if m != nil {
		return m.TimeoutMillis
	}
	return 0
}

func (m *SessionRequest_AcquireSemaphore) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SessionRequest_AcquireSemaphore) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SessionRequest_AcquireSemaphore) GetEphemeral() bool {
	if m != nil {
		return m.Ephemeral
	}
	return false
}

//*
// Used to release a semaphore
//
// WARNING: a single session cannot release the same semaphore multiple times
//
// The release operation will either remove current session from waiters
// queue or release an already owned semaphore.
type SessionRequest_ReleaseSemaphore struct {
	// Client-defined request id, echoed in the response
	ReqId uint64 `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	// Name of the semaphore to release
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequest_ReleaseSemaphore) Reset()         { *m = SessionRequest_ReleaseSemaphore{} }
func (m *SessionRequest_ReleaseSemaphore) String() string { return proto.CompactTextString(m) }
func (*SessionRequest_ReleaseSemaphore) ProtoMessage()    {}
func (*SessionRequest_ReleaseSemaphore) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{5, 4}
}

func (m *SessionRequest_ReleaseSemaphore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest_ReleaseSemaphore.Unmarshal(m, b)
}
func (m *SessionRequest_ReleaseSemaphore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest_ReleaseSemaphore.Marshal(b, m, deterministic)
}
func (m *SessionRequest_ReleaseSemaphore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest_ReleaseSemaphore.Merge(m, src)
}
func (m *SessionRequest_ReleaseSemaphore) XXX_Size() int {
	return xxx_messageInfo_SessionRequest_ReleaseSemaphore.Size(m)
}
func (m *SessionRequest_ReleaseSemaphore) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest_ReleaseSemaphore.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest_ReleaseSemaphore proto.InternalMessageInfo

func (m *SessionRequest_ReleaseSemaphore) GetReqId() uint64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *SessionRequest_ReleaseSemaphore) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

//*
// Used to describe semaphores and watch them for changes
//
// WARNING: a describe operation will cancel previous watches on the same semaphore
type SessionRequest_DescribeSemaphore struct {
	// Client-defined request id, echoed in the response
	ReqId uint64 `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	// Name of the semaphore to describe
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Response will include owners list if true
	IncludeOwners bool `protobuf:"varint,3,opt,name=include_owners,json=includeOwners,proto3" json:"include_owners,omitempty"`
	// Response will include waiters list if true
	IncludeWaiters bool `protobuf:"varint,4,opt,name=include_waiters,json=includeWaiters,proto3" json:"include_waiters,omitempty"`
	// Watch for changes in semaphore data
	WatchData bool `protobuf:"varint,5,opt,name=watch_data,json=watchData,proto3" json:"watch_data,omitempty"`
	// Watch for changes in semaphore owners (including owners data)
	WatchOwners          bool     `protobuf:"varint,6,opt,name=watch_owners,json=watchOwners,proto3" json:"watch_owners,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequest_DescribeSemaphore) Reset()         { *m = SessionRequest_DescribeSemaphore{} }
func (m *SessionRequest_DescribeSemaphore) String() string { return proto.CompactTextString(m) }
func (*SessionRequest_DescribeSemaphore) ProtoMessage()    {}
func (*SessionRequest_DescribeSemaphore) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{5, 5}
}

func (m *SessionRequest_DescribeSemaphore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest_DescribeSemaphore.Unmarshal(m, b)
}
func (m *SessionRequest_DescribeSemaphore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest_DescribeSemaphore.Marshal(b, m, deterministic)
}
func (m *SessionRequest_DescribeSemaphore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest_DescribeSemaphore.Merge(m, src)
}
func (m *SessionRequest_DescribeSemaphore) XXX_Size() int {
	return xxx_messageInfo_SessionRequest_DescribeSemaphore.Size(m)
}
func (m *SessionRequest_DescribeSemaphore) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest_DescribeSemaphore.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest_DescribeSemaphore proto.InternalMessageInfo

func (m *SessionRequest_DescribeSemaphore) GetReqId() uint64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *SessionRequest_DescribeSemaphore) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SessionRequest_DescribeSemaphore) GetIncludeOwners() bool {
	if m != nil {
		return m.IncludeOwners
	}
	return false
}

func (m *SessionRequest_DescribeSemaphore) GetIncludeWaiters() bool {
	if m != nil {
		return m.IncludeWaiters
	}
	return false
}

func (m *SessionRequest_DescribeSemaphore) GetWatchData() bool {
	if m != nil {
		return m.WatchData
	}
	return false
}

func (m *SessionRequest_DescribeSemaphore) GetWatchOwners() bool {
	if m != nil {
		return m.WatchOwners
	}
	return false
}

//*
// Used to create a new semaphore
type SessionRequest_CreateSemaphore struct {
	// Client-defined request id, echoed in the response
	ReqId uint64 `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	// Name of the semaphore to create
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Number of tokens that may be acquired by sessions
	Limit uint64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// User-defined data that is attached to the semaphore
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequest_CreateSemaphore) Reset()         { *m = SessionRequest_CreateSemaphore{} }
func (m *SessionRequest_CreateSemaphore) String() string { return proto.CompactTextString(m) }
func (*SessionRequest_CreateSemaphore) ProtoMessage()    {}
func (*SessionRequest_CreateSemaphore) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{5, 6}
}

func (m *SessionRequest_CreateSemaphore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest_CreateSemaphore.Unmarshal(m, b)
}
func (m *SessionRequest_CreateSemaphore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest_CreateSemaphore.Marshal(b, m, deterministic)
}
func (m *SessionRequest_CreateSemaphore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest_CreateSemaphore.Merge(m, src)
}
func (m *SessionRequest_CreateSemaphore) XXX_Size() int {
	return xxx_messageInfo_SessionRequest_CreateSemaphore.Size(m)
}
func (m *SessionRequest_CreateSemaphore) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest_CreateSemaphore.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest_CreateSemaphore proto.InternalMessageInfo

func (m *SessionRequest_CreateSemaphore) GetReqId() uint64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *SessionRequest_CreateSemaphore) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SessionRequest_CreateSemaphore) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SessionRequest_CreateSemaphore) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

//*
// Used to change semaphore data
type SessionRequest_UpdateSemaphore struct {
	// Client-defined request id, echoed in the response
	ReqId uint64 `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	// Name of the semaphore to update
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// User-defined data that is attached to the semaphore
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequest_UpdateSemaphore) Reset()         { *m = SessionRequest_UpdateSemaphore{} }
func (m *SessionRequest_UpdateSemaphore) String() string { return proto.CompactTextString(m) }
func (*SessionRequest_UpdateSemaphore) ProtoMessage()    {}
func (*SessionRequest_UpdateSemaphore) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{5, 7}
}

func (m *SessionRequest_UpdateSemaphore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest_UpdateSemaphore.Unmarshal(m, b)
}
func (m *SessionRequest_UpdateSemaphore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest_UpdateSemaphore.Marshal(b, m, deterministic)
}
func (m *SessionRequest_UpdateSemaphore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest_UpdateSemaphore.Merge(m, src)
}
func (m *SessionRequest_UpdateSemaphore) XXX_Size() int {
	return xxx_messageInfo_SessionRequest_UpdateSemaphore.Size(m)
}
func (m *SessionRequest_UpdateSemaphore) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest_UpdateSemaphore.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest_UpdateSemaphore proto.InternalMessageInfo

func (m *SessionRequest_UpdateSemaphore) GetReqId() uint64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *SessionRequest_UpdateSemaphore) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SessionRequest_UpdateSemaphore) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

//*
// Used to delete an existing semaphore
type SessionRequest_DeleteSemaphore struct {
	// Client-defined request id, echoed in the response
	ReqId uint64 `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	// Name of the semaphore to delete
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Will delete semaphore even if currently acquired by sessions
	Force                bool     `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequest_DeleteSemaphore) Reset()         { *m = SessionRequest_DeleteSemaphore{} }
func (m *SessionRequest_DeleteSemaphore) String() string { return proto.CompactTextString(m) }
func (*SessionRequest_DeleteSemaphore) ProtoMessage()    {}
func (*SessionRequest_DeleteSemaphore) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{5, 8}
}

func (m *SessionRequest_DeleteSemaphore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest_DeleteSemaphore.Unmarshal(m, b)
}
func (m *SessionRequest_DeleteSemaphore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest_DeleteSemaphore.Marshal(b, m, deterministic)
}
func (m *SessionRequest_DeleteSemaphore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest_DeleteSemaphore.Merge(m, src)
}
func (m *SessionRequest_DeleteSemaphore) XXX_Size() int {
	return xxx_messageInfo_SessionRequest_DeleteSemaphore.Size(m)
}
func (m *SessionRequest_DeleteSemaphore) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest_DeleteSemaphore.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest_DeleteSemaphore proto.InternalMessageInfo

func (m *SessionRequest_DeleteSemaphore) GetReqId() uint64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *SessionRequest_DeleteSemaphore) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SessionRequest_DeleteSemaphore) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

//*
// Session response message sent from server to client
type SessionResponse struct {
	// Types that are valid to be assigned to Response:
	//	*SessionResponse_Ping
	//	*SessionResponse_Pong
	//	*SessionResponse_Failure_
	//	*SessionResponse_SessionStarted_
	//	*SessionResponse_SessionStopped_
	//	*SessionResponse_Unsupported_6
	//	*SessionResponse_Unsupported_7
	//	*SessionResponse_AcquireSemaphorePending_
	//	*SessionResponse_AcquireSemaphoreResult_
	//	*SessionResponse_ReleaseSemaphoreResult_
	//	*SessionResponse_DescribeSemaphoreResult_
	//	*SessionResponse_DescribeSemaphoreChanged_
	//	*SessionResponse_CreateSemaphoreResult_
	//	*SessionResponse_UpdateSemaphoreResult_
	//	*SessionResponse_DeleteSemaphoreResult_
	//	*SessionResponse_Unsupported_16
	//	*SessionResponse_Unsupported_17
	//	*SessionResponse_Unsupported_18
	Response             isSessionResponse_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SessionResponse) Reset()         { *m = SessionResponse{} }
func (m *SessionResponse) String() string { return proto.CompactTextString(m) }
func (*SessionResponse) ProtoMessage()    {}
func (*SessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{6}
}

func (m *SessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse.Unmarshal(m, b)
}
func (m *SessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse.Marshal(b, m, deterministic)
}
func (m *SessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse.Merge(m, src)
}
func (m *SessionResponse) XXX_Size() int {
	return xxx_messageInfo_SessionResponse.Size(m)
}
func (m *SessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse proto.InternalMessageInfo

type isSessionResponse_Response interface {
	isSessionResponse_Response()
}

type SessionResponse_Ping struct {
	Ping *SessionResponse_PingPong `protobuf:"bytes,1,opt,name=ping,proto3,oneof"`
}

type SessionResponse_Pong struct {
	Pong *SessionResponse_PingPong `protobuf:"bytes,2,opt,name=pong,proto3,oneof"`
}

type SessionResponse_Failure_ struct {
	Failure *SessionResponse_Failure `protobuf:"bytes,3,opt,name=failure,proto3,oneof"`
}

type SessionResponse_SessionStarted_ struct {
	SessionStarted *SessionResponse_SessionStarted `protobuf:"bytes,4,opt,name=session_started,json=sessionStarted,proto3,oneof"`
}

type SessionResponse_SessionStopped_ struct {
	SessionStopped *SessionResponse_SessionStopped `protobuf:"bytes,5,opt,name=session_stopped,json=sessionStopped,proto3,oneof"`
}

type SessionResponse_Unsupported_6 struct {
	Unsupported_6 *Unsupported `protobuf:"bytes,6,opt,name=unsupported_6,json=unsupported6,proto3,oneof"`
}

type SessionResponse_Unsupported_7 struct {
	Unsupported_7 *Unsupported `protobuf:"bytes,7,opt,name=unsupported_7,json=unsupported7,proto3,oneof"`
}

type SessionResponse_AcquireSemaphorePending_ struct {
	AcquireSemaphorePending *SessionResponse_AcquireSemaphorePending `protobuf:"bytes,8,opt,name=acquire_semaphore_pending,json=acquireSemaphorePending,proto3,oneof"`
}

type SessionResponse_AcquireSemaphoreResult_ struct {
	AcquireSemaphoreResult *SessionResponse_AcquireSemaphoreResult `protobuf:"bytes,9,opt,name=acquire_semaphore_result,json=acquireSemaphoreResult,proto3,oneof"`
}

type SessionResponse_ReleaseSemaphoreResult_ struct {
	ReleaseSemaphoreResult *SessionResponse_ReleaseSemaphoreResult `protobuf:"bytes,10,opt,name=release_semaphore_result,json=releaseSemaphoreResult,proto3,oneof"`
}

type SessionResponse_DescribeSemaphoreResult_ struct {
	DescribeSemaphoreResult *SessionResponse_DescribeSemaphoreResult `protobuf:"bytes,11,opt,name=describe_semaphore_result,json=describeSemaphoreResult,proto3,oneof"`
}

type SessionResponse_DescribeSemaphoreChanged_ struct {
	DescribeSemaphoreChanged *SessionResponse_DescribeSemaphoreChanged `protobuf:"bytes,12,opt,name=describe_semaphore_changed,json=describeSemaphoreChanged,proto3,oneof"`
}

type SessionResponse_CreateSemaphoreResult_ struct {
	CreateSemaphoreResult *SessionResponse_CreateSemaphoreResult `protobuf:"bytes,13,opt,name=create_semaphore_result,json=createSemaphoreResult,proto3,oneof"`
}

type SessionResponse_UpdateSemaphoreResult_ struct {
	UpdateSemaphoreResult *SessionResponse_UpdateSemaphoreResult `protobuf:"bytes,14,opt,name=update_semaphore_result,json=updateSemaphoreResult,proto3,oneof"`
}

type SessionResponse_DeleteSemaphoreResult_ struct {
	DeleteSemaphoreResult *SessionResponse_DeleteSemaphoreResult `protobuf:"bytes,15,opt,name=delete_semaphore_result,json=deleteSemaphoreResult,proto3,oneof"`
}

type SessionResponse_Unsupported_16 struct {
	Unsupported_16 *Unsupported `protobuf:"bytes,16,opt,name=unsupported_16,json=unsupported16,proto3,oneof"`
}

type SessionResponse_Unsupported_17 struct {
	Unsupported_17 *Unsupported `protobuf:"bytes,17,opt,name=unsupported_17,json=unsupported17,proto3,oneof"`
}

type SessionResponse_Unsupported_18 struct {
	Unsupported_18 *Unsupported `protobuf:"bytes,18,opt,name=unsupported_18,json=unsupported18,proto3,oneof"`
}

func (*SessionResponse_Ping) isSessionResponse_Response() {}

func (*SessionResponse_Pong) isSessionResponse_Response() {}

func (*SessionResponse_Failure_) isSessionResponse_Response() {}

func (*SessionResponse_SessionStarted_) isSessionResponse_Response() {}

func (*SessionResponse_SessionStopped_) isSessionResponse_Response() {}

func (*SessionResponse_Unsupported_6) isSessionResponse_Response() {}

func (*SessionResponse_Unsupported_7) isSessionResponse_Response() {}

func (*SessionResponse_AcquireSemaphorePending_) isSessionResponse_Response() {}

func (*SessionResponse_AcquireSemaphoreResult_) isSessionResponse_Response() {}

func (*SessionResponse_ReleaseSemaphoreResult_) isSessionResponse_Response() {}

func (*SessionResponse_DescribeSemaphoreResult_) isSessionResponse_Response() {}

func (*SessionResponse_DescribeSemaphoreChanged_) isSessionResponse_Response() {}

func (*SessionResponse_CreateSemaphoreResult_) isSessionResponse_Response() {}

func (*SessionResponse_UpdateSemaphoreResult_) isSessionResponse_Response() {}

func (*SessionResponse_DeleteSemaphoreResult_) isSessionResponse_Response() {}

func (*SessionResponse_Unsupported_16) isSessionResponse_Response() {}

func (*SessionResponse_Unsupported_17) isSessionResponse_Response() {}

func (*SessionResponse_Unsupported_18) isSessionResponse_Response() {}

func (m *SessionResponse) GetResponse() isSessionResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *SessionResponse) GetPing() *SessionResponse_PingPong {
	if x, ok := m.GetResponse().(*SessionResponse_Ping); ok {
		return x.Ping
	}
	return nil
}

func (m *SessionResponse) GetPong() *SessionResponse_PingPong {
	if x, ok := m.GetResponse().(*SessionResponse_Pong); ok {
		return x.Pong
	}
	return nil
}

func (m *SessionResponse) GetFailure() *SessionResponse_Failure {
	if x, ok := m.GetResponse().(*SessionResponse_Failure_); ok {
		return x.Failure
	}
	return nil
}

func (m *SessionResponse) GetSessionStarted() *SessionResponse_SessionStarted {
	if x, ok := m.GetResponse().(*SessionResponse_SessionStarted_); ok {
		return x.SessionStarted
	}
	return nil
}

func (m *SessionResponse) GetSessionStopped() *SessionResponse_SessionStopped {
	if x, ok := m.GetResponse().(*SessionResponse_SessionStopped_); ok {
		return x.SessionStopped
	}
	return nil
}

func (m *SessionResponse) GetUnsupported_6() *Unsupported {
	if x, ok := m.GetResponse().(*SessionResponse_Unsupported_6); ok {
		return x.Unsupported_6
	}
	return nil
}

func (m *SessionResponse) GetUnsupported_7() *Unsupported {
	if x, ok := m.GetResponse().(*SessionResponse_Unsupported_7); ok {
		return x.Unsupported_7
	}
	return nil
}

func (m *SessionResponse) GetAcquireSemaphorePending() *SessionResponse_AcquireSemaphorePending {
	if x, ok := m.GetResponse().(*SessionResponse_AcquireSemaphorePending_); ok {
		return x.AcquireSemaphorePending
	}
	return nil
}

func (m *SessionResponse) GetAcquireSemaphoreResult() *SessionResponse_AcquireSemaphoreResult {
	if x, ok := m.GetResponse().(*SessionResponse_AcquireSemaphoreResult_); ok {
		return x.AcquireSemaphoreResult
	}
	return nil
}

func (m *SessionResponse) GetReleaseSemaphoreResult() *SessionResponse_ReleaseSemaphoreResult {
	if x, ok := m.GetResponse().(*SessionResponse_ReleaseSemaphoreResult_); ok {
		return x.ReleaseSemaphoreResult
	}
	return nil
}

func (m *SessionResponse) GetDescribeSemaphoreResult() *SessionResponse_DescribeSemaphoreResult {
	if x, ok := m.GetResponse().(*SessionResponse_DescribeSemaphoreResult_); ok {
		return x.DescribeSemaphoreResult
	}
	return nil
}

func (m *SessionResponse) GetDescribeSemaphoreChanged() *SessionResponse_DescribeSemaphoreChanged {
	if x, ok := m.GetResponse().(*SessionResponse_DescribeSemaphoreChanged_); ok {
		return x.DescribeSemaphoreChanged
	}
	return nil
}

func (m *SessionResponse) GetCreateSemaphoreResult() *SessionResponse_CreateSemaphoreResult {
	if x, ok := m.GetResponse().(*SessionResponse_CreateSemaphoreResult_); ok {
		return x.CreateSemaphoreResult
	}
	return nil
}

func (m *SessionResponse) GetUpdateSemaphoreResult() *SessionResponse_UpdateSemaphoreResult {
	if x, ok := m.GetResponse().(*SessionResponse_UpdateSemaphoreResult_); ok {
		return x.UpdateSemaphoreResult
	}
	return nil
}

func (m *SessionResponse) GetDeleteSemaphoreResult() *SessionResponse_DeleteSemaphoreResult {
	if x, ok := m.GetResponse().(*SessionResponse_DeleteSemaphoreResult_); ok {
		return x.DeleteSemaphoreResult
	}
	return nil
}

func (m *SessionResponse) GetUnsupported_16() *Unsupported {
	if x, ok := m.GetResponse().(*SessionResponse_Unsupported_16); ok {
		return x.Unsupported_16
	}
	return nil
}

func (m *SessionResponse) GetUnsupported_17() *Unsupported {
	if x, ok := m.GetResponse().(*SessionResponse_Unsupported_17); ok {
		return x.Unsupported_17
	}
	return nil
}

func (m *SessionResponse) GetUnsupported_18() *Unsupported {
	if x, ok := m.GetResponse().(*SessionResponse_Unsupported_18); ok {
		return x.Unsupported_18
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SessionResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SessionResponse_Ping)(nil),
		(*SessionResponse_Pong)(nil),
		(*SessionResponse_Failure_)(nil),
		(*SessionResponse_SessionStarted_)(nil),
		(*SessionResponse_SessionStopped_)(nil),
		(*SessionResponse_Unsupported_6)(nil),
		(*SessionResponse_Unsupported_7)(nil),
		(*SessionResponse_AcquireSemaphorePending_)(nil),
		(*SessionResponse_AcquireSemaphoreResult_)(nil),
		(*SessionResponse_ReleaseSemaphoreResult_)(nil),
		(*SessionResponse_DescribeSemaphoreResult_)(nil),
		(*SessionResponse_DescribeSemaphoreChanged_)(nil),
		(*SessionResponse_CreateSemaphoreResult_)(nil),
		(*SessionResponse_UpdateSemaphoreResult_)(nil),
		(*SessionResponse_DeleteSemaphoreResult_)(nil),
		(*SessionResponse_Unsupported_16)(nil),
		(*SessionResponse_Unsupported_17)(nil),
		(*SessionResponse_Unsupported_18)(nil),
	}
}

//*
// Used for checking liveness of the connection
type SessionResponse_PingPong struct {
	// Opaque number specified in the ping message is echoed in the pong message
	Opaque               uint64   `protobuf:"varint,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionResponse_PingPong) Reset()         { *m = SessionResponse_PingPong{} }
func (m *SessionResponse_PingPong) String() string { return proto.CompactTextString(m) }
func (*SessionResponse_PingPong) ProtoMessage()    {}
func (*SessionResponse_PingPong) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{6, 0}
}

func (m *SessionResponse_PingPong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse_PingPong.Unmarshal(m, b)
}
func (m *SessionResponse_PingPong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse_PingPong.Marshal(b, m, deterministic)
}
func (m *SessionResponse_PingPong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse_PingPong.Merge(m, src)
}
func (m *SessionResponse_PingPong) XXX_Size() int {
	return xxx_messageInfo_SessionResponse_PingPong.Size(m)
}
func (m *SessionResponse_PingPong) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse_PingPong.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse_PingPong proto.InternalMessageInfo

func (m *SessionResponse_PingPong) GetOpaque() uint64 {
	if m != nil {
		return m.Opaque
	}
	return 0
}

//*
// Used to report connection and session level failures
type SessionResponse_Failure struct {
	Status               Ydb.StatusIds_StatusCode  `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues               []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SessionResponse_Failure) Reset()         { *m = SessionResponse_Failure{} }
func (m *SessionResponse_Failure) String() string { return proto.CompactTextString(m) }
func (*SessionResponse_Failure) ProtoMessage()    {}
func (*SessionResponse_Failure) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{6, 1}
}

func (m *SessionResponse_Failure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse_Failure.Unmarshal(m, b)
}
func (m *SessionResponse_Failure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse_Failure.Marshal(b, m, deterministic)
}
func (m *SessionResponse_Failure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse_Failure.Merge(m, src)
}
func (m *SessionResponse_Failure) XXX_Size() int {
	return xxx_messageInfo_SessionResponse_Failure.Size(m)
}
func (m *SessionResponse_Failure) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse_Failure.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse_Failure proto.InternalMessageInfo

func (m *SessionResponse_Failure) GetStatus() Ydb.StatusIds_StatusCode {
	if m != nil {
		return m.Status
	}
	return Ydb.StatusIds_STATUS_CODE_UNSPECIFIED
}

func (m *SessionResponse_Failure) GetIssues() []*Ydb_Issue.IssueMessage {
	if m != nil {
		return m.Issues
	}
	return nil
}

//*
// Used to report a successful session create/restore operation
type SessionResponse_SessionStarted struct {
	// A server generation id that may be used for restoring the session
	SessionId uint64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Timeout in milliseconds that will be used by the server
	TimeoutMillis        uint64   `protobuf:"varint,2,opt,name=timeout_millis,json=timeoutMillis,proto3" json:"timeout_millis,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionResponse_SessionStarted) Reset()         { *m = SessionResponse_SessionStarted{} }
func (m *SessionResponse_SessionStarted) String() string { return proto.CompactTextString(m) }
func (*SessionResponse_SessionStarted) ProtoMessage()    {}
func (*SessionResponse_SessionStarted) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{6, 2}
}

func (m *SessionResponse_SessionStarted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse_SessionStarted.Unmarshal(m, b)
}
func (m *SessionResponse_SessionStarted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse_SessionStarted.Marshal(b, m, deterministic)
}
func (m *SessionResponse_SessionStarted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse_SessionStarted.Merge(m, src)
}
func (m *SessionResponse_SessionStarted) XXX_Size() int {
	return xxx_messageInfo_SessionResponse_SessionStarted.Size(m)
}
func (m *SessionResponse_SessionStarted) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse_SessionStarted.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse_SessionStarted proto.InternalMessageInfo

func (m *SessionResponse_SessionStarted) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *SessionResponse_SessionStarted) GetTimeoutMillis() uint64 {
	if m != nil {
		return m.TimeoutMillis
	}
	return 0
}

//*
// Used to report a successful graceful termination of the session
type SessionResponse_SessionStopped struct {
	SessionId            uint64   `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionResponse_SessionStopped) Reset()         { *m = SessionResponse_SessionStopped{} }
func (m *SessionResponse_SessionStopped) String() string { return proto.CompactTextString(m) }
func (*SessionResponse_SessionStopped) ProtoMessage()    {}
func (*SessionResponse_SessionStopped) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{6, 3}
}

func (m *SessionResponse_SessionStopped) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse_SessionStopped.Unmarshal(m, b)
}
func (m *SessionResponse_SessionStopped) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse_SessionStopped.Marshal(b, m, deterministic)
}
func (m *SessionResponse_SessionStopped) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse_SessionStopped.Merge(m, src)
}
func (m *SessionResponse_SessionStopped) XXX_Size() int {
	return xxx_messageInfo_SessionResponse_SessionStopped.Size(m)
}
func (m *SessionResponse_SessionStopped) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse_SessionStopped.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse_SessionStopped proto.InternalMessageInfo

func (m *SessionResponse_SessionStopped) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

//*
// Used by the server to report when an acquire operation is added to the waiters queue
type SessionResponse_AcquireSemaphorePending struct {
	ReqId                uint64   `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionResponse_AcquireSemaphorePending) Reset() {
	*m = SessionResponse_AcquireSemaphorePending{}
}
func (m *SessionResponse_AcquireSemaphorePending) String() string { return proto.CompactTextString(m) }
func (*SessionResponse_AcquireSemaphorePending) ProtoMessage()    {}
func (*SessionResponse_AcquireSemaphorePending) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{6, 4}
}

func (m *SessionResponse_AcquireSemaphorePending) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse_AcquireSemaphorePending.Unmarshal(m, b)
}
func (m *SessionResponse_AcquireSemaphorePending) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse_AcquireSemaphorePending.Marshal(b, m, deterministic)
}
func (m *SessionResponse_AcquireSemaphorePending) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse_AcquireSemaphorePending.Merge(m, src)
}
func (m *SessionResponse_AcquireSemaphorePending) XXX_Size() int {
	return xxx_messageInfo_SessionResponse_AcquireSemaphorePending.Size(m)
}
func (m *SessionResponse_AcquireSemaphorePending) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse_AcquireSemaphorePending.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse_AcquireSemaphorePending proto.InternalMessageInfo

func (m *SessionResponse_AcquireSemaphorePending) GetReqId() uint64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

//*
// Used by the server to report the result of an acquire operation
type SessionResponse_AcquireSemaphoreResult struct {
	ReqId  uint64                    `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Status Ydb.StatusIds_StatusCode  `protobuf:"varint,2,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues []*Ydb_Issue.IssueMessage `protobuf:"bytes,3,rep,name=issues,proto3" json:"issues,omitempty"`
	// True if semaphore was acquired, false if acquire timed out
	Acquired             bool     `protobuf:"varint,4,opt,name=acquired,proto3" json:"acquired,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionResponse_AcquireSemaphoreResult) Reset() {
	*m = SessionResponse_AcquireSemaphoreResult{}
}
func (m *SessionResponse_AcquireSemaphoreResult) String() string { return proto.CompactTextString(m) }
func (*SessionResponse_AcquireSemaphoreResult) ProtoMessage()    {}
func (*SessionResponse_AcquireSemaphoreResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{6, 5}
}

func (m *SessionResponse_AcquireSemaphoreResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse_AcquireSemaphoreResult.Unmarshal(m, b)
}
func (m *SessionResponse_AcquireSemaphoreResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse_AcquireSemaphoreResult.Marshal(b, m, deterministic)
}
func (m *SessionResponse_AcquireSemaphoreResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse_AcquireSemaphoreResult.Merge(m, src)
}
func (m *SessionResponse_AcquireSemaphoreResult) XXX_Size() int {
	return xxx_messageInfo_SessionResponse_AcquireSemaphoreResult.Size(m)
}
func (m *SessionResponse_AcquireSemaphoreResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse_AcquireSemaphoreResult.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse_AcquireSemaphoreResult proto.InternalMessageInfo

func (m *SessionResponse_AcquireSemaphoreResult) GetReqId() uint64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *SessionResponse_AcquireSemaphoreResult) GetStatus() Ydb.StatusIds_StatusCode {
	if m != nil {
		return m.Status
	}
	return Ydb.StatusIds_STATUS_CODE_UNSPECIFIED
}

func (m *SessionResponse_AcquireSemaphoreResult) GetIssues() []*Ydb_Issue.IssueMessage {
	if m != nil {
		return m.Issues
	}
	return nil
}

func (m *SessionResponse_AcquireSemaphoreResult) GetAcquired() bool {
	if m != nil {
		return m.Acquired
	}
	return false
}

//*
// Used by the server to report the result of a release operation
type SessionResponse_ReleaseSemaphoreResult struct {
	ReqId  uint64                    `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Status Ydb.StatusIds_StatusCode  `protobuf:"varint,2,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues []*Ydb_Issue.IssueMessage `protobuf:"bytes,3,rep,name=issues,proto3" json:"issues,omitempty"`
	// True if semaphore was released, false if there was no active acquire operation
	Released             bool     `protobuf:"varint,4,opt,name=released,proto3" json:"released,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionResponse_ReleaseSemaphoreResult) Reset() {
	*m = SessionResponse_ReleaseSemaphoreResult{}
}
func (m *SessionResponse_ReleaseSemaphoreResult) String() string { return proto.CompactTextString(m) }
func (*SessionResponse_ReleaseSemaphoreResult) ProtoMessage()    {}
func (*SessionResponse_ReleaseSemaphoreResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{6, 6}
}

func (m *SessionResponse_ReleaseSemaphoreResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse_ReleaseSemaphoreResult.Unmarshal(m, b)
}
func (m *SessionResponse_ReleaseSemaphoreResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse_ReleaseSemaphoreResult.Marshal(b, m, deterministic)
}
func (m *SessionResponse_ReleaseSemaphoreResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse_ReleaseSemaphoreResult.Merge(m, src)
}
func (m *SessionResponse_ReleaseSemaphoreResult) XXX_Size() int {
	return xxx_messageInfo_SessionResponse_ReleaseSemaphoreResult.Size(m)
}
func (m *SessionResponse_ReleaseSemaphoreResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse_ReleaseSemaphoreResult.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse_ReleaseSemaphoreResult proto.InternalMessageInfo

func (m *SessionResponse_ReleaseSemaphoreResult) GetReqId() uint64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *SessionResponse_ReleaseSemaphoreResult) GetStatus() Ydb.StatusIds_StatusCode {
	if m != nil {
		return m.Status
	}
	return Ydb.StatusIds_STATUS_CODE_UNSPECIFIED
}

func (m *SessionResponse_ReleaseSemaphoreResult) GetIssues() []*Ydb_Issue.IssueMessage {
	if m != nil {
		return m.Issues
	}
	return nil
}

func (m *SessionResponse_ReleaseSemaphoreResult) GetReleased() bool {
	if m != nil {
		return m.Released
	}
	return false
}

//*
// The result of the describe operation
type SessionResponse_DescribeSemaphoreResult struct {
	ReqId                uint64                    `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Status               Ydb.StatusIds_StatusCode  `protobuf:"varint,2,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues               []*Ydb_Issue.IssueMessage `protobuf:"bytes,3,rep,name=issues,proto3" json:"issues,omitempty"`
	SemaphoreDescription *SemaphoreDescription     `protobuf:"bytes,4,opt,name=semaphore_description,json=semaphoreDescription,proto3" json:"semaphore_description,omitempty"`
	// True if a watch has been added for the semaphore
	WatchAdded           bool     `protobuf:"varint,5,opt,name=watch_added,json=watchAdded,proto3" json:"watch_added,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionResponse_DescribeSemaphoreResult) Reset() {
	*m = SessionResponse_DescribeSemaphoreResult{}
}
func (m *SessionResponse_DescribeSemaphoreResult) String() string { return proto.CompactTextString(m) }
func (*SessionResponse_DescribeSemaphoreResult) ProtoMessage()    {}
func (*SessionResponse_DescribeSemaphoreResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{6, 7}
}

func (m *SessionResponse_DescribeSemaphoreResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse_DescribeSemaphoreResult.Unmarshal(m, b)
}
func (m *SessionResponse_DescribeSemaphoreResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse_DescribeSemaphoreResult.Marshal(b, m, deterministic)
}
func (m *SessionResponse_DescribeSemaphoreResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse_DescribeSemaphoreResult.Merge(m, src)
}
func (m *SessionResponse_DescribeSemaphoreResult) XXX_Size() int {
	return xxx_messageInfo_SessionResponse_DescribeSemaphoreResult.Size(m)
}
func (m *SessionResponse_DescribeSemaphoreResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse_DescribeSemaphoreResult.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse_DescribeSemaphoreResult proto.InternalMessageInfo

func (m *SessionResponse_DescribeSemaphoreResult) GetReqId() uint64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *SessionResponse_DescribeSemaphoreResult) GetStatus() Ydb.StatusIds_StatusCode {
	if m != nil {
		return m.Status
	}
	return Ydb.StatusIds_STATUS_CODE_UNSPECIFIED
}

func (m *SessionResponse_DescribeSemaphoreResult) GetIssues() []*Ydb_Issue.IssueMessage {
	if m != nil {
		return m.Issues
	}
	return nil
}

func (m *SessionResponse_DescribeSemaphoreResult) GetSemaphoreDescription() *SemaphoreDescription {
	if m != nil {
		return m.SemaphoreDescription
	}
	return nil
}

func (m *SessionResponse_DescribeSemaphoreResult) GetWatchAdded() bool {
	if m != nil {
		return m.WatchAdded
	}
	return false
}

//*
// Used to report a change in the watched semaphore
type SessionResponse_DescribeSemaphoreChanged struct {
	ReqId                uint64   `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	DataChanged          bool     `protobuf:"varint,2,opt,name=data_changed,json=dataChanged,proto3" json:"data_changed,omitempty"`
	OwnersChanged        bool     `protobuf:"varint,3,opt,name=owners_changed,json=ownersChanged,proto3" json:"owners_changed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionResponse_DescribeSemaphoreChanged) Reset() {
	*m = SessionResponse_DescribeSemaphoreChanged{}
}
func (m *SessionResponse_DescribeSemaphoreChanged) String() string { return proto.CompactTextString(m) }
func (*SessionResponse_DescribeSemaphoreChanged) ProtoMessage()    {}
func (*SessionResponse_DescribeSemaphoreChanged) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{6, 8}
}

func (m *SessionResponse_DescribeSemaphoreChanged) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse_DescribeSemaphoreChanged.Unmarshal(m, b)
}
func (m *SessionResponse_DescribeSemaphoreChanged) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse_DescribeSemaphoreChanged.Marshal(b, m, deterministic)
}
func (m *SessionResponse_DescribeSemaphoreChanged) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse_DescribeSemaphoreChanged.Merge(m, src)
}
func (m *SessionResponse_DescribeSemaphoreChanged) XXX_Size() int {
	return xxx_messageInfo_SessionResponse_DescribeSemaphoreChanged.Size(m)
}
func (m *SessionResponse_DescribeSemaphoreChanged) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse_DescribeSemaphoreChanged.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse_DescribeSemaphoreChanged proto.InternalMessageInfo

func (m *SessionResponse_DescribeSemaphoreChanged) GetReqId() uint64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *SessionResponse_DescribeSemaphoreChanged) GetDataChanged() bool {
	if m != nil {
		return m.DataChanged
	}
	return false
}

func (m *SessionResponse_DescribeSemaphoreChanged) GetOwnersChanged() bool {
	if m != nil {
		return m.OwnersChanged
	}
	return false
}

//*
// The result of semaphore creation
type SessionResponse_CreateSemaphoreResult struct {
	ReqId                uint64                    `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Status               Ydb.StatusIds_StatusCode  `protobuf:"varint,2,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues               []*Ydb_Issue.IssueMessage `protobuf:"bytes,3,rep,name=issues,proto3" json:"issues,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SessionResponse_CreateSemaphoreResult) Reset()         { *m = SessionResponse_CreateSemaphoreResult{} }
func (m *SessionResponse_CreateSemaphoreResult) String() string { return proto.CompactTextString(m) }
func (*SessionResponse_CreateSemaphoreResult) ProtoMessage()    {}
func (*SessionResponse_CreateSemaphoreResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{6, 9}
}

func (m *SessionResponse_CreateSemaphoreResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse_CreateSemaphoreResult.Unmarshal(m, b)
}
func (m *SessionResponse_CreateSemaphoreResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse_CreateSemaphoreResult.Marshal(b, m, deterministic)
}
func (m *SessionResponse_CreateSemaphoreResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse_CreateSemaphoreResult.Merge(m, src)
}
func (m *SessionResponse_CreateSemaphoreResult) XXX_Size() int {
	return xxx_messageInfo_SessionResponse_CreateSemaphoreResult.Size(m)
}
func (m *SessionResponse_CreateSemaphoreResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse_CreateSemaphoreResult.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse_CreateSemaphoreResult proto.InternalMessageInfo

func (m *SessionResponse_CreateSemaphoreResult) GetReqId() uint64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *SessionResponse_CreateSemaphoreResult) GetStatus() Ydb.StatusIds_StatusCode {
	if m != nil {
		return m.Status
	}
	return Ydb.StatusIds_STATUS_CODE_UNSPECIFIED
}

func (m *SessionResponse_CreateSemaphoreResult) GetIssues() []*Ydb_Issue.IssueMessage {
	if m != nil {
		return m.Issues
	}
	return nil
}

//*
// The result of semaphore update
type SessionResponse_UpdateSemaphoreResult struct {
	ReqId                uint64                    `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Status               Ydb.StatusIds_StatusCode  `protobuf:"varint,2,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues               []*Ydb_Issue.IssueMessage `protobuf:"bytes,3,rep,name=issues,proto3" json:"issues,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SessionResponse_UpdateSemaphoreResult) Reset()         { *m = SessionResponse_UpdateSemaphoreResult{} }
func (m *SessionResponse_UpdateSemaphoreResult) String() string { return proto.CompactTextString(m) }
func (*SessionResponse_UpdateSemaphoreResult) ProtoMessage()    {}
func (*SessionResponse_UpdateSemaphoreResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{6, 10}
}

func (m *SessionResponse_UpdateSemaphoreResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse_UpdateSemaphoreResult.Unmarshal(m, b)
}
func (m *SessionResponse_UpdateSemaphoreResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse_UpdateSemaphoreResult.Marshal(b, m, deterministic)
}
func (m *SessionResponse_UpdateSemaphoreResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse_UpdateSemaphoreResult.Merge(m, src)
}
func (m *SessionResponse_UpdateSemaphoreResult) XXX_Size() int {
	return xxx_messageInfo_SessionResponse_UpdateSemaphoreResult.Size(m)
}
func (m *SessionResponse_UpdateSemaphoreResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse_UpdateSemaphoreResult.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse_UpdateSemaphoreResult proto.InternalMessageInfo

func (m *SessionResponse_UpdateSemaphoreResult) GetReqId() uint64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *SessionResponse_UpdateSemaphoreResult) GetStatus() Ydb.StatusIds_StatusCode {
	if m != nil {
		return m.Status
	}
	return Ydb.StatusIds_STATUS_CODE_UNSPECIFIED
}

func (m *SessionResponse_UpdateSemaphoreResult) GetIssues() []*Ydb_Issue.IssueMessage {
	if m != nil {
		return m.Issues
	}
	return nil
}

//*
// The result of semaphore deletion
type SessionResponse_DeleteSemaphoreResult struct {
	ReqId                uint64                    `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Status               Ydb.StatusIds_StatusCode  `protobuf:"varint,2,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues               []*Ydb_Issue.IssueMessage `protobuf:"bytes,3,rep,name=issues,proto3" json:"issues,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SessionResponse_DeleteSemaphoreResult) Reset()         { *m = SessionResponse_DeleteSemaphoreResult{} }
func (m *SessionResponse_DeleteSemaphoreResult) String() string { return proto.CompactTextString(m) }
func (*SessionResponse_DeleteSemaphoreResult) ProtoMessage()    {}
func (*SessionResponse_DeleteSemaphoreResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{6, 11}
}

func (m *SessionResponse_DeleteSemaphoreResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse_DeleteSemaphoreResult.Unmarshal(m, b)
}
func (m *SessionResponse_DeleteSemaphoreResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse_DeleteSemaphoreResult.Marshal(b, m, deterministic)
}
func (m *SessionResponse_DeleteSemaphoreResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse_DeleteSemaphoreResult.Merge(m, src)
}
func (m *SessionResponse_DeleteSemaphoreResult) XXX_Size() int {
	return xxx_messageInfo_SessionResponse_DeleteSemaphoreResult.Size(m)
}
func (m *SessionResponse_DeleteSemaphoreResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse_DeleteSemaphoreResult.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse_DeleteSemaphoreResult proto.InternalMessageInfo

func (m *SessionResponse_DeleteSemaphoreResult) GetReqId() uint64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *SessionResponse_DeleteSemaphoreResult) GetStatus() Ydb.StatusIds_StatusCode {
	if m != nil {
		return m.Status
	}
	return Ydb.StatusIds_STATUS_CODE_UNSPECIFIED
}

func (m *SessionResponse_DeleteSemaphoreResult) GetIssues() []*Ydb_Issue.IssueMessage {
	if m != nil {
		return m.Issues
	}
	return nil
}

type CreateNodeRequest struct {
	Path                 string                          `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Config               *Config                         `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	OperationParams      *Ydb_Operations.OperationParams `protobuf:"bytes,3,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CreateNodeRequest) Reset()         { *m = CreateNodeRequest{} }
func (m *CreateNodeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNodeRequest) ProtoMessage()    {}
func (*CreateNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{7}
}

func (m *CreateNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeRequest.Unmarshal(m, b)
}
func (m *CreateNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeRequest.Marshal(b, m, deterministic)
}
func (m *CreateNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeRequest.Merge(m, src)
}
func (m *CreateNodeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNodeRequest.Size(m)
}
func (m *CreateNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeRequest proto.InternalMessageInfo

func (m *CreateNodeRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CreateNodeRequest) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *CreateNodeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if m != nil {
		return m.OperationParams
	}
	return nil
}

type CreateNodeResponse struct {
	Operation            *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CreateNodeResponse) Reset()         { *m = CreateNodeResponse{} }
func (m *CreateNodeResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNodeResponse) ProtoMessage()    {}
func (*CreateNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{8}
}

func (m *CreateNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeResponse.Unmarshal(m, b)
}
func (m *CreateNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeResponse.Marshal(b, m, deterministic)
}
func (m *CreateNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeResponse.Merge(m, src)
}
func (m *CreateNodeResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNodeResponse.Size(m)
}
func (m *CreateNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeResponse proto.InternalMessageInfo

func (m *CreateNodeResponse) GetOperation() *Ydb_Operations.Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

type AlterNodeRequest struct {
	Path                 string                          `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Config               *Config                         `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	OperationParams      *Ydb_Operations.OperationParams `protobuf:"bytes,3,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *AlterNodeRequest) Reset()         { *m = AlterNodeRequest{} }
func (m *AlterNodeRequest) String() string { return proto.CompactTextString(m) }
func (*AlterNodeRequest) ProtoMessage()    {}
func (*AlterNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{9}
}

func (m *AlterNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlterNodeRequest.Unmarshal(m, b)
}
func (m *AlterNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlterNodeRequest.Marshal(b, m, deterministic)
}
func (m *AlterNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlterNodeRequest.Merge(m, src)
}
func (m *AlterNodeRequest) XXX_Size() int {
	return xxx_messageInfo_AlterNodeRequest.Size(m)
}
func (m *AlterNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AlterNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AlterNodeRequest proto.InternalMessageInfo

func (m *AlterNodeRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *AlterNodeRequest) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *AlterNodeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if m != nil {
		return m.OperationParams
	}
	return nil
}

type AlterNodeResponse struct {
	Operation            *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AlterNodeResponse) Reset()         { *m = AlterNodeResponse{} }
func (m *AlterNodeResponse) String() string { return proto.CompactTextString(m) }
func (*AlterNodeResponse) ProtoMessage()    {}
func (*AlterNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{10}
}

func (m *AlterNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlterNodeResponse.Unmarshal(m, b)
}
func (m *AlterNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlterNodeResponse.Marshal(b, m, deterministic)
}
func (m *AlterNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlterNodeResponse.Merge(m, src)
}
func (m *AlterNodeResponse) XXX_Size() int {
	return xxx_messageInfo_AlterNodeResponse.Size(m)
}
func (m *AlterNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AlterNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AlterNodeResponse proto.InternalMessageInfo

func (m *AlterNodeResponse) GetOperation() *Ydb_Operations.Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

type DropNodeRequest struct {
	Path                 string                          `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	OperationParams      *Ydb_Operations.OperationParams `protobuf:"bytes,2,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *DropNodeRequest) Reset()         { *m = DropNodeRequest{} }
func (m *DropNodeRequest) String() string { return proto.CompactTextString(m) }
func (*DropNodeRequest) ProtoMessage()    {}
func (*DropNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{11}
}

func (m *DropNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropNodeRequest.Unmarshal(m, b)
}
func (m *DropNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropNodeRequest.Marshal(b, m, deterministic)
}
func (m *DropNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropNodeRequest.Merge(m, src)
}
func (m *DropNodeRequest) XXX_Size() int {
	return xxx_messageInfo_DropNodeRequest.Size(m)
}
func (m *DropNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DropNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DropNodeRequest proto.InternalMessageInfo

func (m *DropNodeRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *DropNodeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if m != nil {
		return m.OperationParams
	}
	return nil
}

type DropNodeResponse struct {
	Operation            *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DropNodeResponse) Reset()         { *m = DropNodeResponse{} }
func (m *DropNodeResponse) String() string { return proto.CompactTextString(m) }
func (*DropNodeResponse) ProtoMessage()    {}
func (*DropNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{12}
}

func (m *DropNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropNodeResponse.Unmarshal(m, b)
}
func (m *DropNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropNodeResponse.Marshal(b, m, deterministic)
}
func (m *DropNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropNodeResponse.Merge(m, src)
}
func (m *DropNodeResponse) XXX_Size() int {
	return xxx_messageInfo_DropNodeResponse.Size(m)
}
func (m *DropNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DropNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DropNodeResponse proto.InternalMessageInfo

func (m *DropNodeResponse) GetOperation() *Ydb_Operations.Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

type DescribeNodeRequest struct {
	Path                 string                          `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	OperationParams      *Ydb_Operations.OperationParams `protobuf:"bytes,2,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *DescribeNodeRequest) Reset()         { *m = DescribeNodeRequest{} }
func (m *DescribeNodeRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeNodeRequest) ProtoMessage()    {}
func (*DescribeNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{13}
}

func (m *DescribeNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeNodeRequest.Unmarshal(m, b)
}
func (m *DescribeNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeNodeRequest.Marshal(b, m, deterministic)
}
func (m *DescribeNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeNodeRequest.Merge(m, src)
}
func (m *DescribeNodeRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeNodeRequest.Size(m)
}
func (m *DescribeNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeNodeRequest proto.InternalMessageInfo

func (m *DescribeNodeRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *DescribeNodeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if m != nil {
		return m.OperationParams
	}
	return nil
}

type DescribeNodeResponse struct {
	Operation            *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DescribeNodeResponse) Reset()         { *m = DescribeNodeResponse{} }
func (m *DescribeNodeResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeNodeResponse) ProtoMessage()    {}
func (*DescribeNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{14}
}

func (m *DescribeNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeNodeResponse.Unmarshal(m, b)
}
func (m *DescribeNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeNodeResponse.Marshal(b, m, deterministic)
}
func (m *DescribeNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeNodeResponse.Merge(m, src)
}
func (m *DescribeNodeResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeNodeResponse.Size(m)
}
func (m *DescribeNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeNodeResponse proto.InternalMessageInfo

func (m *DescribeNodeResponse) GetOperation() *Ydb_Operations.Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

type DescribeNodeResult struct {
	Self                 *Ydb_Scheme.Entry `protobuf:"bytes,1,opt,name=self,proto3" json:"self,omitempty"`
	Config               *Config           `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DescribeNodeResult) Reset()         { *m = DescribeNodeResult{} }
func (m *DescribeNodeResult) String() string { return proto.CompactTextString(m) }
func (*DescribeNodeResult) ProtoMessage()    {}
func (*DescribeNodeResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9a2a9ea29b22c6a, []int{15}
}

func (m *DescribeNodeResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeNodeResult.Unmarshal(m, b)
}
func (m *DescribeNodeResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeNodeResult.Marshal(b, m, deterministic)
}
func (m *DescribeNodeResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeNodeResult.Merge(m, src)
}
func (m *DescribeNodeResult) XXX_Size() int {
	return xxx_messageInfo_DescribeNodeResult.Size(m)
}
func (m *DescribeNodeResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeNodeResult.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeNodeResult proto.InternalMessageInfo

func (m *DescribeNodeResult) GetSelf() *Ydb_Scheme.Entry {
	if m != nil {
		return m.Self
	}
	return nil
}

func (m *DescribeNodeResult) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterEnum("Ydb.Coordination.ConsistencyMode", ConsistencyMode_name, ConsistencyMode_value)
	proto.RegisterEnum("Ydb.Coordination.RateLimiterCountersMode", RateLimiterCountersMode_name, RateLimiterCountersMode_value)
	proto.RegisterType((*Unsupported)(nil), "Ydb.Coordination.Unsupported")
	proto.RegisterType((*Config)(nil), "Ydb.Coordination.Config")
	proto.RegisterType((*SessionDescription)(nil), "Ydb.Coordination.SessionDescription")
	proto.RegisterType((*SemaphoreSession)(nil), "Ydb.Coordination.SemaphoreSession")
	proto.RegisterType((*SemaphoreDescription)(nil), "Ydb.Coordination.SemaphoreDescription")
	proto.RegisterType((*SessionRequest)(nil), "Ydb.Coordination.SessionRequest")
	proto.RegisterType((*SessionRequest_PingPong)(nil), "Ydb.Coordination.SessionRequest.PingPong")
	proto.RegisterType((*SessionRequest_SessionStart)(nil), "Ydb.Coordination.SessionRequest.SessionStart")
	proto.RegisterType((*SessionRequest_SessionStop)(nil), "Ydb.Coordination.SessionRequest.SessionStop")
	proto.RegisterType((*SessionRequest_AcquireSemaphore)(nil), "Ydb.Coordination.SessionRequest.AcquireSemaphore")
	proto.RegisterType((*SessionRequest_ReleaseSemaphore)(nil), "Ydb.Coordination.SessionRequest.ReleaseSemaphore")
	proto.RegisterType((*SessionRequest_DescribeSemaphore)(nil), "Ydb.Coordination.SessionRequest.DescribeSemaphore")
	proto.RegisterType((*SessionRequest_CreateSemaphore)(nil), "Ydb.Coordination.SessionRequest.CreateSemaphore")
	proto.RegisterType((*SessionRequest_UpdateSemaphore)(nil), "Ydb.Coordination.SessionRequest.UpdateSemaphore")
	proto.RegisterType((*SessionRequest_DeleteSemaphore)(nil), "Ydb.Coordination.SessionRequest.DeleteSemaphore")
	proto.RegisterType((*SessionResponse)(nil), "Ydb.Coordination.SessionResponse")
	proto.RegisterType((*SessionResponse_PingPong)(nil), "Ydb.Coordination.SessionResponse.PingPong")
	proto.RegisterType((*SessionResponse_Failure)(nil), "Ydb.Coordination.SessionResponse.Failure")
	proto.RegisterType((*SessionResponse_SessionStarted)(nil), "Ydb.Coordination.SessionResponse.SessionStarted")
	proto.RegisterType((*SessionResponse_SessionStopped)(nil), "Ydb.Coordination.SessionResponse.SessionStopped")
	proto.RegisterType((*SessionResponse_AcquireSemaphorePending)(nil), "Ydb.Coordination.SessionResponse.AcquireSemaphorePending")
	proto.RegisterType((*SessionResponse_AcquireSemaphoreResult)(nil), "Ydb.Coordination.SessionResponse.AcquireSemaphoreResult")
	proto.RegisterType((*SessionResponse_ReleaseSemaphoreResult)(nil), "Ydb.Coordination.SessionResponse.ReleaseSemaphoreResult")
	proto.RegisterType((*SessionResponse_DescribeSemaphoreResult)(nil), "Ydb.Coordination.SessionResponse.DescribeSemaphoreResult")
	proto.RegisterType((*SessionResponse_DescribeSemaphoreChanged)(nil), "Ydb.Coordination.SessionResponse.DescribeSemaphoreChanged")
	proto.RegisterType((*SessionResponse_CreateSemaphoreResult)(nil), "Ydb.Coordination.SessionResponse.CreateSemaphoreResult")
	proto.RegisterType((*SessionResponse_UpdateSemaphoreResult)(nil), "Ydb.Coordination.SessionResponse.UpdateSemaphoreResult")
	proto.RegisterType((*SessionResponse_DeleteSemaphoreResult)(nil), "Ydb.Coordination.SessionResponse.DeleteSemaphoreResult")
	proto.RegisterType((*CreateNodeRequest)(nil), "Ydb.Coordination.CreateNodeRequest")
	proto.RegisterType((*CreateNodeResponse)(nil), "Ydb.Coordination.CreateNodeResponse")
	proto.RegisterType((*AlterNodeRequest)(nil), "Ydb.Coordination.AlterNodeRequest")
	proto.RegisterType((*AlterNodeResponse)(nil), "Ydb.Coordination.AlterNodeResponse")
	proto.RegisterType((*DropNodeRequest)(nil), "Ydb.Coordination.DropNodeRequest")
	proto.RegisterType((*DropNodeResponse)(nil), "Ydb.Coordination.DropNodeResponse")
	proto.RegisterType((*DescribeNodeRequest)(nil), "Ydb.Coordination.DescribeNodeRequest")
	proto.RegisterType((*DescribeNodeResponse)(nil), "Ydb.Coordination.DescribeNodeResponse")
	proto.RegisterType((*DescribeNodeResult)(nil), "Ydb.Coordination.DescribeNodeResult")
}

func init() { proto.RegisterFile("ydb_coordination.proto", fileDescriptor_b9a2a9ea29b22c6a) }

var fileDescriptor_b9a2a9ea29b22c6a = []byte{
	// 1991 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0x4f, 0x53, 0x1b, 0xc9,
	0x15, 0x67, 0x84, 0x10, 0xf0, 0x04, 0x48, 0xf4, 0x02, 0x1a, 0xc6, 0xbb, 0xb5, 0x58, 0x89, 0xb3,
	0xb6, 0x6b, 0x03, 0x36, 0x5e, 0x83, 0xb3, 0x95, 0xad, 0x2c, 0x96, 0xb4, 0x46, 0x59, 0xfe, 0xa5,
	0x11, 0x49, 0x5c, 0x5b, 0xa9, 0xc9, 0x30, 0xd3, 0x88, 0x29, 0x4b, 0x33, 0xc3, 0xf4, 0xa8, 0x1c,
	0x92, 0x5b, 0x3e, 0x82, 0x73, 0xc9, 0x25, 0xb7, 0xe4, 0x96, 0x4a, 0xbe, 0x40, 0x72, 0xcf, 0x31,
	0x1f, 0x27, 0xc7, 0x54, 0xff, 0x19, 0xcd, 0x5f, 0x40, 0xc2, 0xae, 0x90, 0x8b, 0x6a, 0xfa, 0xf5,
	0x7b, 0xbf, 0xdf, 0xeb, 0xd7, 0xad, 0xf7, 0xde, 0xf4, 0xc0, 0xca, 0xa5, 0x75, 0xaa, 0x9b, 0xae,
	0xeb, 0x5b, 0xb6, 0x63, 0x04, 0xb6, 0xeb, 0xac, 0x7b, 0xbe, 0x1b, 0xb8, 0xa8, 0xfa, 0xda, 0x3a,
	0x5d, 0x6f, 0xc4, 0xe4, 0xda, 0xe7, 0x6f, 0xec, 0x37, 0x76, 0xdf, 0xdf, 0xf0, 0x06, 0xa7, 0x3d,
	0xdb, 0xdc, 0x30, 0x3c, 0x7b, 0x83, 0xab, 0xd2, 0x0d, 0x06, 0xe1, 0x7a, 0xc4, 0x8f, 0xd9, 0x6b,
	0x1b, 0xd7, 0x6a, 0xd3, 0xc0, 0x08, 0x06, 0x54, 0x37, 0x5d, 0x8b, 0x50, 0x69, 0xf0, 0xe4, 0x5a,
	0x03, 0x9b, 0xd2, 0x01, 0xd1, 0xfb, 0x84, 0x52, 0xa3, 0x4b, 0xa4, 0xc5, 0xa3, 0xeb, 0x29, 0xcc,
	0x73, 0xd2, 0x97, 0xaa, 0xf5, 0x79, 0x28, 0x9f, 0x38, 0x74, 0xe0, 0x79, 0xae, 0x1f, 0x10, 0xab,
	0xfe, 0xb7, 0x49, 0x28, 0x35, 0x5c, 0xe7, 0xcc, 0xee, 0x22, 0x04, 0x45, 0xcf, 0x08, 0xce, 0x55,
	0x65, 0x4d, 0x79, 0x38, 0x8b, 0xf9, 0x33, 0xda, 0x06, 0x95, 0x92, 0xde, 0x99, 0x6e, 0x9e, 0x13,
	0xf3, 0x8d, 0xee, 0x11, 0xdf, 0x76, 0x2d, 0xbd, 0x6f, 0xf7, 0x7a, 0x36, 0x55, 0x0b, 0x6b, 0xca,
	0xc3, 0x79, 0xbc, 0xcc, 0xe6, 0x1b, 0x6c, 0xfa, 0x88, 0xcf, 0xee, 0xf3, 0x49, 0xf4, 0x15, 0xdc,
	0xa3, 0x84, 0x52, 0xdb, 0x75, 0xf4, 0xae, 0x6f, 0x98, 0x24, 0x65, 0x3b, 0xc9, 0x6d, 0x55, 0xa9,
	0xf2, 0x8a, 0x69, 0x24, 0xcc, 0x4f, 0x60, 0xd9, 0x27, 0x86, 0xa5, 0x9b, 0xae, 0x43, 0x6d, 0x1a,
	0x10, 0xc7, 0xbc, 0xd4, 0xfb, 0xae, 0x45, 0xd4, 0xe2, 0x9a, 0xf2, 0x70, 0x61, 0xf3, 0xfe, 0x7a,
	0x7a, 0x4f, 0xd6, 0x1b, 0x91, 0xe6, 0xbe, 0x6b, 0x11, 0xfc, 0x11, 0xb3, 0x4f, 0x09, 0xd1, 0x6b,
	0xa8, 0x19, 0x41, 0x60, 0x98, 0xe7, 0x59, 0xe0, 0xa9, 0x51, 0x81, 0x97, 0x05, 0x42, 0x1a, 0xfa,
	0x0c, 0x34, 0xdf, 0x08, 0x88, 0xde, 0xb3, 0xfb, 0x76, 0x40, 0x7c, 0xdd, 0x74, 0x07, 0x4e, 0x40,
	0x7c, 0x2a, 0xd0, 0x4b, 0x1c, 0xfd, 0x51, 0x16, 0x1d, 0x1b, 0x01, 0xd9, 0x13, 0x26, 0x0d, 0x69,
	0xc1, 0x59, 0x6a, 0x7e, 0xfe, 0x44, 0xfd, 0x8f, 0x0a, 0xa0, 0x63, 0x11, 0xb6, 0x26, 0xa1, 0xa6,
	0x6f, 0x7b, 0x0c, 0x07, 0x7d, 0x02, 0x10, 0xc6, 0xdb, 0xb6, 0xf8, 0x16, 0x16, 0xf1, 0xac, 0x94,
	0xb4, 0x2d, 0xf4, 0x00, 0x16, 0x02, 0xbb, 0x4f, 0xdc, 0x41, 0x10, 0xdf, 0xbd, 0x22, 0x9e, 0x97,
	0x52, 0x19, 0xf6, 0x35, 0x28, 0x5b, 0x11, 0x28, 0xdf, 0xa5, 0x59, 0x1c, 0x17, 0x21, 0x0d, 0x66,
	0xc4, 0xfa, 0x89, 0xc5, 0xf7, 0x62, 0x06, 0x0f, 0xc7, 0xf5, 0x3f, 0x29, 0x50, 0x3d, 0x26, 0x7d,
	0xc3, 0x3b, 0x77, 0x7d, 0x22, 0x7d, 0x44, 0xab, 0x30, 0xe3, 0xfa, 0x16, 0xf1, 0x99, 0x5b, 0x53,
	0x9c, 0x73, 0x9a, 0x8f, 0xdb, 0xd6, 0x07, 0xf2, 0x79, 0x09, 0xa6, 0x78, 0xac, 0xb9, 0xb7, 0x45,
	0x2c, 0x06, 0xec, 0x30, 0x5b, 0x46, 0x60, 0x70, 0x1f, 0xe7, 0x30, 0x7f, 0xae, 0xff, 0xbe, 0x00,
	0x4b, 0x43, 0xff, 0xe2, 0xc1, 0x43, 0x50, 0x74, 0x8c, 0x3e, 0x09, 0x4f, 0x3e, 0x7b, 0x1e, 0x02,
	0x14, 0x22, 0x80, 0x88, 0x6a, 0x3a, 0x4e, 0xb5, 0x04, 0x53, 0x7c, 0xd3, 0x43, 0x07, 0xf8, 0x00,
	0x7d, 0x0c, 0xb3, 0xc4, 0x63, 0xff, 0x3b, 0xdf, 0xe8, 0xc9, 0x48, 0x45, 0x02, 0xf4, 0x25, 0x94,
	0xdc, 0xb7, 0x0e, 0xf1, 0xa9, 0x3a, 0xb5, 0x36, 0xf9, 0xb0, 0xbc, 0x59, 0xcf, 0x9e, 0x8c, 0x74,
	0x24, 0xb1, 0xb4, 0x40, 0x3f, 0x86, 0xe9, 0xb7, 0x06, 0x3b, 0x17, 0x54, 0x2d, 0x8d, 0x6c, 0x1c,
	0x9a, 0xd4, 0xff, 0xb9, 0x08, 0x0b, 0xa1, 0x90, 0x5c, 0x0c, 0x08, 0x0d, 0xd0, 0x4f, 0xa0, 0xe8,
	0xd9, 0x4e, 0x97, 0x2f, 0xbf, 0x9c, 0x77, 0x48, 0x93, 0xfa, 0xeb, 0x47, 0xb6, 0xd3, 0x3d, 0x72,
	0x9d, 0xee, 0xee, 0x04, 0xe6, 0x86, 0x1c, 0xc0, 0x75, 0xba, 0x3c, 0x56, 0x63, 0x03, 0xb8, 0x4e,
	0x17, 0x75, 0x60, 0x3e, 0x3c, 0x09, 0x34, 0x30, 0x7c, 0x11, 0xca, 0xf2, 0xe6, 0x0f, 0x6f, 0x44,
	0x92, 0xc3, 0x63, 0x66, 0xb4, 0x3b, 0x81, 0xe7, 0x68, 0x6c, 0x8c, 0x7e, 0x06, 0x73, 0x11, 0xaa,
	0xeb, 0xf1, 0x5d, 0x28, 0x6f, 0x7e, 0x3e, 0x3a, 0xa8, 0xeb, 0xed, 0x4e, 0xe0, 0x32, 0x8d, 0x86,
	0xa8, 0x09, 0xf3, 0x83, 0x28, 0x7b, 0xea, 0xcf, 0xf9, 0x91, 0x2e, 0x6f, 0x7e, 0x92, 0xc5, 0x8c,
	0x25, 0x59, 0xe6, 0x58, 0xcc, 0xea, 0x79, 0x1a, 0x65, 0x8b, 0xa7, 0x87, 0x31, 0x51, 0xb6, 0xd0,
	0xaf, 0x61, 0xd1, 0x30, 0x2f, 0x06, 0xb6, 0x4f, 0x74, 0x1a, 0x6e, 0x37, 0x3f, 0x99, 0xe5, 0xcd,
	0xa7, 0x37, 0xae, 0x71, 0x47, 0x58, 0x0e, 0xcf, 0xc9, 0xee, 0x04, 0xae, 0x1a, 0x29, 0x19, 0x63,
	0xf0, 0x49, 0x8f, 0x18, 0x34, 0xce, 0x30, 0x33, 0x22, 0x03, 0x16, 0x96, 0x09, 0x06, 0x3f, 0x25,
	0x43, 0x26, 0x20, 0x91, 0x5d, 0x4e, 0xe3, 0x14, 0xb3, 0x9c, 0x62, 0xf3, 0x46, 0x8a, 0xa6, 0x34,
	0x8d, 0x73, 0x2c, 0x5a, 0x69, 0x21, 0xfa, 0x15, 0x54, 0x4d, 0x9f, 0xb0, 0xe4, 0x1c, 0x51, 0x00,
	0xa7, 0x78, 0x72, 0x23, 0x45, 0x83, 0x1b, 0xc6, 0x09, 0x2a, 0x66, 0x52, 0xc4, 0xe0, 0x07, 0x9e,
	0x95, 0x84, 0x2f, 0x8f, 0x08, 0x7f, 0xc2, 0x0d, 0x13, 0xf0, 0x83, 0xa4, 0x88, 0xc1, 0x5b, 0xa4,
	0x47, 0x12, 0xf0, 0x73, 0x23, 0xc2, 0x37, 0xb9, 0x61, 0x02, 0xde, 0x4a, 0x8a, 0xd0, 0x37, 0xb0,
	0x10, 0x3f, 0x8b, 0x4f, 0x9f, 0xa9, 0xf3, 0xa3, 0x1d, 0xc6, 0xf8, 0x11, 0x7e, 0xfa, 0x2c, 0x83,
	0xf3, 0x85, 0xba, 0x70, 0x0b, 0x9c, 0x2f, 0x32, 0x38, 0xcf, 0xd5, 0xca, 0x2d, 0x70, 0x9e, 0x6b,
	0x75, 0x98, 0x09, 0xd3, 0x0c, 0x5a, 0x81, 0x92, 0xeb, 0x19, 0x17, 0x03, 0x22, 0x8b, 0x8c, 0x1c,
	0x69, 0xff, 0x52, 0x60, 0x2e, 0x9e, 0x41, 0x72, 0x5b, 0xa0, 0x64, 0x95, 0x2a, 0xdc, 0x5c, 0xa5,
	0x26, 0x47, 0xa8, 0xac, 0xc5, 0x6c, 0x65, 0x5d, 0x86, 0x12, 0x25, 0x17, 0xba, 0xe3, 0xca, 0x32,
	0x39, 0x45, 0xc9, 0xc5, 0x81, 0xcb, 0xf0, 0x59, 0xe3, 0x46, 0x4c, 0xa6, 0xa4, 0xbf, 0x21, 0x97,
	0x3c, 0x59, 0xcc, 0xe1, 0xf9, 0x48, 0xfa, 0x2d, 0xb9, 0xd4, 0xe6, 0xa1, 0x1c, 0x4b, 0x5b, 0xda,
	0x5f, 0x15, 0xa8, 0xa6, 0xff, 0xe2, 0x8c, 0xc1, 0x27, 0x17, 0x51, 0xad, 0x9d, 0xf2, 0xc9, 0x45,
	0xdb, 0x1a, 0x56, 0xbf, 0x42, 0xac, 0xfa, 0x8d, 0xb8, 0xaa, 0x61, 0x41, 0x2c, 0xe6, 0xd5, 0xde,
	0xa9, 0x58, 0xe9, 0x4c, 0x94, 0xc3, 0x52, 0xaa, 0x1c, 0x6a, 0x5f, 0x41, 0x35, 0x9d, 0x2e, 0xc6,
	0xf0, 0x56, 0xfb, 0xb7, 0x02, 0x8b, 0x99, 0x5c, 0x30, 0xe6, 0x72, 0x6d, 0xc7, 0xec, 0x0d, 0x2c,
	0xa2, 0xcb, 0xb2, 0x3c, 0xc9, 0x5d, 0x9c, 0x97, 0xd2, 0x43, 0x51, 0x79, 0x3f, 0x83, 0x4a, 0xa8,
	0x16, 0x56, 0x60, 0x51, 0xd9, 0x43, 0xeb, 0x5f, 0x08, 0x29, 0x3b, 0x33, 0x6f, 0x8d, 0xc0, 0x3c,
	0xd7, 0x87, 0x71, 0x98, 0xc1, 0xb3, 0x5c, 0xd2, 0x64, 0xc1, 0xb8, 0x0f, 0x73, 0x62, 0x5a, 0x92,
	0x89, 0x78, 0x94, 0xb9, 0x4c, 0x50, 0x69, 0x67, 0x50, 0x49, 0xa5, 0x9e, 0x71, 0xd6, 0x93, 0xdf,
	0x92, 0xe4, 0xf4, 0x44, 0xda, 0x11, 0x54, 0x52, 0x39, 0x68, 0x1c, 0x9e, 0x10, 0x71, 0x32, 0x86,
	0x88, 0xa1, 0x92, 0x4a, 0x3b, 0x63, 0x7a, 0x7e, 0xe6, 0xfa, 0x26, 0x91, 0x1b, 0x20, 0x06, 0x2f,
	0x67, 0x61, 0xda, 0x17, 0x29, 0xad, 0xfe, 0x8f, 0x55, 0xa8, 0x0c, 0xb3, 0x1c, 0xf5, 0x5c, 0x87,
	0x12, 0xf4, 0x75, 0xa2, 0x81, 0x79, 0x7c, 0x4d, 0x5a, 0x14, 0x06, 0xd9, 0x0e, 0xe6, 0xeb, 0x44,
	0x07, 0x33, 0x2e, 0x02, 0xcb, 0x31, 0x2d, 0x98, 0x3e, 0x33, 0xec, 0xde, 0xc0, 0x27, 0xb2, 0x79,
	0x79, 0x74, 0x33, 0xc8, 0x37, 0xc2, 0x60, 0x77, 0x02, 0x87, 0xb6, 0xe8, 0x3b, 0xa8, 0x24, 0x3a,
	0x21, 0xd9, 0x66, 0x5f, 0x9f, 0xec, 0x25, 0x5c, 0x3c, 0x95, 0xf1, 0x94, 0xb8, 0x40, 0x13, 0x92,
	0x24, 0xb8, 0xeb, 0x79, 0xc4, 0x92, 0xfd, 0xcb, 0x38, 0xe0, 0xdc, 0x2e, 0x01, 0xce, 0x25, 0x1f,
	0xa8, 0xa9, 0x49, 0xa1, 0x6c, 0xcb, 0x86, 0x66, 0x2c, 0x94, 0x6d, 0xf4, 0x16, 0x56, 0x33, 0xad,
	0x91, 0xee, 0x11, 0xc7, 0x62, 0xa7, 0x44, 0x34, 0x30, 0x3f, 0xba, 0x79, 0xc9, 0xe9, 0x04, 0x7a,
	0x24, 0x00, 0x76, 0x27, 0x70, 0xcd, 0xc8, 0x9f, 0x42, 0x01, 0xa8, 0x59, 0x62, 0x9f, 0xd0, 0x41,
	0x2f, 0x90, 0x5d, 0xcd, 0x8b, 0xf1, 0x79, 0x31, 0xb7, 0xdf, 0x9d, 0xc0, 0x2b, 0x46, 0xee, 0x0c,
	0x63, 0xcd, 0xf4, 0x69, 0x21, 0x2b, 0x8c, 0xca, 0x9a, 0x4e, 0xc0, 0x11, 0xab, 0x9f, 0x3b, 0xc3,
	0x82, 0x9c, 0xed, 0xdd, 0x42, 0xda, 0xf2, 0xa8, 0x41, 0xce, 0xe4, 0xed, 0x21, 0x6f, 0xcd, 0xca,
	0x9f, 0x42, 0xbf, 0x05, 0x2d, 0x87, 0xd8, 0x3c, 0x37, 0x9c, 0x2e, 0xb1, 0x64, 0x6f, 0xf4, 0xe5,
	0x2d, 0x98, 0x1b, 0x02, 0x61, 0x77, 0x02, 0xab, 0xd6, 0x15, 0x73, 0xe8, 0x02, 0x6a, 0xe9, 0x5e,
	0x32, 0x5c, 0xb2, 0xe8, 0x9b, 0xb6, 0x6f, 0x26, 0x4e, 0x25, 0xf6, 0xe1, 0x82, 0x97, 0xcd, 0xbc,
	0x09, 0x46, 0x99, 0xee, 0x2f, 0x43, 0xca, 0x85, 0x51, 0x29, 0x53, 0x39, 0x3e, 0xa2, 0x1c, 0xe4,
	0x4d, 0x30, 0xca, 0x74, 0xcf, 0x19, 0x52, 0x56, 0x46, 0xa5, 0x4c, 0x15, 0x81, 0x88, 0xd2, 0xca,
	0x9b, 0xc8, 0xf4, 0x7d, 0x5b, 0x6a, 0xf5, 0x16, 0x7d, 0xdf, 0x56, 0x06, 0x67, 0x5b, 0x5d, 0xbc,
	0x05, 0xce, 0x76, 0x06, 0xe7, 0x85, 0x8a, 0x6e, 0x81, 0xf3, 0x62, 0xa4, 0x3e, 0xb4, 0x0f, 0xd3,
	0xb2, 0x14, 0xa0, 0xa7, 0x50, 0x12, 0x37, 0x82, 0x5c, 0x65, 0x61, 0x73, 0x95, 0xd3, 0x1d, 0x73,
	0x51, 0xdb, 0xa2, 0xf2, 0xa9, 0xe1, 0x5a, 0x04, 0x4b, 0x45, 0xb4, 0x01, 0x25, 0x7e, 0x27, 0x48,
	0xd5, 0x02, 0xbf, 0x0e, 0xa8, 0x71, 0x93, 0x36, 0x13, 0x89, 0xdf, 0x7d, 0x71, 0x57, 0x88, 0xa5,
	0x9a, 0xf6, 0xf3, 0xe1, 0x0d, 0x40, 0x58, 0x18, 0x3e, 0xc8, 0x4d, 0x8c, 0xb6, 0x11, 0xc3, 0x15,
	0x35, 0xe1, 0x7a, 0x5c, 0xed, 0x09, 0xd4, 0xae, 0xc8, 0xb1, 0x57, 0xb4, 0x0c, 0xda, 0xdf, 0x15,
	0x58, 0xc9, 0x4f, 0x8f, 0x57, 0x35, 0x19, 0x51, 0x40, 0x0b, 0xe3, 0x07, 0x74, 0x72, 0xa4, 0x80,
	0xf2, 0x4b, 0x31, 0xe1, 0x54, 0x74, 0x29, 0x26, 0xc7, 0xdc, 0xe3, 0xfc, 0xd4, 0x7a, 0xc7, 0x1e,
	0xcb, 0xac, 0x3e, 0xf4, 0x38, 0x1c, 0x6b, 0xef, 0x0a, 0x50, 0xbb, 0x22, 0x2b, 0xdf, 0xa5, 0xcb,
	0xdf, 0xc1, 0x72, 0x94, 0x8c, 0xd2, 0xef, 0x52, 0xe5, 0xcd, 0x1f, 0x5c, 0x73, 0x09, 0x16, 0xbb,
	0xeb, 0xc3, 0x4b, 0x34, 0xef, 0x06, 0xf0, 0x53, 0x10, 0xdd, 0xb7, 0x6e, 0x58, 0x96, 0xec, 0x8a,
	0x66, 0xb0, 0xe8, 0xe1, 0x77, 0x98, 0x44, 0xfb, 0x1d, 0xa8, 0x57, 0xd5, 0x8b, 0xab, 0x82, 0x72,
	0x1f, 0xe6, 0x58, 0x43, 0x3c, 0x2c, 0x4c, 0x05, 0xd1, 0xe5, 0x33, 0x59, 0x68, 0xf9, 0x00, 0x16,
	0xc4, 0x2b, 0xc0, 0x50, 0x49, 0xbe, 0x77, 0x08, 0xa9, 0x54, 0xd3, 0xde, 0x29, 0xb0, 0x9c, 0x5b,
	0x34, 0xee, 0x70, 0x3f, 0xb8, 0x53, 0xb9, 0x65, 0xe5, 0xae, 0x9d, 0xca, 0x2d, 0x3c, 0x77, 0xe8,
	0xd4, 0x4b, 0x60, 0x7f, 0x36, 0x51, 0x15, 0xeb, 0x7f, 0x51, 0x60, 0x51, 0x6c, 0xe5, 0x01, 0xc3,
	0x94, 0x37, 0xb0, 0x79, 0xf7, 0x0e, 0x4f, 0xa0, 0x64, 0xf2, 0x0f, 0x33, 0xf2, 0xa5, 0x44, 0xcd,
	0xfd, 0x34, 0x71, 0x66, 0x77, 0xb1, 0xd4, 0x43, 0x3f, 0x85, 0xea, 0xf0, 0xdb, 0x93, 0xee, 0x19,
	0xbe, 0xd1, 0xa7, 0xf2, 0x5d, 0xe4, 0x53, 0x6e, 0x7b, 0x18, 0x4e, 0xd2, 0xe8, 0xf1, 0x88, 0xab,
	0xe1, 0x8a, 0x9b, 0x14, 0xd4, 0xf7, 0x01, 0xc5, 0xdd, 0x94, 0x2f, 0x5a, 0xdb, 0x30, 0x3b, 0x54,
	0x94, 0x6f, 0x5b, 0xab, 0x57, 0x42, 0xe3, 0x48, 0xb7, 0xfe, 0x67, 0x05, 0xaa, 0x3b, 0xbd, 0x80,
	0xf8, 0xff, 0xdf, 0xab, 0xde, 0x83, 0xc5, 0x98, 0x97, 0xef, 0xbb, 0xe8, 0x0b, 0xa8, 0x34, 0x7d,
	0xd7, 0xbb, 0x69, 0xc9, 0x79, 0x0b, 0x28, 0xdc, 0x72, 0x01, 0xdf, 0x42, 0x35, 0xa2, 0x7c, 0x5f,
	0xff, 0x07, 0xf0, 0x51, 0x98, 0xf3, 0xfe, 0x97, 0x6b, 0x38, 0x84, 0xa5, 0x24, 0xed, 0xfb, 0xae,
	0xa3, 0x0f, 0x28, 0x05, 0xc8, 0x12, 0xc2, 0x03, 0x28, 0x52, 0xd2, 0x3b, 0x93, 0x48, 0x8b, 0xe2,
	0x7f, 0x2f, 0xbe, 0x94, 0xb6, 0x9c, 0xc0, 0xbf, 0xc4, 0x7c, 0x7a, 0xfc, 0x03, 0xf9, 0xf8, 0x1c,
	0x2a, 0xe9, 0x8f, 0x83, 0x1a, 0xac, 0x34, 0x0e, 0x0f, 0x8e, 0xdb, 0xc7, 0x9d, 0xd6, 0x41, 0xe3,
	0xb5, 0xbe, 0x7f, 0xd8, 0x6c, 0xe9, 0x27, 0x07, 0xc7, 0xad, 0x4e, 0x75, 0x02, 0xdd, 0x83, 0x5a,
	0x66, 0xee, 0xb8, 0x83, 0xdb, 0x8d, 0x4e, 0x55, 0x41, 0x1f, 0x83, 0x9a, 0x99, 0xc4, 0xad, 0xbd,
	0x9d, 0x5f, 0xb6, 0x9a, 0xd5, 0xc2, 0xe3, 0x3f, 0x28, 0x50, 0xbb, 0xe2, 0x03, 0x22, 0xfa, 0x3e,
	0xac, 0xe1, 0x9d, 0x4e, 0x4b, 0xdf, 0x6b, 0xef, 0xb7, 0x3b, 0x2d, 0xac, 0x37, 0x0e, 0x4f, 0x0e,
	0x3a, 0x2d, 0x7c, 0x9c, 0x24, 0x7f, 0x04, 0x0f, 0xae, 0xd1, 0xda, 0x79, 0xf5, 0x0a, 0xb7, 0x5e,
	0xed, 0x74, 0x5a, 0xcd, 0xaa, 0x82, 0x3e, 0x83, 0xef, 0x5d, 0xa3, 0xda, 0x6c, 0x75, 0x76, 0xda,
	0x7b, 0xcc, 0xab, 0x97, 0x5b, 0x70, 0xcf, 0x74, 0xfb, 0xeb, 0x97, 0x86, 0x63, 0x91, 0xdf, 0xac,
	0x5f, 0x5a, 0xa7, 0xeb, 0xf1, 0x8f, 0xea, 0x2f, 0x51, 0x3c, 0x76, 0x47, 0xfc, 0x2b, 0xf5, 0x91,
	0xf2, 0x1f, 0x45, 0x39, 0x2d, 0xf1, 0x0f, 0xd4, 0xcf, 0xfe, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x7a,
	0x91, 0x5a, 0xb0, 0x88, 0x1f, 0x00, 0x00,
}

const ()

// SetOperationParams implements ydb generic interface for setting
// operation parameters inside driver implementation.
func (m *CreateNodeRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	m.OperationParams = v
}

// SetOperationParams implements ydb generic interface for setting
// operation parameters inside driver implementation.
func (m *AlterNodeRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	m.OperationParams = v
}

// SetOperationParams implements ydb generic interface for setting
// operation parameters inside driver implementation.
func (m *DropNodeRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	m.OperationParams = v
}

// SetOperationParams implements ydb generic interface for setting
// operation parameters inside driver implementation.
func (m *DescribeNodeRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	m.OperationParams = v
}
