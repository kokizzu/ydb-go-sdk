// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ydb_persqueue_v1.proto

package Ydb_PersQueue_V1

import (
	Ydb "github.com/yandex-cloud/ydb-go-sdk/v2/api/protos/Ydb"
	Ydb_Issue "github.com/yandex-cloud/ydb-go-sdk/v2/api/protos/Ydb_Issue"
	Ydb_Operations "github.com/yandex-cloud/ydb-go-sdk/v2/api/protos/Ydb_Operations"
	Ydb_Scheme "github.com/yandex-cloud/ydb-go-sdk/v2/api/protos/Ydb_Scheme"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Codec int32

const (
	Codec_CODEC_UNSPECIFIED Codec = 0
	Codec_CODEC_RAW         Codec = 1
	Codec_CODEC_GZIP        Codec = 2
	Codec_CODEC_LZOP        Codec = 3
	Codec_CODEC_ZSTD        Codec = 4
)

var Codec_name = map[int32]string{
	0: "CODEC_UNSPECIFIED",
	1: "CODEC_RAW",
	2: "CODEC_GZIP",
	3: "CODEC_LZOP",
	4: "CODEC_ZSTD",
}

var Codec_value = map[string]int32{
	"CODEC_UNSPECIFIED": 0,
	"CODEC_RAW":         1,
	"CODEC_GZIP":        2,
	"CODEC_LZOP":        3,
	"CODEC_ZSTD":        4,
}

func (x Codec) String() string {
	return proto.EnumName(Codec_name, int32(x))
}

func (Codec) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{0}
}

type StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status int32

const (
	// Not used state.
	StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_STATUS_UNSPECIFIED StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status = 0
	// Client seen Create message but not yet responded to server with Created message.
	StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_CREATING StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status = 1
	// Client seen Destroy message but not yet responded with Released message.
	StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_DESTROYING StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status = 2
	// Client sent Created or ResumeReadRequest message to server for this partition stream.
	StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_READING StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status = 3
	// Client sent StopReadRequest for this partition stream.
	StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_STOPPED StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status = 4
)

var StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status_name = map[int32]string{
	0: "STATUS_UNSPECIFIED",
	1: "CREATING",
	2: "DESTROYING",
	3: "READING",
	4: "STOPPED",
}

var StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status_value = map[string]int32{
	"STATUS_UNSPECIFIED": 0,
	"CREATING":           1,
	"DESTROYING":         2,
	"READING":            3,
	"STOPPED":            4,
}

func (x StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status) String() string {
	return proto.EnumName(StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status_name, int32(x))
}

func (StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 0, 0, 0, 0}
}

type MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status int32

const (
	// Not used state.
	MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_STATUS_UNSPECIFIED MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status = 0
	// Client seen Create message but not yet responded to server with Created message.
	MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_CREATING MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status = 1
	// Client seen Destroy message but not yet responded with Released message.
	MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_DESTROYING MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status = 2
	// Client sent Created or ResumeReadRequest message to server for this partition stream.
	MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_READING MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status = 3
	// Client sent StopReadRequest for this partition stream.
	MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_STOPPED MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status = 4
)

var MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status_name = map[int32]string{
	0: "STATUS_UNSPECIFIED",
	1: "CREATING",
	2: "DESTROYING",
	3: "READING",
	4: "STOPPED",
}

var MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status_value = map[string]int32{
	"STATUS_UNSPECIFIED": 0,
	"CREATING":           1,
	"DESTROYING":         2,
	"READING":            3,
	"STOPPED":            4,
}

func (x MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status) String() string {
	return proto.EnumName(MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status_name, int32(x))
}

func (MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{12, 1, 0, 0, 0}
}

type TopicSettings_Format int32

const (
	TopicSettings_FORMAT_UNSPECIFIED TopicSettings_Format = 0
	TopicSettings_FORMAT_BASE        TopicSettings_Format = 1
)

var TopicSettings_Format_name = map[int32]string{
	0: "FORMAT_UNSPECIFIED",
	1: "FORMAT_BASE",
}

var TopicSettings_Format_value = map[string]int32{
	"FORMAT_UNSPECIFIED": 0,
	"FORMAT_BASE":        1,
}

func (x TopicSettings_Format) String() string {
	return proto.EnumName(TopicSettings_Format_name, int32(x))
}

func (TopicSettings_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{21, 0}
}

type SessionMetaValue struct {
	Value                map[string]string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SessionMetaValue) Reset()         { *m = SessionMetaValue{} }
func (m *SessionMetaValue) String() string { return proto.CompactTextString(m) }
func (*SessionMetaValue) ProtoMessage()    {}
func (*SessionMetaValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{0}
}

func (m *SessionMetaValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionMetaValue.Unmarshal(m, b)
}
func (m *SessionMetaValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionMetaValue.Marshal(b, m, deterministic)
}
func (m *SessionMetaValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionMetaValue.Merge(m, src)
}
func (m *SessionMetaValue) XXX_Size() int {
	return xxx_messageInfo_SessionMetaValue.Size(m)
}
func (m *SessionMetaValue) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionMetaValue.DiscardUnknown(m)
}

var xxx_messageInfo_SessionMetaValue proto.InternalMessageInfo

func (m *SessionMetaValue) GetValue() map[string]string {
	if m != nil {
		return m.Value
	}
	return nil
}

//*
// Represents range [start_offset, end_offset).
type OffsetsRange struct {
	StartOffset          int64    `protobuf:"varint,1,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"`
	EndOffset            int64    `protobuf:"varint,2,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OffsetsRange) Reset()         { *m = OffsetsRange{} }
func (m *OffsetsRange) String() string { return proto.CompactTextString(m) }
func (*OffsetsRange) ProtoMessage()    {}
func (*OffsetsRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{1}
}

func (m *OffsetsRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OffsetsRange.Unmarshal(m, b)
}
func (m *OffsetsRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OffsetsRange.Marshal(b, m, deterministic)
}
func (m *OffsetsRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OffsetsRange.Merge(m, src)
}
func (m *OffsetsRange) XXX_Size() int {
	return xxx_messageInfo_OffsetsRange.Size(m)
}
func (m *OffsetsRange) XXX_DiscardUnknown() {
	xxx_messageInfo_OffsetsRange.DiscardUnknown(m)
}

var xxx_messageInfo_OffsetsRange proto.InternalMessageInfo

func (m *OffsetsRange) GetStartOffset() int64 {
	if m != nil {
		return m.StartOffset
	}
	return 0
}

func (m *OffsetsRange) GetEndOffset() int64 {
	if m != nil {
		return m.EndOffset
	}
	return 0
}

//*
// Request for write session. Contains one of:
//      InitRequest - handshake request.
//      WriteRequest - portion of data to be written.
//      UpdateTokenRequest - user credentials if update is needed.
type StreamingWriteClientMessage struct {
	// Types that are valid to be assigned to ClientMessage:
	//	*StreamingWriteClientMessage_InitRequest_
	//	*StreamingWriteClientMessage_WriteRequest_
	//	*StreamingWriteClientMessage_UpdateTokenRequest_
	ClientMessage        isStreamingWriteClientMessage_ClientMessage `protobuf_oneof:"client_message"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *StreamingWriteClientMessage) Reset()         { *m = StreamingWriteClientMessage{} }
func (m *StreamingWriteClientMessage) String() string { return proto.CompactTextString(m) }
func (*StreamingWriteClientMessage) ProtoMessage()    {}
func (*StreamingWriteClientMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{2}
}

func (m *StreamingWriteClientMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingWriteClientMessage.Unmarshal(m, b)
}
func (m *StreamingWriteClientMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingWriteClientMessage.Marshal(b, m, deterministic)
}
func (m *StreamingWriteClientMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingWriteClientMessage.Merge(m, src)
}
func (m *StreamingWriteClientMessage) XXX_Size() int {
	return xxx_messageInfo_StreamingWriteClientMessage.Size(m)
}
func (m *StreamingWriteClientMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingWriteClientMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingWriteClientMessage proto.InternalMessageInfo

type isStreamingWriteClientMessage_ClientMessage interface {
	isStreamingWriteClientMessage_ClientMessage()
}

type StreamingWriteClientMessage_InitRequest_ struct {
	InitRequest *StreamingWriteClientMessage_InitRequest `protobuf:"bytes,1,opt,name=init_request,json=initRequest,proto3,oneof"`
}

type StreamingWriteClientMessage_WriteRequest_ struct {
	WriteRequest *StreamingWriteClientMessage_WriteRequest `protobuf:"bytes,2,opt,name=write_request,json=writeRequest,proto3,oneof"`
}

type StreamingWriteClientMessage_UpdateTokenRequest_ struct {
	UpdateTokenRequest *StreamingWriteClientMessage_UpdateTokenRequest `protobuf:"bytes,3,opt,name=update_token_request,json=updateTokenRequest,proto3,oneof"`
}

func (*StreamingWriteClientMessage_InitRequest_) isStreamingWriteClientMessage_ClientMessage() {}

func (*StreamingWriteClientMessage_WriteRequest_) isStreamingWriteClientMessage_ClientMessage() {}

func (*StreamingWriteClientMessage_UpdateTokenRequest_) isStreamingWriteClientMessage_ClientMessage() {
}

func (m *StreamingWriteClientMessage) GetClientMessage() isStreamingWriteClientMessage_ClientMessage {
	if m != nil {
		return m.ClientMessage
	}
	return nil
}

func (m *StreamingWriteClientMessage) GetInitRequest() *StreamingWriteClientMessage_InitRequest {
	if x, ok := m.GetClientMessage().(*StreamingWriteClientMessage_InitRequest_); ok {
		return x.InitRequest
	}
	return nil
}

func (m *StreamingWriteClientMessage) GetWriteRequest() *StreamingWriteClientMessage_WriteRequest {
	if x, ok := m.GetClientMessage().(*StreamingWriteClientMessage_WriteRequest_); ok {
		return x.WriteRequest
	}
	return nil
}

func (m *StreamingWriteClientMessage) GetUpdateTokenRequest() *StreamingWriteClientMessage_UpdateTokenRequest {
	if x, ok := m.GetClientMessage().(*StreamingWriteClientMessage_UpdateTokenRequest_); ok {
		return x.UpdateTokenRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamingWriteClientMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamingWriteClientMessage_InitRequest_)(nil),
		(*StreamingWriteClientMessage_WriteRequest_)(nil),
		(*StreamingWriteClientMessage_UpdateTokenRequest_)(nil),
	}
}

// Handshake request that must be sent to server first.
type StreamingWriteClientMessage_InitRequest struct {
	// Path of topic to write to.
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// message group identifier of client data stream a.k.a. sourceId.
	MessageGroupId string `protobuf:"bytes,2,opt,name=message_group_id,json=messageGroupId,proto3" json:"message_group_id,omitempty"`
	// Some user metadata attached to this write session.
	SessionMeta map[string]string `protobuf:"bytes,3,rep,name=session_meta,json=sessionMeta,proto3" json:"session_meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Partition group to write to.
	// Zero means any group.
	PartitionGroupId               int64  `protobuf:"varint,4,opt,name=partition_group_id,json=partitionGroupId,proto3" json:"partition_group_id,omitempty"`
	MaxSupportedBlockFormatVersion int64  `protobuf:"varint,5,opt,name=max_supported_block_format_version,json=maxSupportedBlockFormatVersion,proto3" json:"max_supported_block_format_version,omitempty"`
	SessionId                      string `protobuf:"bytes,100,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// 0 for first init message and incremental value for connect retries. Used for server logging.
	ConnectionAttempt int64 `protobuf:"varint,101,opt,name=connection_attempt,json=connectionAttempt,proto3" json:"connection_attempt,omitempty"`
	// Opaque blob. Take last one from previous connect.
	ConnectionMeta []byte `protobuf:"bytes,102,opt,name=connection_meta,json=connectionMeta,proto3" json:"connection_meta,omitempty"`
	// Optinal preferred cluster name. Sever will close session If preferred cluster is not server cluster and preferred cluster is enabled after delay TPQConfig::CloseClientSessionWithEnabledRemotePreferredClusterDelaySec
	PreferredCluster string `protobuf:"bytes,103,opt,name=preferred_cluster,json=preferredCluster,proto3" json:"preferred_cluster,omitempty"`
	// Sanity check option. When no writing activity is done in idle_timeout_sec seconds, then session will be destroyed. Zero means infinity.
	IdleTimeoutMs        int64    `protobuf:"varint,200,opt,name=idle_timeout_ms,json=idleTimeoutMs,proto3" json:"idle_timeout_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingWriteClientMessage_InitRequest) Reset() {
	*m = StreamingWriteClientMessage_InitRequest{}
}
func (m *StreamingWriteClientMessage_InitRequest) String() string { return proto.CompactTextString(m) }
func (*StreamingWriteClientMessage_InitRequest) ProtoMessage()    {}
func (*StreamingWriteClientMessage_InitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{2, 0}
}

func (m *StreamingWriteClientMessage_InitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingWriteClientMessage_InitRequest.Unmarshal(m, b)
}
func (m *StreamingWriteClientMessage_InitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingWriteClientMessage_InitRequest.Marshal(b, m, deterministic)
}
func (m *StreamingWriteClientMessage_InitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingWriteClientMessage_InitRequest.Merge(m, src)
}
func (m *StreamingWriteClientMessage_InitRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingWriteClientMessage_InitRequest.Size(m)
}
func (m *StreamingWriteClientMessage_InitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingWriteClientMessage_InitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingWriteClientMessage_InitRequest proto.InternalMessageInfo

func (m *StreamingWriteClientMessage_InitRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *StreamingWriteClientMessage_InitRequest) GetMessageGroupId() string {
	if m != nil {
		return m.MessageGroupId
	}
	return ""
}

func (m *StreamingWriteClientMessage_InitRequest) GetSessionMeta() map[string]string {
	if m != nil {
		return m.SessionMeta
	}
	return nil
}

func (m *StreamingWriteClientMessage_InitRequest) GetPartitionGroupId() int64 {
	if m != nil {
		return m.PartitionGroupId
	}
	return 0
}

func (m *StreamingWriteClientMessage_InitRequest) GetMaxSupportedBlockFormatVersion() int64 {
	if m != nil {
		return m.MaxSupportedBlockFormatVersion
	}
	return 0
}

func (m *StreamingWriteClientMessage_InitRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *StreamingWriteClientMessage_InitRequest) GetConnectionAttempt() int64 {
	if m != nil {
		return m.ConnectionAttempt
	}
	return 0
}

func (m *StreamingWriteClientMessage_InitRequest) GetConnectionMeta() []byte {
	if m != nil {
		return m.ConnectionMeta
	}
	return nil
}

func (m *StreamingWriteClientMessage_InitRequest) GetPreferredCluster() string {
	if m != nil {
		return m.PreferredCluster
	}
	return ""
}

func (m *StreamingWriteClientMessage_InitRequest) GetIdleTimeoutMs() int64 {
	if m != nil {
		return m.IdleTimeoutMs
	}
	return 0
}

// Represents portion of client messages.
type StreamingWriteClientMessage_WriteRequest struct {
	// Sequence numbers of messages in order that client will provide to server.
	SequenceNumbers []int64 `protobuf:"varint,2,rep,packed,name=sequence_numbers,json=sequenceNumbers,proto3" json:"sequence_numbers,omitempty"`
	// Message creation timestamps for client messages.
	// Same size as sequence_numbers.
	CreatedAtMs []int64 `protobuf:"varint,3,rep,packed,name=created_at_ms,json=createdAtMs,proto3" json:"created_at_ms,omitempty"`
	// Message creation timestamps for client messages.
	// Same size as sequence_numbers.
	SentAtMs []int64 `protobuf:"varint,4,rep,packed,name=sent_at_ms,json=sentAtMs,proto3" json:"sent_at_ms,omitempty"`
	// Client message sizes.
	// Same size as sequence_numbers.
	MessageSizes      []int64 `protobuf:"varint,5,rep,packed,name=message_sizes,json=messageSizes,proto3" json:"message_sizes,omitempty"`
	BlocksOffsets     []int64 `protobuf:"varint,6,rep,packed,name=blocks_offsets,json=blocksOffsets,proto3" json:"blocks_offsets,omitempty"`
	BlocksPartNumbers []int64 `protobuf:"varint,7,rep,packed,name=blocks_part_numbers,json=blocksPartNumbers,proto3" json:"blocks_part_numbers,omitempty"`
	// How many complete messages and imcomplete messages end parts (one at most) this block contains
	BlocksMessageCounts     []int64 `protobuf:"varint,8,rep,packed,name=blocks_message_counts,json=blocksMessageCounts,proto3" json:"blocks_message_counts,omitempty"`
	BlocksUncompressedSizes []int64 `protobuf:"varint,9,rep,packed,name=blocks_uncompressed_sizes,json=blocksUncompressedSizes,proto3" json:"blocks_uncompressed_sizes,omitempty"`
	// In block format version 0 each byte contains only block codec identifier
	BlocksHeaders        [][]byte `protobuf:"bytes,10,rep,name=blocks_headers,json=blocksHeaders,proto3" json:"blocks_headers,omitempty"`
	BlocksData           [][]byte `protobuf:"bytes,11,rep,name=blocks_data,json=blocksData,proto3" json:"blocks_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingWriteClientMessage_WriteRequest) Reset() {
	*m = StreamingWriteClientMessage_WriteRequest{}
}
func (m *StreamingWriteClientMessage_WriteRequest) String() string { return proto.CompactTextString(m) }
func (*StreamingWriteClientMessage_WriteRequest) ProtoMessage()    {}
func (*StreamingWriteClientMessage_WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{2, 1}
}

func (m *StreamingWriteClientMessage_WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingWriteClientMessage_WriteRequest.Unmarshal(m, b)
}
func (m *StreamingWriteClientMessage_WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingWriteClientMessage_WriteRequest.Marshal(b, m, deterministic)
}
func (m *StreamingWriteClientMessage_WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingWriteClientMessage_WriteRequest.Merge(m, src)
}
func (m *StreamingWriteClientMessage_WriteRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingWriteClientMessage_WriteRequest.Size(m)
}
func (m *StreamingWriteClientMessage_WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingWriteClientMessage_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingWriteClientMessage_WriteRequest proto.InternalMessageInfo

func (m *StreamingWriteClientMessage_WriteRequest) GetSequenceNumbers() []int64 {
	if m != nil {
		return m.SequenceNumbers
	}
	return nil
}

func (m *StreamingWriteClientMessage_WriteRequest) GetCreatedAtMs() []int64 {
	if m != nil {
		return m.CreatedAtMs
	}
	return nil
}

func (m *StreamingWriteClientMessage_WriteRequest) GetSentAtMs() []int64 {
	if m != nil {
		return m.SentAtMs
	}
	return nil
}

func (m *StreamingWriteClientMessage_WriteRequest) GetMessageSizes() []int64 {
	if m != nil {
		return m.MessageSizes
	}
	return nil
}

func (m *StreamingWriteClientMessage_WriteRequest) GetBlocksOffsets() []int64 {
	if m != nil {
		return m.BlocksOffsets
	}
	return nil
}

func (m *StreamingWriteClientMessage_WriteRequest) GetBlocksPartNumbers() []int64 {
	if m != nil {
		return m.BlocksPartNumbers
	}
	return nil
}

func (m *StreamingWriteClientMessage_WriteRequest) GetBlocksMessageCounts() []int64 {
	if m != nil {
		return m.BlocksMessageCounts
	}
	return nil
}

func (m *StreamingWriteClientMessage_WriteRequest) GetBlocksUncompressedSizes() []int64 {
	if m != nil {
		return m.BlocksUncompressedSizes
	}
	return nil
}

func (m *StreamingWriteClientMessage_WriteRequest) GetBlocksHeaders() [][]byte {
	if m != nil {
		return m.BlocksHeaders
	}
	return nil
}

func (m *StreamingWriteClientMessage_WriteRequest) GetBlocksData() [][]byte {
	if m != nil {
		return m.BlocksData
	}
	return nil
}

// In-session reauthentication and reauthorization, lets user increase session lifetime. You should wait for 'update_token_response' before sending next 'update_token_request'.
type StreamingWriteClientMessage_UpdateTokenRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingWriteClientMessage_UpdateTokenRequest) Reset() {
	*m = StreamingWriteClientMessage_UpdateTokenRequest{}
}
func (m *StreamingWriteClientMessage_UpdateTokenRequest) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingWriteClientMessage_UpdateTokenRequest) ProtoMessage() {}
func (*StreamingWriteClientMessage_UpdateTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{2, 2}
}

func (m *StreamingWriteClientMessage_UpdateTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingWriteClientMessage_UpdateTokenRequest.Unmarshal(m, b)
}
func (m *StreamingWriteClientMessage_UpdateTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingWriteClientMessage_UpdateTokenRequest.Marshal(b, m, deterministic)
}
func (m *StreamingWriteClientMessage_UpdateTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingWriteClientMessage_UpdateTokenRequest.Merge(m, src)
}
func (m *StreamingWriteClientMessage_UpdateTokenRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingWriteClientMessage_UpdateTokenRequest.Size(m)
}
func (m *StreamingWriteClientMessage_UpdateTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingWriteClientMessage_UpdateTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingWriteClientMessage_UpdateTokenRequest proto.InternalMessageInfo

func (m *StreamingWriteClientMessage_UpdateTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

//*
// Response for write session. Contains one of:
//      InitResponse - correct handshake response.
//      BatchWriteResponse - acknowledgment of storing client messages.
//      UpdateTokenResponse - acknowledgment of reauthentication and reauthorization.
type StreamingWriteServerMessage struct {
	// Types that are valid to be assigned to ServerMessage:
	//	*StreamingWriteServerMessage_InitResponse_
	//	*StreamingWriteServerMessage_BatchWriteResponse_
	//	*StreamingWriteServerMessage_UpdateTokenResponse_
	ServerMessage isStreamingWriteServerMessage_ServerMessage `protobuf_oneof:"server_message"`
	// Server status of response.
	Status Ydb.StatusIds_StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	// Issues if any.
	Issues               []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *StreamingWriteServerMessage) Reset()         { *m = StreamingWriteServerMessage{} }
func (m *StreamingWriteServerMessage) String() string { return proto.CompactTextString(m) }
func (*StreamingWriteServerMessage) ProtoMessage()    {}
func (*StreamingWriteServerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{3}
}

func (m *StreamingWriteServerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingWriteServerMessage.Unmarshal(m, b)
}
func (m *StreamingWriteServerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingWriteServerMessage.Marshal(b, m, deterministic)
}
func (m *StreamingWriteServerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingWriteServerMessage.Merge(m, src)
}
func (m *StreamingWriteServerMessage) XXX_Size() int {
	return xxx_messageInfo_StreamingWriteServerMessage.Size(m)
}
func (m *StreamingWriteServerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingWriteServerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingWriteServerMessage proto.InternalMessageInfo

type isStreamingWriteServerMessage_ServerMessage interface {
	isStreamingWriteServerMessage_ServerMessage()
}

type StreamingWriteServerMessage_InitResponse_ struct {
	InitResponse *StreamingWriteServerMessage_InitResponse `protobuf:"bytes,3,opt,name=init_response,json=initResponse,proto3,oneof"`
}

type StreamingWriteServerMessage_BatchWriteResponse_ struct {
	BatchWriteResponse *StreamingWriteServerMessage_BatchWriteResponse `protobuf:"bytes,4,opt,name=batch_write_response,json=batchWriteResponse,proto3,oneof"`
}

type StreamingWriteServerMessage_UpdateTokenResponse_ struct {
	UpdateTokenResponse *StreamingWriteServerMessage_UpdateTokenResponse `protobuf:"bytes,5,opt,name=update_token_response,json=updateTokenResponse,proto3,oneof"`
}

func (*StreamingWriteServerMessage_InitResponse_) isStreamingWriteServerMessage_ServerMessage() {}

func (*StreamingWriteServerMessage_BatchWriteResponse_) isStreamingWriteServerMessage_ServerMessage() {
}

func (*StreamingWriteServerMessage_UpdateTokenResponse_) isStreamingWriteServerMessage_ServerMessage() {
}

func (m *StreamingWriteServerMessage) GetServerMessage() isStreamingWriteServerMessage_ServerMessage {
	if m != nil {
		return m.ServerMessage
	}
	return nil
}

func (m *StreamingWriteServerMessage) GetInitResponse() *StreamingWriteServerMessage_InitResponse {
	if x, ok := m.GetServerMessage().(*StreamingWriteServerMessage_InitResponse_); ok {
		return x.InitResponse
	}
	return nil
}

func (m *StreamingWriteServerMessage) GetBatchWriteResponse() *StreamingWriteServerMessage_BatchWriteResponse {
	if x, ok := m.GetServerMessage().(*StreamingWriteServerMessage_BatchWriteResponse_); ok {
		return x.BatchWriteResponse
	}
	return nil
}

func (m *StreamingWriteServerMessage) GetUpdateTokenResponse() *StreamingWriteServerMessage_UpdateTokenResponse {
	if x, ok := m.GetServerMessage().(*StreamingWriteServerMessage_UpdateTokenResponse_); ok {
		return x.UpdateTokenResponse
	}
	return nil
}

func (m *StreamingWriteServerMessage) GetStatus() Ydb.StatusIds_StatusCode {
	if m != nil {
		return m.Status
	}
	return Ydb.StatusIds_STATUS_CODE_UNSPECIFIED
}

func (m *StreamingWriteServerMessage) GetIssues() []*Ydb_Issue.IssueMessage {
	if m != nil {
		return m.Issues
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamingWriteServerMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamingWriteServerMessage_InitResponse_)(nil),
		(*StreamingWriteServerMessage_BatchWriteResponse_)(nil),
		(*StreamingWriteServerMessage_UpdateTokenResponse_)(nil),
	}
}

// Response for handshake.
type StreamingWriteServerMessage_InitResponse struct {
	// Last persisted message's sequence number for this message group.
	LastSequenceNumber int64 `protobuf:"varint,1,opt,name=last_sequence_number,json=lastSequenceNumber,proto3" json:"last_sequence_number,omitempty"`
	// Unique identifier of write session. Used for debug purposes.
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Path of topic that matched for this write session. Used for debug purposes, will be the same as in Init request from client.
	Topic string `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	// Write session is established to this cluster. Client data will be in instance of topic in this cluster.
	Cluster string `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Identifier of partition that is matched for this write session.
	PartitionId int64 `protobuf:"varint,5,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	// Block (see StreamingWriteClientMessage.WriteRequest.blocks_data) format version supported by server or configured for a topic. Client must write data only with them.
	BlockFormatVersion int64 `protobuf:"varint,6,opt,name=block_format_version,json=blockFormatVersion,proto3" json:"block_format_version,omitempty"`
	// Client can only use compression codecs from this set to write messages to topic, session will be closed with BAD_REQUEST otherwise.
	SupportedCodecs []Codec `protobuf:"varint,10,rep,packed,name=supported_codecs,json=supportedCodecs,proto3,enum=Ydb.PersQueue.V1.Codec" json:"supported_codecs,omitempty"`
	// Maximal flush window size choosed by server. Size of uncompressed data not sended to server must not be bigger than flush window size.
	// In other words, this is maximal size of gap inside uncompressed data, which is not sended to server yet.
	MaxFlushWindowSize int64 `protobuf:"varint,7,opt,name=max_flush_window_size,json=maxFlushWindowSize,proto3" json:"max_flush_window_size,omitempty"`
	// How big blocks per stream could be(in uncompressed size). When block contains more than max_block_size of uncompressed data - block must be truncated.
	MaxBlockSize int64 `protobuf:"varint,8,opt,name=max_block_size,json=maxBlockSize,proto3" json:"max_block_size,omitempty"`
	// Opaque blob, used for fast reconnects.
	ConnectionMeta       []byte   `protobuf:"bytes,9,opt,name=connection_meta,json=connectionMeta,proto3" json:"connection_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingWriteServerMessage_InitResponse) Reset() {
	*m = StreamingWriteServerMessage_InitResponse{}
}
func (m *StreamingWriteServerMessage_InitResponse) String() string { return proto.CompactTextString(m) }
func (*StreamingWriteServerMessage_InitResponse) ProtoMessage()    {}
func (*StreamingWriteServerMessage_InitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{3, 0}
}

func (m *StreamingWriteServerMessage_InitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingWriteServerMessage_InitResponse.Unmarshal(m, b)
}
func (m *StreamingWriteServerMessage_InitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingWriteServerMessage_InitResponse.Marshal(b, m, deterministic)
}
func (m *StreamingWriteServerMessage_InitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingWriteServerMessage_InitResponse.Merge(m, src)
}
func (m *StreamingWriteServerMessage_InitResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingWriteServerMessage_InitResponse.Size(m)
}
func (m *StreamingWriteServerMessage_InitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingWriteServerMessage_InitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingWriteServerMessage_InitResponse proto.InternalMessageInfo

func (m *StreamingWriteServerMessage_InitResponse) GetLastSequenceNumber() int64 {
	if m != nil {
		return m.LastSequenceNumber
	}
	return 0
}

func (m *StreamingWriteServerMessage_InitResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *StreamingWriteServerMessage_InitResponse) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *StreamingWriteServerMessage_InitResponse) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *StreamingWriteServerMessage_InitResponse) GetPartitionId() int64 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *StreamingWriteServerMessage_InitResponse) GetBlockFormatVersion() int64 {
	if m != nil {
		return m.BlockFormatVersion
	}
	return 0
}

func (m *StreamingWriteServerMessage_InitResponse) GetSupportedCodecs() []Codec {
	if m != nil {
		return m.SupportedCodecs
	}
	return nil
}

func (m *StreamingWriteServerMessage_InitResponse) GetMaxFlushWindowSize() int64 {
	if m != nil {
		return m.MaxFlushWindowSize
	}
	return 0
}

func (m *StreamingWriteServerMessage_InitResponse) GetMaxBlockSize() int64 {
	if m != nil {
		return m.MaxBlockSize
	}
	return 0
}

func (m *StreamingWriteServerMessage_InitResponse) GetConnectionMeta() []byte {
	if m != nil {
		return m.ConnectionMeta
	}
	return nil
}

// Message that represents acknowledgment for sequence of client messages. This sequence is persisted together so write statistics is for messages batch.
type StreamingWriteServerMessage_BatchWriteResponse struct {
	// Sequence numbers of persisted client messages.
	SequenceNumbers []int64 `protobuf:"varint,1,rep,packed,name=sequence_numbers,json=sequenceNumbers,proto3" json:"sequence_numbers,omitempty"`
	// Assigned partition offsets.
	// Zero for skipped messages.
	Offsets []int64 `protobuf:"varint,2,rep,packed,name=offsets,proto3" json:"offsets,omitempty"`
	// Per message flag. False if message is written for the first time and True otherwise.
	AlreadyWritten []bool `protobuf:"varint,3,rep,packed,name=already_written,json=alreadyWritten,proto3" json:"already_written,omitempty"`
	// Assigned partition for all client messages inside this batch.
	PartitionId int64 `protobuf:"varint,4,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	// Write statistics for this sequence of client messages.
	WriteStatistics      *StreamingWriteServerMessage_WriteStatistics `protobuf:"bytes,5,opt,name=write_statistics,json=writeStatistics,proto3" json:"write_statistics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *StreamingWriteServerMessage_BatchWriteResponse) Reset() {
	*m = StreamingWriteServerMessage_BatchWriteResponse{}
}
func (m *StreamingWriteServerMessage_BatchWriteResponse) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingWriteServerMessage_BatchWriteResponse) ProtoMessage() {}
func (*StreamingWriteServerMessage_BatchWriteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{3, 1}
}

func (m *StreamingWriteServerMessage_BatchWriteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingWriteServerMessage_BatchWriteResponse.Unmarshal(m, b)
}
func (m *StreamingWriteServerMessage_BatchWriteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingWriteServerMessage_BatchWriteResponse.Marshal(b, m, deterministic)
}
func (m *StreamingWriteServerMessage_BatchWriteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingWriteServerMessage_BatchWriteResponse.Merge(m, src)
}
func (m *StreamingWriteServerMessage_BatchWriteResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingWriteServerMessage_BatchWriteResponse.Size(m)
}
func (m *StreamingWriteServerMessage_BatchWriteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingWriteServerMessage_BatchWriteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingWriteServerMessage_BatchWriteResponse proto.InternalMessageInfo

func (m *StreamingWriteServerMessage_BatchWriteResponse) GetSequenceNumbers() []int64 {
	if m != nil {
		return m.SequenceNumbers
	}
	return nil
}

func (m *StreamingWriteServerMessage_BatchWriteResponse) GetOffsets() []int64 {
	if m != nil {
		return m.Offsets
	}
	return nil
}

func (m *StreamingWriteServerMessage_BatchWriteResponse) GetAlreadyWritten() []bool {
	if m != nil {
		return m.AlreadyWritten
	}
	return nil
}

func (m *StreamingWriteServerMessage_BatchWriteResponse) GetPartitionId() int64 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *StreamingWriteServerMessage_BatchWriteResponse) GetWriteStatistics() *StreamingWriteServerMessage_WriteStatistics {
	if m != nil {
		return m.WriteStatistics
	}
	return nil
}

type StreamingWriteServerMessage_UpdateTokenResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingWriteServerMessage_UpdateTokenResponse) Reset() {
	*m = StreamingWriteServerMessage_UpdateTokenResponse{}
}
func (m *StreamingWriteServerMessage_UpdateTokenResponse) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingWriteServerMessage_UpdateTokenResponse) ProtoMessage() {}
func (*StreamingWriteServerMessage_UpdateTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{3, 2}
}

func (m *StreamingWriteServerMessage_UpdateTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingWriteServerMessage_UpdateTokenResponse.Unmarshal(m, b)
}
func (m *StreamingWriteServerMessage_UpdateTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingWriteServerMessage_UpdateTokenResponse.Marshal(b, m, deterministic)
}
func (m *StreamingWriteServerMessage_UpdateTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingWriteServerMessage_UpdateTokenResponse.Merge(m, src)
}
func (m *StreamingWriteServerMessage_UpdateTokenResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingWriteServerMessage_UpdateTokenResponse.Size(m)
}
func (m *StreamingWriteServerMessage_UpdateTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingWriteServerMessage_UpdateTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingWriteServerMessage_UpdateTokenResponse proto.InternalMessageInfo

// Message with write statistics.
type StreamingWriteServerMessage_WriteStatistics struct {
	// Time spent in persisting of data.
	PersistDurationMs int64 `protobuf:"varint,1,opt,name=persist_duration_ms,json=persistDurationMs,proto3" json:"persist_duration_ms,omitempty"`
	// Time spent in queue before persisting.
	QueuedInPartitionDurationMs int64 `protobuf:"varint,2,opt,name=queued_in_partition_duration_ms,json=queuedInPartitionDurationMs,proto3" json:"queued_in_partition_duration_ms,omitempty"`
	// Time spent awaiting for partition write quota.
	ThrottledOnPartitionDurationMs int64 `protobuf:"varint,3,opt,name=throttled_on_partition_duration_ms,json=throttledOnPartitionDurationMs,proto3" json:"throttled_on_partition_duration_ms,omitempty"`
	// Time spent awaiting for topic write quota.
	ThrottledOnTopicDurationMs int64    `protobuf:"varint,4,opt,name=throttled_on_topic_duration_ms,json=throttledOnTopicDurationMs,proto3" json:"throttled_on_topic_duration_ms,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *StreamingWriteServerMessage_WriteStatistics) Reset() {
	*m = StreamingWriteServerMessage_WriteStatistics{}
}
func (m *StreamingWriteServerMessage_WriteStatistics) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingWriteServerMessage_WriteStatistics) ProtoMessage() {}
func (*StreamingWriteServerMessage_WriteStatistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{3, 3}
}

func (m *StreamingWriteServerMessage_WriteStatistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingWriteServerMessage_WriteStatistics.Unmarshal(m, b)
}
func (m *StreamingWriteServerMessage_WriteStatistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingWriteServerMessage_WriteStatistics.Marshal(b, m, deterministic)
}
func (m *StreamingWriteServerMessage_WriteStatistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingWriteServerMessage_WriteStatistics.Merge(m, src)
}
func (m *StreamingWriteServerMessage_WriteStatistics) XXX_Size() int {
	return xxx_messageInfo_StreamingWriteServerMessage_WriteStatistics.Size(m)
}
func (m *StreamingWriteServerMessage_WriteStatistics) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingWriteServerMessage_WriteStatistics.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingWriteServerMessage_WriteStatistics proto.InternalMessageInfo

func (m *StreamingWriteServerMessage_WriteStatistics) GetPersistDurationMs() int64 {
	if m != nil {
		return m.PersistDurationMs
	}
	return 0
}

func (m *StreamingWriteServerMessage_WriteStatistics) GetQueuedInPartitionDurationMs() int64 {
	if m != nil {
		return m.QueuedInPartitionDurationMs
	}
	return 0
}

func (m *StreamingWriteServerMessage_WriteStatistics) GetThrottledOnPartitionDurationMs() int64 {
	if m != nil {
		return m.ThrottledOnPartitionDurationMs
	}
	return 0
}

func (m *StreamingWriteServerMessage_WriteStatistics) GetThrottledOnTopicDurationMs() int64 {
	if m != nil {
		return m.ThrottledOnTopicDurationMs
	}
	return 0
}

type Path struct {
	// Path of object (topic/consumer).
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Path) Reset()         { *m = Path{} }
func (m *Path) String() string { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()    {}
func (*Path) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{4}
}

func (m *Path) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Path.Unmarshal(m, b)
}
func (m *Path) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Path.Marshal(b, m, deterministic)
}
func (m *Path) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Path.Merge(m, src)
}
func (m *Path) XXX_Size() int {
	return xxx_messageInfo_Path.Size(m)
}
func (m *Path) XXX_DiscardUnknown() {
	xxx_messageInfo_Path.DiscardUnknown(m)
}

var xxx_messageInfo_Path proto.InternalMessageInfo

func (m *Path) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type KeyValue struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{5}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

//*
// Single read parameters for server.
type ReadParams struct {
	// Max messages to give to client in one read request.
	MaxReadMessagesCount uint32 `protobuf:"varint,1,opt,name=max_read_messages_count,json=maxReadMessagesCount,proto3" json:"max_read_messages_count,omitempty"`
	// Max size in bytes to give to client in one read request.
	MaxReadSize          uint32   `protobuf:"varint,2,opt,name=max_read_size,json=maxReadSize,proto3" json:"max_read_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadParams) Reset()         { *m = ReadParams{} }
func (m *ReadParams) String() string { return proto.CompactTextString(m) }
func (*ReadParams) ProtoMessage()    {}
func (*ReadParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{6}
}

func (m *ReadParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadParams.Unmarshal(m, b)
}
func (m *ReadParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadParams.Marshal(b, m, deterministic)
}
func (m *ReadParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadParams.Merge(m, src)
}
func (m *ReadParams) XXX_Size() int {
	return xxx_messageInfo_ReadParams.Size(m)
}
func (m *ReadParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadParams.DiscardUnknown(m)
}

var xxx_messageInfo_ReadParams proto.InternalMessageInfo

func (m *ReadParams) GetMaxReadMessagesCount() uint32 {
	if m != nil {
		return m.MaxReadMessagesCount
	}
	return 0
}

func (m *ReadParams) GetMaxReadSize() uint32 {
	if m != nil {
		return m.MaxReadSize
	}
	return 0
}

//*
// Message that is used for addressing read for commiting.
type CommitCookie struct {
	// Assign identitifier of assigned partition from which read was done.
	AssignId uint64 `protobuf:"varint,1,opt,name=assign_id,json=assignId,proto3" json:"assign_id,omitempty"`
	// Incremental identifier of concrete partition read batch.
	PartitionCookie      uint64   `protobuf:"varint,2,opt,name=partition_cookie,json=partitionCookie,proto3" json:"partition_cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitCookie) Reset()         { *m = CommitCookie{} }
func (m *CommitCookie) String() string { return proto.CompactTextString(m) }
func (*CommitCookie) ProtoMessage()    {}
func (*CommitCookie) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{7}
}

func (m *CommitCookie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitCookie.Unmarshal(m, b)
}
func (m *CommitCookie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitCookie.Marshal(b, m, deterministic)
}
func (m *CommitCookie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitCookie.Merge(m, src)
}
func (m *CommitCookie) XXX_Size() int {
	return xxx_messageInfo_CommitCookie.Size(m)
}
func (m *CommitCookie) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitCookie.DiscardUnknown(m)
}

var xxx_messageInfo_CommitCookie proto.InternalMessageInfo

func (m *CommitCookie) GetAssignId() uint64 {
	if m != nil {
		return m.AssignId
	}
	return 0
}

func (m *CommitCookie) GetPartitionCookie() uint64 {
	if m != nil {
		return m.PartitionCookie
	}
	return 0
}

type CommitOffsetRange struct {
	AssignId             uint64   `protobuf:"varint,1,opt,name=assign_id,json=assignId,proto3" json:"assign_id,omitempty"`
	StartOffset          uint64   `protobuf:"varint,2,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"`
	EndOffset            uint64   `protobuf:"varint,3,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitOffsetRange) Reset()         { *m = CommitOffsetRange{} }
func (m *CommitOffsetRange) String() string { return proto.CompactTextString(m) }
func (*CommitOffsetRange) ProtoMessage()    {}
func (*CommitOffsetRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{8}
}

func (m *CommitOffsetRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitOffsetRange.Unmarshal(m, b)
}
func (m *CommitOffsetRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitOffsetRange.Marshal(b, m, deterministic)
}
func (m *CommitOffsetRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitOffsetRange.Merge(m, src)
}
func (m *CommitOffsetRange) XXX_Size() int {
	return xxx_messageInfo_CommitOffsetRange.Size(m)
}
func (m *CommitOffsetRange) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitOffsetRange.DiscardUnknown(m)
}

var xxx_messageInfo_CommitOffsetRange proto.InternalMessageInfo

func (m *CommitOffsetRange) GetAssignId() uint64 {
	if m != nil {
		return m.AssignId
	}
	return 0
}

func (m *CommitOffsetRange) GetStartOffset() uint64 {
	if m != nil {
		return m.StartOffset
	}
	return 0
}

func (m *CommitOffsetRange) GetEndOffset() uint64 {
	if m != nil {
		return m.EndOffset
	}
	return 0
}

//*
// Request for read session. Contains one of:
//      InitRequest - handshake request.
//      ReadRequest - request for data.
//      CommitRequest - request for commit of some read data.
//      CreatePartitionStreamResponse - signal for server that client is ready to get data from partition.
//      DestroyPartitionStreamResponse - signal for server that client finished working with partition. Must be sent only after corresponding Release request from server.
//      StopReadRequest - signal for server that client is not ready to get more data from this partition.
//      ResumeReadRequest - signal for server that client is ready to get more data from this partition.
type StreamingReadClientMessageNew struct {
	// Types that are valid to be assigned to ClientMessage:
	//	*StreamingReadClientMessageNew_InitRequest_
	//	*StreamingReadClientMessageNew_ReadRequest_
	//	*StreamingReadClientMessageNew_CreatePartitionStreamResponse_
	//	*StreamingReadClientMessageNew_CommitRequest_
	//	*StreamingReadClientMessageNew_DestroyPartitionStreamResponse_
	//	*StreamingReadClientMessageNew_StopReadRequest_
	//	*StreamingReadClientMessageNew_ResumeReadRequest_
	//	*StreamingReadClientMessageNew_PartitionStreamStatusRequest_
	//	*StreamingReadClientMessageNew_AddTopicRequest_
	//	*StreamingReadClientMessageNew_RemoveTopicRequest_
	ClientMessage isStreamingReadClientMessageNew_ClientMessage `protobuf_oneof:"client_message"`
	// User credentials if update is needed or empty string.
	Token                string   `protobuf:"bytes,20,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadClientMessageNew) Reset()         { *m = StreamingReadClientMessageNew{} }
func (m *StreamingReadClientMessageNew) String() string { return proto.CompactTextString(m) }
func (*StreamingReadClientMessageNew) ProtoMessage()    {}
func (*StreamingReadClientMessageNew) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9}
}

func (m *StreamingReadClientMessageNew) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew.Merge(m, src)
}
func (m *StreamingReadClientMessageNew) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew.Size(m)
}
func (m *StreamingReadClientMessageNew) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew proto.InternalMessageInfo

type isStreamingReadClientMessageNew_ClientMessage interface {
	isStreamingReadClientMessageNew_ClientMessage()
}

type StreamingReadClientMessageNew_InitRequest_ struct {
	InitRequest *StreamingReadClientMessageNew_InitRequest `protobuf:"bytes,1,opt,name=init_request,json=initRequest,proto3,oneof"`
}

type StreamingReadClientMessageNew_ReadRequest_ struct {
	ReadRequest *StreamingReadClientMessageNew_ReadRequest `protobuf:"bytes,2,opt,name=read_request,json=readRequest,proto3,oneof"`
}

type StreamingReadClientMessageNew_CreatePartitionStreamResponse_ struct {
	CreatePartitionStreamResponse *StreamingReadClientMessageNew_CreatePartitionStreamResponse `protobuf:"bytes,3,opt,name=create_partition_stream_response,json=createPartitionStreamResponse,proto3,oneof"`
}

type StreamingReadClientMessageNew_CommitRequest_ struct {
	CommitRequest *StreamingReadClientMessageNew_CommitRequest `protobuf:"bytes,4,opt,name=commit_request,json=commitRequest,proto3,oneof"`
}

type StreamingReadClientMessageNew_DestroyPartitionStreamResponse_ struct {
	DestroyPartitionStreamResponse *StreamingReadClientMessageNew_DestroyPartitionStreamResponse `protobuf:"bytes,5,opt,name=destroy_partition_stream_response,json=destroyPartitionStreamResponse,proto3,oneof"`
}

type StreamingReadClientMessageNew_StopReadRequest_ struct {
	StopReadRequest *StreamingReadClientMessageNew_StopReadRequest `protobuf:"bytes,6,opt,name=stop_read_request,json=stopReadRequest,proto3,oneof"`
}

type StreamingReadClientMessageNew_ResumeReadRequest_ struct {
	ResumeReadRequest *StreamingReadClientMessageNew_ResumeReadRequest `protobuf:"bytes,7,opt,name=resume_read_request,json=resumeReadRequest,proto3,oneof"`
}

type StreamingReadClientMessageNew_PartitionStreamStatusRequest_ struct {
	PartitionStreamStatusRequest *StreamingReadClientMessageNew_PartitionStreamStatusRequest `protobuf:"bytes,8,opt,name=partition_stream_status_request,json=partitionStreamStatusRequest,proto3,oneof"`
}

type StreamingReadClientMessageNew_AddTopicRequest_ struct {
	AddTopicRequest *StreamingReadClientMessageNew_AddTopicRequest `protobuf:"bytes,9,opt,name=add_topic_request,json=addTopicRequest,proto3,oneof"`
}

type StreamingReadClientMessageNew_RemoveTopicRequest_ struct {
	RemoveTopicRequest *StreamingReadClientMessageNew_RemoveTopicRequest `protobuf:"bytes,10,opt,name=remove_topic_request,json=removeTopicRequest,proto3,oneof"`
}

func (*StreamingReadClientMessageNew_InitRequest_) isStreamingReadClientMessageNew_ClientMessage() {}

func (*StreamingReadClientMessageNew_ReadRequest_) isStreamingReadClientMessageNew_ClientMessage() {}

func (*StreamingReadClientMessageNew_CreatePartitionStreamResponse_) isStreamingReadClientMessageNew_ClientMessage() {
}

func (*StreamingReadClientMessageNew_CommitRequest_) isStreamingReadClientMessageNew_ClientMessage() {
}

func (*StreamingReadClientMessageNew_DestroyPartitionStreamResponse_) isStreamingReadClientMessageNew_ClientMessage() {
}

func (*StreamingReadClientMessageNew_StopReadRequest_) isStreamingReadClientMessageNew_ClientMessage() {
}

func (*StreamingReadClientMessageNew_ResumeReadRequest_) isStreamingReadClientMessageNew_ClientMessage() {
}

func (*StreamingReadClientMessageNew_PartitionStreamStatusRequest_) isStreamingReadClientMessageNew_ClientMessage() {
}

func (*StreamingReadClientMessageNew_AddTopicRequest_) isStreamingReadClientMessageNew_ClientMessage() {
}

func (*StreamingReadClientMessageNew_RemoveTopicRequest_) isStreamingReadClientMessageNew_ClientMessage() {
}

func (m *StreamingReadClientMessageNew) GetClientMessage() isStreamingReadClientMessageNew_ClientMessage {
	if m != nil {
		return m.ClientMessage
	}
	return nil
}

func (m *StreamingReadClientMessageNew) GetInitRequest() *StreamingReadClientMessageNew_InitRequest {
	if x, ok := m.GetClientMessage().(*StreamingReadClientMessageNew_InitRequest_); ok {
		return x.InitRequest
	}
	return nil
}

func (m *StreamingReadClientMessageNew) GetReadRequest() *StreamingReadClientMessageNew_ReadRequest {
	if x, ok := m.GetClientMessage().(*StreamingReadClientMessageNew_ReadRequest_); ok {
		return x.ReadRequest
	}
	return nil
}

func (m *StreamingReadClientMessageNew) GetCreatePartitionStreamResponse() *StreamingReadClientMessageNew_CreatePartitionStreamResponse {
	if x, ok := m.GetClientMessage().(*StreamingReadClientMessageNew_CreatePartitionStreamResponse_); ok {
		return x.CreatePartitionStreamResponse
	}
	return nil
}

func (m *StreamingReadClientMessageNew) GetCommitRequest() *StreamingReadClientMessageNew_CommitRequest {
	if x, ok := m.GetClientMessage().(*StreamingReadClientMessageNew_CommitRequest_); ok {
		return x.CommitRequest
	}
	return nil
}

func (m *StreamingReadClientMessageNew) GetDestroyPartitionStreamResponse() *StreamingReadClientMessageNew_DestroyPartitionStreamResponse {
	if x, ok := m.GetClientMessage().(*StreamingReadClientMessageNew_DestroyPartitionStreamResponse_); ok {
		return x.DestroyPartitionStreamResponse
	}
	return nil
}

func (m *StreamingReadClientMessageNew) GetStopReadRequest() *StreamingReadClientMessageNew_StopReadRequest {
	if x, ok := m.GetClientMessage().(*StreamingReadClientMessageNew_StopReadRequest_); ok {
		return x.StopReadRequest
	}
	return nil
}

func (m *StreamingReadClientMessageNew) GetResumeReadRequest() *StreamingReadClientMessageNew_ResumeReadRequest {
	if x, ok := m.GetClientMessage().(*StreamingReadClientMessageNew_ResumeReadRequest_); ok {
		return x.ResumeReadRequest
	}
	return nil
}

func (m *StreamingReadClientMessageNew) GetPartitionStreamStatusRequest() *StreamingReadClientMessageNew_PartitionStreamStatusRequest {
	if x, ok := m.GetClientMessage().(*StreamingReadClientMessageNew_PartitionStreamStatusRequest_); ok {
		return x.PartitionStreamStatusRequest
	}
	return nil
}

func (m *StreamingReadClientMessageNew) GetAddTopicRequest() *StreamingReadClientMessageNew_AddTopicRequest {
	if x, ok := m.GetClientMessage().(*StreamingReadClientMessageNew_AddTopicRequest_); ok {
		return x.AddTopicRequest
	}
	return nil
}

func (m *StreamingReadClientMessageNew) GetRemoveTopicRequest() *StreamingReadClientMessageNew_RemoveTopicRequest {
	if x, ok := m.GetClientMessage().(*StreamingReadClientMessageNew_RemoveTopicRequest_); ok {
		return x.RemoveTopicRequest
	}
	return nil
}

func (m *StreamingReadClientMessageNew) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamingReadClientMessageNew) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamingReadClientMessageNew_InitRequest_)(nil),
		(*StreamingReadClientMessageNew_ReadRequest_)(nil),
		(*StreamingReadClientMessageNew_CreatePartitionStreamResponse_)(nil),
		(*StreamingReadClientMessageNew_CommitRequest_)(nil),
		(*StreamingReadClientMessageNew_DestroyPartitionStreamResponse_)(nil),
		(*StreamingReadClientMessageNew_StopReadRequest_)(nil),
		(*StreamingReadClientMessageNew_ResumeReadRequest_)(nil),
		(*StreamingReadClientMessageNew_PartitionStreamStatusRequest_)(nil),
		(*StreamingReadClientMessageNew_AddTopicRequest_)(nil),
		(*StreamingReadClientMessageNew_RemoveTopicRequest_)(nil),
	}
}

// Handshake request.
type StreamingReadClientMessageNew_InitRequest struct {
	// Message that describes topic to read.
	// Topics that will be read by this session.
	TopicsReadSettings []*StreamingReadClientMessageNew_TopicReadSettings `protobuf:"bytes,1,rep,name=topics_read_settings,json=topicsReadSettings,proto3" json:"topics_read_settings,omitempty"`
	// Flag that indicates reading only of original topics in cluster or all including mirrored.
	ReadOnlyOriginal bool `protobuf:"varint,2,opt,name=read_only_original,json=readOnlyOriginal,proto3" json:"read_only_original,omitempty"`
	// Path of consumer that is used for reading by this session.
	Consumer string `protobuf:"bytes,3,opt,name=consumer,proto3" json:"consumer,omitempty"`
	// Skip all messages that has write timestamp smaller than now - max_time_lag_ms.
	MaxLagDurationMs int64 `protobuf:"varint,4,opt,name=max_lag_duration_ms,json=maxLagDurationMs,proto3" json:"max_lag_duration_ms,omitempty"`
	// Read data only after this timestamp from all topics.
	StartFromWrittenAtMs int64 `protobuf:"varint,5,opt,name=start_from_written_at_ms,json=startFromWrittenAtMs,proto3" json:"start_from_written_at_ms,omitempty"`
	// Maximum block format version supported by the client. Server will asses this parameter and return actual data blocks version in
	// StreamingReadServerMessage.InitResponse.block_format_version_by_topic (and StreamingReadServerMessage.AddTopicResponse.block_format_version)
	// or error if client will not be able to read data.
	MaxSupportedBlockFormatVersion int64 `protobuf:"varint,6,opt,name=max_supported_block_format_version,json=maxSupportedBlockFormatVersion,proto3" json:"max_supported_block_format_version,omitempty"`
	// Maximal size of client cache for message_group_id, ip and meta, per partition.
	// There is separate caches for each partition partition streams.
	// There is separate caches for message group identifiers, ip and meta inside one partition partition stream.
	MaxMetaCacheSize int64 `protobuf:"varint,10,opt,name=max_meta_cache_size,json=maxMetaCacheSize,proto3" json:"max_meta_cache_size,omitempty"`
	// Session identifier for retries. Must be the same as session_id from Inited server response. If this is first connect, not retry - do not use this field.
	SessionId string `protobuf:"bytes,100,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// 0 for first init message and incremental value for connect retries.
	ConnectionAttempt int64 `protobuf:"varint,101,opt,name=connection_attempt,json=connectionAttempt,proto3" json:"connection_attempt,omitempty"`
	// Formed state for retries. If not retry - do not use this field.
	State                *StreamingReadClientMessageNew_InitRequest_State `protobuf:"bytes,102,opt,name=state,proto3" json:"state,omitempty"`
	IdleTimeoutMs        int64                                            `protobuf:"varint,200,opt,name=idle_timeout_ms,json=idleTimeoutMs,proto3" json:"idle_timeout_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *StreamingReadClientMessageNew_InitRequest) Reset() {
	*m = StreamingReadClientMessageNew_InitRequest{}
}
func (m *StreamingReadClientMessageNew_InitRequest) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadClientMessageNew_InitRequest) ProtoMessage() {}
func (*StreamingReadClientMessageNew_InitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 0}
}

func (m *StreamingReadClientMessageNew_InitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew_InitRequest.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew_InitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew_InitRequest.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew_InitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew_InitRequest.Merge(m, src)
}
func (m *StreamingReadClientMessageNew_InitRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew_InitRequest.Size(m)
}
func (m *StreamingReadClientMessageNew_InitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew_InitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew_InitRequest proto.InternalMessageInfo

func (m *StreamingReadClientMessageNew_InitRequest) GetTopicsReadSettings() []*StreamingReadClientMessageNew_TopicReadSettings {
	if m != nil {
		return m.TopicsReadSettings
	}
	return nil
}

func (m *StreamingReadClientMessageNew_InitRequest) GetReadOnlyOriginal() bool {
	if m != nil {
		return m.ReadOnlyOriginal
	}
	return false
}

func (m *StreamingReadClientMessageNew_InitRequest) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func (m *StreamingReadClientMessageNew_InitRequest) GetMaxLagDurationMs() int64 {
	if m != nil {
		return m.MaxLagDurationMs
	}
	return 0
}

func (m *StreamingReadClientMessageNew_InitRequest) GetStartFromWrittenAtMs() int64 {
	if m != nil {
		return m.StartFromWrittenAtMs
	}
	return 0
}

func (m *StreamingReadClientMessageNew_InitRequest) GetMaxSupportedBlockFormatVersion() int64 {
	if m != nil {
		return m.MaxSupportedBlockFormatVersion
	}
	return 0
}

func (m *StreamingReadClientMessageNew_InitRequest) GetMaxMetaCacheSize() int64 {
	if m != nil {
		return m.MaxMetaCacheSize
	}
	return 0
}

func (m *StreamingReadClientMessageNew_InitRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *StreamingReadClientMessageNew_InitRequest) GetConnectionAttempt() int64 {
	if m != nil {
		return m.ConnectionAttempt
	}
	return 0
}

func (m *StreamingReadClientMessageNew_InitRequest) GetState() *StreamingReadClientMessageNew_InitRequest_State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *StreamingReadClientMessageNew_InitRequest) GetIdleTimeoutMs() int64 {
	if m != nil {
		return m.IdleTimeoutMs
	}
	return 0
}

// State of client read session. Could be provided to server for retries.
type StreamingReadClientMessageNew_InitRequest_State struct {
	PartitionStreamsStates []*StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState `protobuf:"bytes,1,rep,name=partition_streams_states,json=partitionStreamsStates,proto3" json:"partition_streams_states,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                                                                `json:"-"`
	XXX_unrecognized       []byte                                                                  `json:"-"`
	XXX_sizecache          int32                                                                   `json:"-"`
}

func (m *StreamingReadClientMessageNew_InitRequest_State) Reset() {
	*m = StreamingReadClientMessageNew_InitRequest_State{}
}
func (m *StreamingReadClientMessageNew_InitRequest_State) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadClientMessageNew_InitRequest_State) ProtoMessage() {}
func (*StreamingReadClientMessageNew_InitRequest_State) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 0, 0}
}

func (m *StreamingReadClientMessageNew_InitRequest_State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew_InitRequest_State.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew_InitRequest_State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew_InitRequest_State.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew_InitRequest_State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew_InitRequest_State.Merge(m, src)
}
func (m *StreamingReadClientMessageNew_InitRequest_State) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew_InitRequest_State.Size(m)
}
func (m *StreamingReadClientMessageNew_InitRequest_State) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew_InitRequest_State.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew_InitRequest_State proto.InternalMessageInfo

func (m *StreamingReadClientMessageNew_InitRequest_State) GetPartitionStreamsStates() []*StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState {
	if m != nil {
		return m.PartitionStreamsStates
	}
	return nil
}

type StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState struct {
	// Partition partition stream.
	PartitionStream *PartitionStream `protobuf:"bytes,1,opt,name=partition_stream,json=partitionStream,proto3" json:"partition_stream,omitempty"`
	// Current read offset if has one. Actual for states DESTROYING, READING and STOPPED.
	ReadOffset int64 `protobuf:"varint,2,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
	// Ranges of committed by client offsets.
	OffsetRanges []*OffsetsRange `protobuf:"bytes,3,rep,name=offset_ranges,json=offsetRanges,proto3" json:"offset_ranges,omitempty"`
	// Status of partition stream.
	Status               StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status `protobuf:"varint,4,opt,name=status,proto3,enum=Ydb.PersQueue.V1.StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                      `json:"-"`
	XXX_sizecache        int32                                                                       `json:"-"`
}

func (m *StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState) Reset() {
	*m = StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState{}
}
func (m *StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState) ProtoMessage() {}
func (*StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 0, 0, 0}
}

func (m *StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState.Merge(m, src)
}
func (m *StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState.Size(m)
}
func (m *StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState proto.InternalMessageInfo

func (m *StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState) GetPartitionStream() *PartitionStream {
	if m != nil {
		return m.PartitionStream
	}
	return nil
}

func (m *StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState) GetReadOffset() int64 {
	if m != nil {
		return m.ReadOffset
	}
	return 0
}

func (m *StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState) GetOffsetRanges() []*OffsetsRange {
	if m != nil {
		return m.OffsetRanges
	}
	return nil
}

func (m *StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState) GetStatus() StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status {
	if m != nil {
		return m.Status
	}
	return StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_STATUS_UNSPECIFIED
}

// Message that represents client readiness for receiving more data.
type StreamingReadClientMessageNew_ReadRequest struct {
	// Client acquired this amount of free bytes more for buffer. Server can send more data at most of this uncompressed size.
	// Subsequent messages with 5 and 10 request_uncompressed_size are treated by server that it can send messages for at most 15 bytes.
	RequestUncompressedSize int64    `protobuf:"varint,1,opt,name=request_uncompressed_size,json=requestUncompressedSize,proto3" json:"request_uncompressed_size,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *StreamingReadClientMessageNew_ReadRequest) Reset() {
	*m = StreamingReadClientMessageNew_ReadRequest{}
}
func (m *StreamingReadClientMessageNew_ReadRequest) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadClientMessageNew_ReadRequest) ProtoMessage() {}
func (*StreamingReadClientMessageNew_ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 1}
}

func (m *StreamingReadClientMessageNew_ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew_ReadRequest.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew_ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew_ReadRequest.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew_ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew_ReadRequest.Merge(m, src)
}
func (m *StreamingReadClientMessageNew_ReadRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew_ReadRequest.Size(m)
}
func (m *StreamingReadClientMessageNew_ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew_ReadRequest proto.InternalMessageInfo

func (m *StreamingReadClientMessageNew_ReadRequest) GetRequestUncompressedSize() int64 {
	if m != nil {
		return m.RequestUncompressedSize
	}
	return 0
}

// Signal for server that cient is ready to recive data for partition.
type StreamingReadClientMessageNew_CreatePartitionStreamResponse struct {
	// Partition stream identifier of partition to start read.
	PartitionStreamId int64 `protobuf:"varint,1,opt,name=partition_stream_id,json=partitionStreamId,proto3" json:"partition_stream_id,omitempty"`
	// Start reading from partition offset that is not less than read_offset.
	// Init.max_time_lag_ms and Init.read_timestamp_ms could lead to skip of more messages.
	// The same with actual committed offset. Regardless of set read_offset server will return data from maximal offset from read_offset, actual committed offset
	// and offsets calculated from Init.max_time_lag_ms and Init.read_timestamp_ms.
	ReadOffset int64 `protobuf:"varint,2,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
	// All messages with offset less than commit_offset are processed by client. Server will commit this position if this is not done yet.
	CommitOffset int64 `protobuf:"varint,3,opt,name=commit_offset,json=commitOffset,proto3" json:"commit_offset,omitempty"`
	// This option will enable sanity check on server for read_offset. Server will verify that read_offset is no less that actual committed offset.
	// If verification will fail then server will kill this read session and client will find out error in reading logic.
	// If client is not setting read_offset, sanity check will fail so do not set verify_read_offset if you not setting correct read_offset.
	VerifyReadOffset     bool     `protobuf:"varint,4,opt,name=verify_read_offset,json=verifyReadOffset,proto3" json:"verify_read_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadClientMessageNew_CreatePartitionStreamResponse) Reset() {
	*m = StreamingReadClientMessageNew_CreatePartitionStreamResponse{}
}
func (m *StreamingReadClientMessageNew_CreatePartitionStreamResponse) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadClientMessageNew_CreatePartitionStreamResponse) ProtoMessage() {}
func (*StreamingReadClientMessageNew_CreatePartitionStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 2}
}

func (m *StreamingReadClientMessageNew_CreatePartitionStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew_CreatePartitionStreamResponse.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew_CreatePartitionStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew_CreatePartitionStreamResponse.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew_CreatePartitionStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew_CreatePartitionStreamResponse.Merge(m, src)
}
func (m *StreamingReadClientMessageNew_CreatePartitionStreamResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew_CreatePartitionStreamResponse.Size(m)
}
func (m *StreamingReadClientMessageNew_CreatePartitionStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew_CreatePartitionStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew_CreatePartitionStreamResponse proto.InternalMessageInfo

func (m *StreamingReadClientMessageNew_CreatePartitionStreamResponse) GetPartitionStreamId() int64 {
	if m != nil {
		return m.PartitionStreamId
	}
	return 0
}

func (m *StreamingReadClientMessageNew_CreatePartitionStreamResponse) GetReadOffset() int64 {
	if m != nil {
		return m.ReadOffset
	}
	return 0
}

func (m *StreamingReadClientMessageNew_CreatePartitionStreamResponse) GetCommitOffset() int64 {
	if m != nil {
		return m.CommitOffset
	}
	return 0
}

func (m *StreamingReadClientMessageNew_CreatePartitionStreamResponse) GetVerifyReadOffset() bool {
	if m != nil {
		return m.VerifyReadOffset
	}
	return false
}

// Signal for server that client finished working with this partition. Must be sent only after corresponding Release request from server.
// Server will give this partition to other read session only after Released signal.
type StreamingReadClientMessageNew_DestroyPartitionStreamResponse struct {
	// Partition stream identifier of partition partition stream that is released by client.
	PartitionStreamId    int64    `protobuf:"varint,1,opt,name=partition_stream_id,json=partitionStreamId,proto3" json:"partition_stream_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadClientMessageNew_DestroyPartitionStreamResponse) Reset() {
	*m = StreamingReadClientMessageNew_DestroyPartitionStreamResponse{}
}
func (m *StreamingReadClientMessageNew_DestroyPartitionStreamResponse) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadClientMessageNew_DestroyPartitionStreamResponse) ProtoMessage() {}
func (*StreamingReadClientMessageNew_DestroyPartitionStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 3}
}

func (m *StreamingReadClientMessageNew_DestroyPartitionStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew_DestroyPartitionStreamResponse.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew_DestroyPartitionStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew_DestroyPartitionStreamResponse.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew_DestroyPartitionStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew_DestroyPartitionStreamResponse.Merge(m, src)
}
func (m *StreamingReadClientMessageNew_DestroyPartitionStreamResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew_DestroyPartitionStreamResponse.Size(m)
}
func (m *StreamingReadClientMessageNew_DestroyPartitionStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew_DestroyPartitionStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew_DestroyPartitionStreamResponse proto.InternalMessageInfo

func (m *StreamingReadClientMessageNew_DestroyPartitionStreamResponse) GetPartitionStreamId() int64 {
	if m != nil {
		return m.PartitionStreamId
	}
	return 0
}

// Signal for server that client is not ready to recieve more data from this partition.
type StreamingReadClientMessageNew_StopReadRequest struct {
	PartitionStreamIds   []int64  `protobuf:"varint,1,rep,packed,name=partition_stream_ids,json=partitionStreamIds,proto3" json:"partition_stream_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadClientMessageNew_StopReadRequest) Reset() {
	*m = StreamingReadClientMessageNew_StopReadRequest{}
}
func (m *StreamingReadClientMessageNew_StopReadRequest) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadClientMessageNew_StopReadRequest) ProtoMessage() {}
func (*StreamingReadClientMessageNew_StopReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 4}
}

func (m *StreamingReadClientMessageNew_StopReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew_StopReadRequest.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew_StopReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew_StopReadRequest.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew_StopReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew_StopReadRequest.Merge(m, src)
}
func (m *StreamingReadClientMessageNew_StopReadRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew_StopReadRequest.Size(m)
}
func (m *StreamingReadClientMessageNew_StopReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew_StopReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew_StopReadRequest proto.InternalMessageInfo

func (m *StreamingReadClientMessageNew_StopReadRequest) GetPartitionStreamIds() []int64 {
	if m != nil {
		return m.PartitionStreamIds
	}
	return nil
}

// Signal for server that client is ready to receive more data from this partition.
type StreamingReadClientMessageNew_ResumeReadRequest struct {
	PartitionStreamIds []int64 `protobuf:"varint,1,rep,packed,name=partition_stream_ids,json=partitionStreamIds,proto3" json:"partition_stream_ids,omitempty"`
	// Offset to start reading - may be smaller than known one in case of dropping of read-ahead in client lib.
	ReadOffsets []int64 `protobuf:"varint,2,rep,packed,name=read_offsets,json=readOffsets,proto3" json:"read_offsets,omitempty"`
	// Cookie for matching data from PartitionStream after resuming. Must be greater than zero.
	ResumeCookies        []int64  `protobuf:"varint,3,rep,packed,name=resume_cookies,json=resumeCookies,proto3" json:"resume_cookies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadClientMessageNew_ResumeReadRequest) Reset() {
	*m = StreamingReadClientMessageNew_ResumeReadRequest{}
}
func (m *StreamingReadClientMessageNew_ResumeReadRequest) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadClientMessageNew_ResumeReadRequest) ProtoMessage() {}
func (*StreamingReadClientMessageNew_ResumeReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 5}
}

func (m *StreamingReadClientMessageNew_ResumeReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew_ResumeReadRequest.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew_ResumeReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew_ResumeReadRequest.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew_ResumeReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew_ResumeReadRequest.Merge(m, src)
}
func (m *StreamingReadClientMessageNew_ResumeReadRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew_ResumeReadRequest.Size(m)
}
func (m *StreamingReadClientMessageNew_ResumeReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew_ResumeReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew_ResumeReadRequest proto.InternalMessageInfo

func (m *StreamingReadClientMessageNew_ResumeReadRequest) GetPartitionStreamIds() []int64 {
	if m != nil {
		return m.PartitionStreamIds
	}
	return nil
}

func (m *StreamingReadClientMessageNew_ResumeReadRequest) GetReadOffsets() []int64 {
	if m != nil {
		return m.ReadOffsets
	}
	return nil
}

func (m *StreamingReadClientMessageNew_ResumeReadRequest) GetResumeCookies() []int64 {
	if m != nil {
		return m.ResumeCookies
	}
	return nil
}

// Signal for server that client processed some read data.
type StreamingReadClientMessageNew_CommitRequest struct {
	// Partition offsets that indicates processed data.
	Commits              []*StreamingReadClientMessageNew_PartitionCommit `protobuf:"bytes,1,rep,name=commits,proto3" json:"commits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *StreamingReadClientMessageNew_CommitRequest) Reset() {
	*m = StreamingReadClientMessageNew_CommitRequest{}
}
func (m *StreamingReadClientMessageNew_CommitRequest) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadClientMessageNew_CommitRequest) ProtoMessage() {}
func (*StreamingReadClientMessageNew_CommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 6}
}

func (m *StreamingReadClientMessageNew_CommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew_CommitRequest.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew_CommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew_CommitRequest.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew_CommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew_CommitRequest.Merge(m, src)
}
func (m *StreamingReadClientMessageNew_CommitRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew_CommitRequest.Size(m)
}
func (m *StreamingReadClientMessageNew_CommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew_CommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew_CommitRequest proto.InternalMessageInfo

func (m *StreamingReadClientMessageNew_CommitRequest) GetCommits() []*StreamingReadClientMessageNew_PartitionCommit {
	if m != nil {
		return m.Commits
	}
	return nil
}

type StreamingReadClientMessageNew_PartitionStreamStatusRequest struct {
	PartitionStreamId    int64    `protobuf:"varint,1,opt,name=partition_stream_id,json=partitionStreamId,proto3" json:"partition_stream_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadClientMessageNew_PartitionStreamStatusRequest) Reset() {
	*m = StreamingReadClientMessageNew_PartitionStreamStatusRequest{}
}
func (m *StreamingReadClientMessageNew_PartitionStreamStatusRequest) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadClientMessageNew_PartitionStreamStatusRequest) ProtoMessage() {}
func (*StreamingReadClientMessageNew_PartitionStreamStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 7}
}

func (m *StreamingReadClientMessageNew_PartitionStreamStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew_PartitionStreamStatusRequest.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew_PartitionStreamStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew_PartitionStreamStatusRequest.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew_PartitionStreamStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew_PartitionStreamStatusRequest.Merge(m, src)
}
func (m *StreamingReadClientMessageNew_PartitionStreamStatusRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew_PartitionStreamStatusRequest.Size(m)
}
func (m *StreamingReadClientMessageNew_PartitionStreamStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew_PartitionStreamStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew_PartitionStreamStatusRequest proto.InternalMessageInfo

func (m *StreamingReadClientMessageNew_PartitionStreamStatusRequest) GetPartitionStreamId() int64 {
	if m != nil {
		return m.PartitionStreamId
	}
	return 0
}

// Add topic to current read session
type StreamingReadClientMessageNew_AddTopicRequest struct {
	TopicReadSettings    *StreamingReadClientMessageNew_TopicReadSettings `protobuf:"bytes,1,opt,name=topic_read_settings,json=topicReadSettings,proto3" json:"topic_read_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *StreamingReadClientMessageNew_AddTopicRequest) Reset() {
	*m = StreamingReadClientMessageNew_AddTopicRequest{}
}
func (m *StreamingReadClientMessageNew_AddTopicRequest) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadClientMessageNew_AddTopicRequest) ProtoMessage() {}
func (*StreamingReadClientMessageNew_AddTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 8}
}

func (m *StreamingReadClientMessageNew_AddTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew_AddTopicRequest.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew_AddTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew_AddTopicRequest.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew_AddTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew_AddTopicRequest.Merge(m, src)
}
func (m *StreamingReadClientMessageNew_AddTopicRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew_AddTopicRequest.Size(m)
}
func (m *StreamingReadClientMessageNew_AddTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew_AddTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew_AddTopicRequest proto.InternalMessageInfo

func (m *StreamingReadClientMessageNew_AddTopicRequest) GetTopicReadSettings() *StreamingReadClientMessageNew_TopicReadSettings {
	if m != nil {
		return m.TopicReadSettings
	}
	return nil
}

// Remove topic from current read session
type StreamingReadClientMessageNew_RemoveTopicRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadClientMessageNew_RemoveTopicRequest) Reset() {
	*m = StreamingReadClientMessageNew_RemoveTopicRequest{}
}
func (m *StreamingReadClientMessageNew_RemoveTopicRequest) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadClientMessageNew_RemoveTopicRequest) ProtoMessage() {}
func (*StreamingReadClientMessageNew_RemoveTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 9}
}

func (m *StreamingReadClientMessageNew_RemoveTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew_RemoveTopicRequest.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew_RemoveTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew_RemoveTopicRequest.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew_RemoveTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew_RemoveTopicRequest.Merge(m, src)
}
func (m *StreamingReadClientMessageNew_RemoveTopicRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew_RemoveTopicRequest.Size(m)
}
func (m *StreamingReadClientMessageNew_RemoveTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew_RemoveTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew_RemoveTopicRequest proto.InternalMessageInfo

func (m *StreamingReadClientMessageNew_RemoveTopicRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type StreamingReadClientMessageNew_TopicReadSettings struct {
	// Topic path.
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Partition groups that will be read by this session.
	// If list is empty - then session will read all partition groups.
	PartitionGroupIds []int64 `protobuf:"varint,2,rep,packed,name=partition_group_ids,json=partitionGroupIds,proto3" json:"partition_group_ids,omitempty"`
	// Read data only after this timestamp from this topic.
	StartFromWrittenAtMs int64    `protobuf:"varint,3,opt,name=start_from_written_at_ms,json=startFromWrittenAtMs,proto3" json:"start_from_written_at_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadClientMessageNew_TopicReadSettings) Reset() {
	*m = StreamingReadClientMessageNew_TopicReadSettings{}
}
func (m *StreamingReadClientMessageNew_TopicReadSettings) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadClientMessageNew_TopicReadSettings) ProtoMessage() {}
func (*StreamingReadClientMessageNew_TopicReadSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 10}
}

func (m *StreamingReadClientMessageNew_TopicReadSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew_TopicReadSettings.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew_TopicReadSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew_TopicReadSettings.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew_TopicReadSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew_TopicReadSettings.Merge(m, src)
}
func (m *StreamingReadClientMessageNew_TopicReadSettings) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew_TopicReadSettings.Size(m)
}
func (m *StreamingReadClientMessageNew_TopicReadSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew_TopicReadSettings.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew_TopicReadSettings proto.InternalMessageInfo

func (m *StreamingReadClientMessageNew_TopicReadSettings) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *StreamingReadClientMessageNew_TopicReadSettings) GetPartitionGroupIds() []int64 {
	if m != nil {
		return m.PartitionGroupIds
	}
	return nil
}

func (m *StreamingReadClientMessageNew_TopicReadSettings) GetStartFromWrittenAtMs() int64 {
	if m != nil {
		return m.StartFromWrittenAtMs
	}
	return 0
}

//*
// Message that is used for describing commit.
type StreamingReadClientMessageNew_PartitionCommit struct {
	// Identifier of partition stream with data to commit.
	PartitionStreamId int64 `protobuf:"varint,1,opt,name=partition_stream_id,json=partitionStreamId,proto3" json:"partition_stream_id,omitempty"`
	// Processed ranges.
	Offsets              []*OffsetsRange `protobuf:"bytes,2,rep,name=offsets,proto3" json:"offsets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StreamingReadClientMessageNew_PartitionCommit) Reset() {
	*m = StreamingReadClientMessageNew_PartitionCommit{}
}
func (m *StreamingReadClientMessageNew_PartitionCommit) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadClientMessageNew_PartitionCommit) ProtoMessage() {}
func (*StreamingReadClientMessageNew_PartitionCommit) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{9, 11}
}

func (m *StreamingReadClientMessageNew_PartitionCommit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadClientMessageNew_PartitionCommit.Unmarshal(m, b)
}
func (m *StreamingReadClientMessageNew_PartitionCommit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadClientMessageNew_PartitionCommit.Marshal(b, m, deterministic)
}
func (m *StreamingReadClientMessageNew_PartitionCommit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadClientMessageNew_PartitionCommit.Merge(m, src)
}
func (m *StreamingReadClientMessageNew_PartitionCommit) XXX_Size() int {
	return xxx_messageInfo_StreamingReadClientMessageNew_PartitionCommit.Size(m)
}
func (m *StreamingReadClientMessageNew_PartitionCommit) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadClientMessageNew_PartitionCommit.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadClientMessageNew_PartitionCommit proto.InternalMessageInfo

func (m *StreamingReadClientMessageNew_PartitionCommit) GetPartitionStreamId() int64 {
	if m != nil {
		return m.PartitionStreamId
	}
	return 0
}

func (m *StreamingReadClientMessageNew_PartitionCommit) GetOffsets() []*OffsetsRange {
	if m != nil {
		return m.Offsets
	}
	return nil
}

//*
// Response for read session. Contains one of :
//      InitResponse - handshake response from server.
//      BatchReadResponse - portion of data.
//      CommitResponse - acknowledgment for commit.
//      CreatePartitionStreamRequest - command from server to create a partition partition stream.
//      DestroyPartitionStreamRequest - command from server to destroy a partition partition stream.
type StreamingReadServerMessageNew struct {
	// Types that are valid to be assigned to ServerMessage:
	//	*StreamingReadServerMessageNew_InitResponse_
	//	*StreamingReadServerMessageNew_BatchReadResponse_
	//	*StreamingReadServerMessageNew_CreatePartitionStreamRequest_
	//	*StreamingReadServerMessageNew_DestroyPartitionStreamRequest_
	//	*StreamingReadServerMessageNew_CommitResponse_
	//	*StreamingReadServerMessageNew_PartitionStreamStatusResponse_
	//	*StreamingReadServerMessageNew_StopReadResponse_
	//	*StreamingReadServerMessageNew_ResumeReadResponse_
	//	*StreamingReadServerMessageNew_AddTopicResponse_
	//	*StreamingReadServerMessageNew_RemoveTopicResponse_
	ServerMessage        isStreamingReadServerMessageNew_ServerMessage `protobuf_oneof:"server_message"`
	Status               Ydb.StatusIds_StatusCode                      `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues               []*Ydb_Issue.IssueMessage                     `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *StreamingReadServerMessageNew) Reset()         { *m = StreamingReadServerMessageNew{} }
func (m *StreamingReadServerMessageNew) String() string { return proto.CompactTextString(m) }
func (*StreamingReadServerMessageNew) ProtoMessage()    {}
func (*StreamingReadServerMessageNew) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10}
}

func (m *StreamingReadServerMessageNew) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew.Merge(m, src)
}
func (m *StreamingReadServerMessageNew) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew.Size(m)
}
func (m *StreamingReadServerMessageNew) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew proto.InternalMessageInfo

type isStreamingReadServerMessageNew_ServerMessage interface {
	isStreamingReadServerMessageNew_ServerMessage()
}

type StreamingReadServerMessageNew_InitResponse_ struct {
	InitResponse *StreamingReadServerMessageNew_InitResponse `protobuf:"bytes,3,opt,name=init_response,json=initResponse,proto3,oneof"`
}

type StreamingReadServerMessageNew_BatchReadResponse_ struct {
	BatchReadResponse *StreamingReadServerMessageNew_BatchReadResponse `protobuf:"bytes,4,opt,name=batch_read_response,json=batchReadResponse,proto3,oneof"`
}

type StreamingReadServerMessageNew_CreatePartitionStreamRequest_ struct {
	CreatePartitionStreamRequest *StreamingReadServerMessageNew_CreatePartitionStreamRequest `protobuf:"bytes,5,opt,name=create_partition_stream_request,json=createPartitionStreamRequest,proto3,oneof"`
}

type StreamingReadServerMessageNew_DestroyPartitionStreamRequest_ struct {
	DestroyPartitionStreamRequest *StreamingReadServerMessageNew_DestroyPartitionStreamRequest `protobuf:"bytes,6,opt,name=destroy_partition_stream_request,json=destroyPartitionStreamRequest,proto3,oneof"`
}

type StreamingReadServerMessageNew_CommitResponse_ struct {
	CommitResponse *StreamingReadServerMessageNew_CommitResponse `protobuf:"bytes,7,opt,name=commit_response,json=commitResponse,proto3,oneof"`
}

type StreamingReadServerMessageNew_PartitionStreamStatusResponse_ struct {
	PartitionStreamStatusResponse *StreamingReadServerMessageNew_PartitionStreamStatusResponse `protobuf:"bytes,8,opt,name=partition_stream_status_response,json=partitionStreamStatusResponse,proto3,oneof"`
}

type StreamingReadServerMessageNew_StopReadResponse_ struct {
	StopReadResponse *StreamingReadServerMessageNew_StopReadResponse `protobuf:"bytes,9,opt,name=stop_read_response,json=stopReadResponse,proto3,oneof"`
}

type StreamingReadServerMessageNew_ResumeReadResponse_ struct {
	ResumeReadResponse *StreamingReadServerMessageNew_ResumeReadResponse `protobuf:"bytes,10,opt,name=resume_read_response,json=resumeReadResponse,proto3,oneof"`
}

type StreamingReadServerMessageNew_AddTopicResponse_ struct {
	AddTopicResponse *StreamingReadServerMessageNew_AddTopicResponse `protobuf:"bytes,11,opt,name=add_topic_response,json=addTopicResponse,proto3,oneof"`
}

type StreamingReadServerMessageNew_RemoveTopicResponse_ struct {
	RemoveTopicResponse *StreamingReadServerMessageNew_RemoveTopicResponse `protobuf:"bytes,12,opt,name=remove_topic_response,json=removeTopicResponse,proto3,oneof"`
}

func (*StreamingReadServerMessageNew_InitResponse_) isStreamingReadServerMessageNew_ServerMessage() {}

func (*StreamingReadServerMessageNew_BatchReadResponse_) isStreamingReadServerMessageNew_ServerMessage() {
}

func (*StreamingReadServerMessageNew_CreatePartitionStreamRequest_) isStreamingReadServerMessageNew_ServerMessage() {
}

func (*StreamingReadServerMessageNew_DestroyPartitionStreamRequest_) isStreamingReadServerMessageNew_ServerMessage() {
}

func (*StreamingReadServerMessageNew_CommitResponse_) isStreamingReadServerMessageNew_ServerMessage() {
}

func (*StreamingReadServerMessageNew_PartitionStreamStatusResponse_) isStreamingReadServerMessageNew_ServerMessage() {
}

func (*StreamingReadServerMessageNew_StopReadResponse_) isStreamingReadServerMessageNew_ServerMessage() {
}

func (*StreamingReadServerMessageNew_ResumeReadResponse_) isStreamingReadServerMessageNew_ServerMessage() {
}

func (*StreamingReadServerMessageNew_AddTopicResponse_) isStreamingReadServerMessageNew_ServerMessage() {
}

func (*StreamingReadServerMessageNew_RemoveTopicResponse_) isStreamingReadServerMessageNew_ServerMessage() {
}

func (m *StreamingReadServerMessageNew) GetServerMessage() isStreamingReadServerMessageNew_ServerMessage {
	if m != nil {
		return m.ServerMessage
	}
	return nil
}

func (m *StreamingReadServerMessageNew) GetInitResponse() *StreamingReadServerMessageNew_InitResponse {
	if x, ok := m.GetServerMessage().(*StreamingReadServerMessageNew_InitResponse_); ok {
		return x.InitResponse
	}
	return nil
}

func (m *StreamingReadServerMessageNew) GetBatchReadResponse() *StreamingReadServerMessageNew_BatchReadResponse {
	if x, ok := m.GetServerMessage().(*StreamingReadServerMessageNew_BatchReadResponse_); ok {
		return x.BatchReadResponse
	}
	return nil
}

func (m *StreamingReadServerMessageNew) GetCreatePartitionStreamRequest() *StreamingReadServerMessageNew_CreatePartitionStreamRequest {
	if x, ok := m.GetServerMessage().(*StreamingReadServerMessageNew_CreatePartitionStreamRequest_); ok {
		return x.CreatePartitionStreamRequest
	}
	return nil
}

func (m *StreamingReadServerMessageNew) GetDestroyPartitionStreamRequest() *StreamingReadServerMessageNew_DestroyPartitionStreamRequest {
	if x, ok := m.GetServerMessage().(*StreamingReadServerMessageNew_DestroyPartitionStreamRequest_); ok {
		return x.DestroyPartitionStreamRequest
	}
	return nil
}

func (m *StreamingReadServerMessageNew) GetCommitResponse() *StreamingReadServerMessageNew_CommitResponse {
	if x, ok := m.GetServerMessage().(*StreamingReadServerMessageNew_CommitResponse_); ok {
		return x.CommitResponse
	}
	return nil
}

func (m *StreamingReadServerMessageNew) GetPartitionStreamStatusResponse() *StreamingReadServerMessageNew_PartitionStreamStatusResponse {
	if x, ok := m.GetServerMessage().(*StreamingReadServerMessageNew_PartitionStreamStatusResponse_); ok {
		return x.PartitionStreamStatusResponse
	}
	return nil
}

func (m *StreamingReadServerMessageNew) GetStopReadResponse() *StreamingReadServerMessageNew_StopReadResponse {
	if x, ok := m.GetServerMessage().(*StreamingReadServerMessageNew_StopReadResponse_); ok {
		return x.StopReadResponse
	}
	return nil
}

func (m *StreamingReadServerMessageNew) GetResumeReadResponse() *StreamingReadServerMessageNew_ResumeReadResponse {
	if x, ok := m.GetServerMessage().(*StreamingReadServerMessageNew_ResumeReadResponse_); ok {
		return x.ResumeReadResponse
	}
	return nil
}

func (m *StreamingReadServerMessageNew) GetAddTopicResponse() *StreamingReadServerMessageNew_AddTopicResponse {
	if x, ok := m.GetServerMessage().(*StreamingReadServerMessageNew_AddTopicResponse_); ok {
		return x.AddTopicResponse
	}
	return nil
}

func (m *StreamingReadServerMessageNew) GetRemoveTopicResponse() *StreamingReadServerMessageNew_RemoveTopicResponse {
	if x, ok := m.GetServerMessage().(*StreamingReadServerMessageNew_RemoveTopicResponse_); ok {
		return x.RemoveTopicResponse
	}
	return nil
}

func (m *StreamingReadServerMessageNew) GetStatus() Ydb.StatusIds_StatusCode {
	if m != nil {
		return m.Status
	}
	return Ydb.StatusIds_STATUS_CODE_UNSPECIFIED
}

func (m *StreamingReadServerMessageNew) GetIssues() []*Ydb_Issue.IssueMessage {
	if m != nil {
		return m.Issues
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamingReadServerMessageNew) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamingReadServerMessageNew_InitResponse_)(nil),
		(*StreamingReadServerMessageNew_BatchReadResponse_)(nil),
		(*StreamingReadServerMessageNew_CreatePartitionStreamRequest_)(nil),
		(*StreamingReadServerMessageNew_DestroyPartitionStreamRequest_)(nil),
		(*StreamingReadServerMessageNew_CommitResponse_)(nil),
		(*StreamingReadServerMessageNew_PartitionStreamStatusResponse_)(nil),
		(*StreamingReadServerMessageNew_StopReadResponse_)(nil),
		(*StreamingReadServerMessageNew_ResumeReadResponse_)(nil),
		(*StreamingReadServerMessageNew_AddTopicResponse_)(nil),
		(*StreamingReadServerMessageNew_RemoveTopicResponse_)(nil),
	}
}

// Handshake response.
type StreamingReadServerMessageNew_InitResponse struct {
	// Read session identifier for debug purposes.
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Block format version of data client will receive from topics.
	BlockFormatVersionByTopic map[string]int64 `protobuf:"bytes,2,rep,name=block_format_version_by_topic,json=blockFormatVersionByTopic,proto3" json:"block_format_version_by_topic,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Choosed maximan cache size by server.
	// Client must use cache of this size. Could change on retries - reduce size of cache in this case.
	MaxMetaCacheSize     int64    `protobuf:"varint,10,opt,name=max_meta_cache_size,json=maxMetaCacheSize,proto3" json:"max_meta_cache_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadServerMessageNew_InitResponse) Reset() {
	*m = StreamingReadServerMessageNew_InitResponse{}
}
func (m *StreamingReadServerMessageNew_InitResponse) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadServerMessageNew_InitResponse) ProtoMessage() {}
func (*StreamingReadServerMessageNew_InitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10, 0}
}

func (m *StreamingReadServerMessageNew_InitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew_InitResponse.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew_InitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew_InitResponse.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew_InitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew_InitResponse.Merge(m, src)
}
func (m *StreamingReadServerMessageNew_InitResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew_InitResponse.Size(m)
}
func (m *StreamingReadServerMessageNew_InitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew_InitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew_InitResponse proto.InternalMessageInfo

func (m *StreamingReadServerMessageNew_InitResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *StreamingReadServerMessageNew_InitResponse) GetBlockFormatVersionByTopic() map[string]int64 {
	if m != nil {
		return m.BlockFormatVersionByTopic
	}
	return nil
}

func (m *StreamingReadServerMessageNew_InitResponse) GetMaxMetaCacheSize() int64 {
	if m != nil {
		return m.MaxMetaCacheSize
	}
	return 0
}

// Command to create a partition partition stream.
// Client must react on this signal by sending StartRead when ready recieve data from this partition.
type StreamingReadServerMessageNew_CreatePartitionStreamRequest struct {
	// Partition partition stream description.
	PartitionStream *PartitionStream `protobuf:"bytes,1,opt,name=partition_stream,json=partitionStream,proto3" json:"partition_stream,omitempty"`
	// Actual committed offset.
	CommittedOffset int64 `protobuf:"varint,2,opt,name=committed_offset,json=committedOffset,proto3" json:"committed_offset,omitempty"`
	// Offset of first not existing message in partition till now.
	EndOffset            int64    `protobuf:"varint,3,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadServerMessageNew_CreatePartitionStreamRequest) Reset() {
	*m = StreamingReadServerMessageNew_CreatePartitionStreamRequest{}
}
func (m *StreamingReadServerMessageNew_CreatePartitionStreamRequest) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadServerMessageNew_CreatePartitionStreamRequest) ProtoMessage() {}
func (*StreamingReadServerMessageNew_CreatePartitionStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10, 1}
}

func (m *StreamingReadServerMessageNew_CreatePartitionStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew_CreatePartitionStreamRequest.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew_CreatePartitionStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew_CreatePartitionStreamRequest.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew_CreatePartitionStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew_CreatePartitionStreamRequest.Merge(m, src)
}
func (m *StreamingReadServerMessageNew_CreatePartitionStreamRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew_CreatePartitionStreamRequest.Size(m)
}
func (m *StreamingReadServerMessageNew_CreatePartitionStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew_CreatePartitionStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew_CreatePartitionStreamRequest proto.InternalMessageInfo

func (m *StreamingReadServerMessageNew_CreatePartitionStreamRequest) GetPartitionStream() *PartitionStream {
	if m != nil {
		return m.PartitionStream
	}
	return nil
}

func (m *StreamingReadServerMessageNew_CreatePartitionStreamRequest) GetCommittedOffset() int64 {
	if m != nil {
		return m.CommittedOffset
	}
	return 0
}

func (m *StreamingReadServerMessageNew_CreatePartitionStreamRequest) GetEndOffset() int64 {
	if m != nil {
		return m.EndOffset
	}
	return 0
}

// Command to destroy concrete partition stream.
type StreamingReadServerMessageNew_DestroyPartitionStreamRequest struct {
	// Identifier of partition partition stream that is ready to be closed by server.
	PartitionStreamId int64 `protobuf:"varint,1,opt,name=partition_stream_id,json=partitionStreamId,proto3" json:"partition_stream_id,omitempty"`
	// Flag of gracefull or not destroy.
	// If True then server is waiting for Destroyed signal from client before giving of this partition for other read session.
	// Server will not send more data from this partition.
	// Client can process all received data and wait for commit and only after send Destroyed signal.
	// If False then server gives partition for other session right now.
	// All futher commits for this PartitionStream has no effect. Server is not waiting for Destroyed signal.
	Graceful bool `protobuf:"varint,2,opt,name=graceful,proto3" json:"graceful,omitempty"`
	// Last known committed offset.
	CommittedOffset      int64    `protobuf:"varint,3,opt,name=committed_offset,json=committedOffset,proto3" json:"committed_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadServerMessageNew_DestroyPartitionStreamRequest) Reset() {
	*m = StreamingReadServerMessageNew_DestroyPartitionStreamRequest{}
}
func (m *StreamingReadServerMessageNew_DestroyPartitionStreamRequest) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadServerMessageNew_DestroyPartitionStreamRequest) ProtoMessage() {}
func (*StreamingReadServerMessageNew_DestroyPartitionStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10, 2}
}

func (m *StreamingReadServerMessageNew_DestroyPartitionStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew_DestroyPartitionStreamRequest.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew_DestroyPartitionStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew_DestroyPartitionStreamRequest.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew_DestroyPartitionStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew_DestroyPartitionStreamRequest.Merge(m, src)
}
func (m *StreamingReadServerMessageNew_DestroyPartitionStreamRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew_DestroyPartitionStreamRequest.Size(m)
}
func (m *StreamingReadServerMessageNew_DestroyPartitionStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew_DestroyPartitionStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew_DestroyPartitionStreamRequest proto.InternalMessageInfo

func (m *StreamingReadServerMessageNew_DestroyPartitionStreamRequest) GetPartitionStreamId() int64 {
	if m != nil {
		return m.PartitionStreamId
	}
	return 0
}

func (m *StreamingReadServerMessageNew_DestroyPartitionStreamRequest) GetGraceful() bool {
	if m != nil {
		return m.Graceful
	}
	return false
}

func (m *StreamingReadServerMessageNew_DestroyPartitionStreamRequest) GetCommittedOffset() int64 {
	if m != nil {
		return m.CommittedOffset
	}
	return 0
}

// Acknowledgement for commits.
type StreamingReadServerMessageNew_CommitResponse struct {
	// Partitions with progress.
	PartitionsCommittedOffsets []*StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset `protobuf:"bytes,1,rep,name=partitions_committed_offsets,json=partitionsCommittedOffsets,proto3" json:"partitions_committed_offsets,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                                                                 `json:"-"`
	XXX_unrecognized           []byte                                                                   `json:"-"`
	XXX_sizecache              int32                                                                    `json:"-"`
}

func (m *StreamingReadServerMessageNew_CommitResponse) Reset() {
	*m = StreamingReadServerMessageNew_CommitResponse{}
}
func (m *StreamingReadServerMessageNew_CommitResponse) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadServerMessageNew_CommitResponse) ProtoMessage() {}
func (*StreamingReadServerMessageNew_CommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10, 3}
}

func (m *StreamingReadServerMessageNew_CommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew_CommitResponse.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew_CommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew_CommitResponse.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew_CommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew_CommitResponse.Merge(m, src)
}
func (m *StreamingReadServerMessageNew_CommitResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew_CommitResponse.Size(m)
}
func (m *StreamingReadServerMessageNew_CommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew_CommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew_CommitResponse proto.InternalMessageInfo

func (m *StreamingReadServerMessageNew_CommitResponse) GetPartitionsCommittedOffsets() []*StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset {
	if m != nil {
		return m.PartitionsCommittedOffsets
	}
	return nil
}

// Per-partition commit representation.
type StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset struct {
	// Partition partition stream identifier.
	PartitionStreamId int64 `protobuf:"varint,1,opt,name=partition_stream_id,json=partitionStreamId,proto3" json:"partition_stream_id,omitempty"`
	// Last committed offset.
	CommittedOffset      int64    `protobuf:"varint,2,opt,name=committed_offset,json=committedOffset,proto3" json:"committed_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset) Reset() {
	*m = StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset{}
}
func (m *StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset) ProtoMessage() {}
func (*StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10, 3, 0}
}

func (m *StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset.Merge(m, src)
}
func (m *StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset.Size(m)
}
func (m *StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset proto.InternalMessageInfo

func (m *StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset) GetPartitionStreamId() int64 {
	if m != nil {
		return m.PartitionStreamId
	}
	return 0
}

func (m *StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset) GetCommittedOffset() int64 {
	if m != nil {
		return m.CommittedOffset
	}
	return 0
}

// Readed data.
type StreamingReadServerMessageNew_BatchReadResponse struct {
	SkipRange []*StreamingReadServerMessageNew_BatchReadResponse_SkipRange `protobuf:"bytes,1,rep,name=skip_range,json=skipRange,proto3" json:"skip_range,omitempty"`
	// Per-partition data.
	Partitions           []*StreamingReadServerMessageNew_BatchReadResponse_PartitionData `protobuf:"bytes,2,rep,name=partitions,proto3" json:"partitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                         `json:"-"`
	XXX_unrecognized     []byte                                                           `json:"-"`
	XXX_sizecache        int32                                                            `json:"-"`
}

func (m *StreamingReadServerMessageNew_BatchReadResponse) Reset() {
	*m = StreamingReadServerMessageNew_BatchReadResponse{}
}
func (m *StreamingReadServerMessageNew_BatchReadResponse) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadServerMessageNew_BatchReadResponse) ProtoMessage() {}
func (*StreamingReadServerMessageNew_BatchReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10, 4}
}

func (m *StreamingReadServerMessageNew_BatchReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse.Merge(m, src)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse.Size(m)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse proto.InternalMessageInfo

func (m *StreamingReadServerMessageNew_BatchReadResponse) GetSkipRange() []*StreamingReadServerMessageNew_BatchReadResponse_SkipRange {
	if m != nil {
		return m.SkipRange
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse) GetPartitions() []*StreamingReadServerMessageNew_BatchReadResponse_PartitionData {
	if m != nil {
		return m.Partitions
	}
	return nil
}

// One client message representation.
// Client lib must send commit right now for all skipped data (from it's read offset till first offset in range).
type StreamingReadServerMessageNew_BatchReadResponse_PartitionData struct {
	// Data inside this message is from partition stream with this identifier.
	PartitionStreamId int64 `protobuf:"varint,1,opt,name=partition_stream_id,json=partitionStreamId,proto3" json:"partition_stream_id,omitempty"`
	// Offsets in partition that assigned for messages.
	// Unique value for clientside deduplication - (topic, cluster, partition_id, offset).
	Offsets []int64 `protobuf:"varint,2,rep,packed,name=offsets,proto3" json:"offsets,omitempty"`
	// Sequence numbers that provided with messages on write from client.
	// Same size as offsets.
	// Unique value for clientside deduplication - (topic, cluster, message_group_id, sequence_number).
	SequenceNumbers []int64 `protobuf:"varint,3,rep,packed,name=sequence_numbers,json=sequenceNumbers,proto3" json:"sequence_numbers,omitempty"`
	// Timestamps of creation of messages provided on write from client.
	// Same size as offsets.
	CreatedAtMs []int64 `protobuf:"varint,4,rep,packed,name=created_at_ms,json=createdAtMs,proto3" json:"created_at_ms,omitempty"`
	// Timestamps of writing in partition for client messages.
	// Same size as offsets.
	WrittenAtMs []int64 `protobuf:"varint,5,rep,packed,name=written_at_ms,json=writtenAtMs,proto3" json:"written_at_ms,omitempty"`
	// New messageGroupIds for updating cache.
	// Size of vector is the same as number of negative values in message_group_id_indexes.
	MessageGroupIds []string `protobuf:"bytes,6,rep,name=message_group_ids,json=messageGroupIds,proto3" json:"message_group_ids,omitempty"`
	// Indexes of messageGroupIds.
	// same size as offsets.
	// Negative values (-X) means - put first not used messageGroupId from message_group_ids on index X in cache and use it for this client message.
	// Positive values (X) means -use element by index X from cache for this client message. Do not change state of cache.
	// Assumptions:
	//      - Server will use positive values only for proposed before indexes.
	//      - Each value is from 1 to max_meta_cache_size by abs.
	//      - Do not make assumptions about choosing algorihm.
	//      - There is separate caches of size max_meta_cache_size for different partition and different metadata fileds - message_group_id, ip and session_meta_data.
	//      - Number of negative values in message_group_id_indexes vector is the same as length of message_group_ids vector.
	// Example:
	//                max_meta_cache_size :  2
	//                      Cache indexes :  1  2
	//      Cache state before processing :  s0,? // ? means not set yet.
	//
	//                  message_group_ids :  s1 s2 s3 s1
	//           message_group_id_indexes :  -1    -2    1     2     1     1     -1    2     -2
	//                        cache state :  s1,?  s1,s2 s1,s2 s1,s2 s1,s2 s1,s2 s3,s2 s3,s2 s3,s1
	//             real message group ids :  s1    s2    s1    s2    s1    s1    s3    s2    s1
	//                      Cache indexes :  1  2
	//       Cache state after processing :  s3,s1
	MessageGroupIdIndexes []int64 `protobuf:"zigzag64,7,rep,packed,name=message_group_id_indexes,json=messageGroupIdIndexes,proto3" json:"message_group_id_indexes,omitempty"`
	// New ips for updating ip cache.
	Ips []string `protobuf:"bytes,8,rep,name=ips,proto3" json:"ips,omitempty"`
	// Same as message_group_id_indexes but for ips.
	IpIndexes []int64 `protobuf:"zigzag64,9,rep,packed,name=ip_indexes,json=ipIndexes,proto3" json:"ip_indexes,omitempty"`
	// New session meta datas for updating cache.
	MessageSessionMeta []*SessionMetaValue `protobuf:"bytes,10,rep,name=message_session_meta,json=messageSessionMeta,proto3" json:"message_session_meta,omitempty"`
	// Same as message_group_id_indexes but for session meta data.
	MessageSessionMetaIndexes []int64 `protobuf:"zigzag64,11,rep,packed,name=message_session_meta_indexes,json=messageSessionMetaIndexes,proto3" json:"message_session_meta_indexes,omitempty"`
	// Client messages sizes.
	// Same size as offsets.
	MessageSizes []int64 `protobuf:"varint,12,rep,packed,name=message_sizes,json=messageSizes,proto3" json:"message_sizes,omitempty"`
	// Block must contain whole client message when it's size is not bigger that max_block_size.
	// If message is bigger than max_block_size - it will be transferred as SIZE/max_block_size blocks. All of this blocks will be with block_count = 0 but not the last one - last one's block_count will be 0;
	// Blocks can be reordered upto provided by client uncompressed free buffer size.
	// blocks:      A A A B B B CDE
	// offset:      1 1 1 4 4 4 6
	// part_number: 0 1 2 0 1 2 0
	// count:       0 0 1 0 0 1 3
	// Offset will be the same as in Offsets.
	BlocksOffsets     []int64 `protobuf:"varint,13,rep,packed,name=blocks_offsets,json=blocksOffsets,proto3" json:"blocks_offsets,omitempty"`
	BlocksPartNumbers []int64 `protobuf:"varint,14,rep,packed,name=blocks_part_numbers,json=blocksPartNumbers,proto3" json:"blocks_part_numbers,omitempty"`
	// How many complete messages and imcomplete messages end parts (one at most) this block contains
	BlocksMessageCounts     []int64 `protobuf:"varint,15,rep,packed,name=blocks_message_counts,json=blocksMessageCounts,proto3" json:"blocks_message_counts,omitempty"`
	BlocksUncompressedSizes []int64 `protobuf:"varint,16,rep,packed,name=blocks_uncompressed_sizes,json=blocksUncompressedSizes,proto3" json:"blocks_uncompressed_sizes,omitempty"`
	// In block format version 0 each byte contains only block codec identifier
	BlocksHeaders [][]byte `protobuf:"bytes,17,rep,name=blocks_headers,json=blocksHeaders,proto3" json:"blocks_headers,omitempty"`
	BlocksData    [][]byte `protobuf:"bytes,18,rep,name=blocks_data,json=blocksData,proto3" json:"blocks_data,omitempty"`
	// Zero if this is not first portion of data after resume or provided by client cookie otherwise.
	ResumeCookie         int64                                                                         `protobuf:"varint,50,opt,name=resume_cookie,json=resumeCookie,proto3" json:"resume_cookie,omitempty"`
	ReadStatistics       *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics `protobuf:"bytes,100,opt,name=read_statistics,json=readStatistics,proto3" json:"read_statistics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                        `json:"-"`
	XXX_sizecache        int32                                                                         `json:"-"`
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) Reset() {
	*m = StreamingReadServerMessageNew_BatchReadResponse_PartitionData{}
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadServerMessageNew_BatchReadResponse_PartitionData) ProtoMessage() {}
func (*StreamingReadServerMessageNew_BatchReadResponse_PartitionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10, 4, 0}
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_PartitionData.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_PartitionData.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_PartitionData.Merge(m, src)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_PartitionData.Size(m)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_PartitionData.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_PartitionData proto.InternalMessageInfo

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetPartitionStreamId() int64 {
	if m != nil {
		return m.PartitionStreamId
	}
	return 0
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetOffsets() []int64 {
	if m != nil {
		return m.Offsets
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetSequenceNumbers() []int64 {
	if m != nil {
		return m.SequenceNumbers
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetCreatedAtMs() []int64 {
	if m != nil {
		return m.CreatedAtMs
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetWrittenAtMs() []int64 {
	if m != nil {
		return m.WrittenAtMs
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetMessageGroupIds() []string {
	if m != nil {
		return m.MessageGroupIds
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetMessageGroupIdIndexes() []int64 {
	if m != nil {
		return m.MessageGroupIdIndexes
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetIps() []string {
	if m != nil {
		return m.Ips
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetIpIndexes() []int64 {
	if m != nil {
		return m.IpIndexes
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetMessageSessionMeta() []*SessionMetaValue {
	if m != nil {
		return m.MessageSessionMeta
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetMessageSessionMetaIndexes() []int64 {
	if m != nil {
		return m.MessageSessionMetaIndexes
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetMessageSizes() []int64 {
	if m != nil {
		return m.MessageSizes
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetBlocksOffsets() []int64 {
	if m != nil {
		return m.BlocksOffsets
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetBlocksPartNumbers() []int64 {
	if m != nil {
		return m.BlocksPartNumbers
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetBlocksMessageCounts() []int64 {
	if m != nil {
		return m.BlocksMessageCounts
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetBlocksUncompressedSizes() []int64 {
	if m != nil {
		return m.BlocksUncompressedSizes
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetBlocksHeaders() [][]byte {
	if m != nil {
		return m.BlocksHeaders
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetBlocksData() [][]byte {
	if m != nil {
		return m.BlocksData
	}
	return nil
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetResumeCookie() int64 {
	if m != nil {
		return m.ResumeCookie
	}
	return 0
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData) GetReadStatistics() *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics {
	if m != nil {
		return m.ReadStatistics
	}
	return nil
}

type StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics struct {
	BlobsFromCache       int64    `protobuf:"varint,1,opt,name=blobs_from_cache,json=blobsFromCache,proto3" json:"blobs_from_cache,omitempty"`
	BlobsFromDisk        int64    `protobuf:"varint,2,opt,name=blobs_from_disk,json=blobsFromDisk,proto3" json:"blobs_from_disk,omitempty"`
	BytesFromHead        int64    `protobuf:"varint,3,opt,name=bytes_from_head,json=bytesFromHead,proto3" json:"bytes_from_head,omitempty"`
	BytesFromCache       int64    `protobuf:"varint,4,opt,name=bytes_from_cache,json=bytesFromCache,proto3" json:"bytes_from_cache,omitempty"`
	BytesFromDisk        int64    `protobuf:"varint,5,opt,name=bytes_from_disk,json=bytesFromDisk,proto3" json:"bytes_from_disk,omitempty"`
	RepackDurationMs     int64    `protobuf:"varint,6,opt,name=repack_duration_ms,json=repackDurationMs,proto3" json:"repack_duration_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) Reset() {
	*m = StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics{}
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) ProtoMessage() {}
func (*StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10, 4, 0, 0}
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics.Merge(m, src)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics.Size(m)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics proto.InternalMessageInfo

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) GetBlobsFromCache() int64 {
	if m != nil {
		return m.BlobsFromCache
	}
	return 0
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) GetBlobsFromDisk() int64 {
	if m != nil {
		return m.BlobsFromDisk
	}
	return 0
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) GetBytesFromHead() int64 {
	if m != nil {
		return m.BytesFromHead
	}
	return 0
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) GetBytesFromCache() int64 {
	if m != nil {
		return m.BytesFromCache
	}
	return 0
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) GetBytesFromDisk() int64 {
	if m != nil {
		return m.BytesFromDisk
	}
	return 0
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics) GetRepackDurationMs() int64 {
	if m != nil {
		return m.RepackDurationMs
	}
	return 0
}

type StreamingReadServerMessageNew_BatchReadResponse_SkipRange struct {
	// Partition Stream identifier.
	PartitionStreamId int64 `protobuf:"varint,1,opt,name=partition_stream_id,json=partitionStreamId,proto3" json:"partition_stream_id,omitempty"`
	// When some data is skipped by client parameters (read_timestamp_ms for example) then range of skipped offsets is sended to client.
	// Client lib must commit this range and change read_offset to end of this range.
	SkipRange            *OffsetsRange `protobuf:"bytes,2,opt,name=skip_range,json=skipRange,proto3" json:"skip_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_SkipRange) Reset() {
	*m = StreamingReadServerMessageNew_BatchReadResponse_SkipRange{}
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_SkipRange) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadServerMessageNew_BatchReadResponse_SkipRange) ProtoMessage() {}
func (*StreamingReadServerMessageNew_BatchReadResponse_SkipRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10, 4, 1}
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_SkipRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_SkipRange.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_SkipRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_SkipRange.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_SkipRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_SkipRange.Merge(m, src)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_SkipRange) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_SkipRange.Size(m)
}
func (m *StreamingReadServerMessageNew_BatchReadResponse_SkipRange) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_SkipRange.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew_BatchReadResponse_SkipRange proto.InternalMessageInfo

func (m *StreamingReadServerMessageNew_BatchReadResponse_SkipRange) GetPartitionStreamId() int64 {
	if m != nil {
		return m.PartitionStreamId
	}
	return 0
}

func (m *StreamingReadServerMessageNew_BatchReadResponse_SkipRange) GetSkipRange() *OffsetsRange {
	if m != nil {
		return m.SkipRange
	}
	return nil
}

// Response for status requst.
type StreamingReadServerMessageNew_PartitionStreamStatusResponse struct {
	// Identifier of partition partition stream that is ready to be closed by server.
	PartitionStreamId int64 `protobuf:"varint,1,opt,name=partition_stream_id,json=partitionStreamId,proto3" json:"partition_stream_id,omitempty"`
	CommittedOffset   int64 `protobuf:"varint,2,opt,name=committed_offset,json=committedOffset,proto3" json:"committed_offset,omitempty"`
	EndOffset         int64 `protobuf:"varint,3,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	// WriteTimestamp of next message (and end_offset) will be not less that WriteWatermarkMs.
	WrittenAtWatermarkMs int64    `protobuf:"varint,4,opt,name=written_at_watermark_ms,json=writtenAtWatermarkMs,proto3" json:"written_at_watermark_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadServerMessageNew_PartitionStreamStatusResponse) Reset() {
	*m = StreamingReadServerMessageNew_PartitionStreamStatusResponse{}
}
func (m *StreamingReadServerMessageNew_PartitionStreamStatusResponse) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadServerMessageNew_PartitionStreamStatusResponse) ProtoMessage() {}
func (*StreamingReadServerMessageNew_PartitionStreamStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10, 5}
}

func (m *StreamingReadServerMessageNew_PartitionStreamStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew_PartitionStreamStatusResponse.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew_PartitionStreamStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew_PartitionStreamStatusResponse.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew_PartitionStreamStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew_PartitionStreamStatusResponse.Merge(m, src)
}
func (m *StreamingReadServerMessageNew_PartitionStreamStatusResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew_PartitionStreamStatusResponse.Size(m)
}
func (m *StreamingReadServerMessageNew_PartitionStreamStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew_PartitionStreamStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew_PartitionStreamStatusResponse proto.InternalMessageInfo

func (m *StreamingReadServerMessageNew_PartitionStreamStatusResponse) GetPartitionStreamId() int64 {
	if m != nil {
		return m.PartitionStreamId
	}
	return 0
}

func (m *StreamingReadServerMessageNew_PartitionStreamStatusResponse) GetCommittedOffset() int64 {
	if m != nil {
		return m.CommittedOffset
	}
	return 0
}

func (m *StreamingReadServerMessageNew_PartitionStreamStatusResponse) GetEndOffset() int64 {
	if m != nil {
		return m.EndOffset
	}
	return 0
}

func (m *StreamingReadServerMessageNew_PartitionStreamStatusResponse) GetWrittenAtWatermarkMs() int64 {
	if m != nil {
		return m.WrittenAtWatermarkMs
	}
	return 0
}

type StreamingReadServerMessageNew_StopReadResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadServerMessageNew_StopReadResponse) Reset() {
	*m = StreamingReadServerMessageNew_StopReadResponse{}
}
func (m *StreamingReadServerMessageNew_StopReadResponse) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadServerMessageNew_StopReadResponse) ProtoMessage() {}
func (*StreamingReadServerMessageNew_StopReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10, 6}
}

func (m *StreamingReadServerMessageNew_StopReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew_StopReadResponse.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew_StopReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew_StopReadResponse.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew_StopReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew_StopReadResponse.Merge(m, src)
}
func (m *StreamingReadServerMessageNew_StopReadResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew_StopReadResponse.Size(m)
}
func (m *StreamingReadServerMessageNew_StopReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew_StopReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew_StopReadResponse proto.InternalMessageInfo

type StreamingReadServerMessageNew_ResumeReadResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadServerMessageNew_ResumeReadResponse) Reset() {
	*m = StreamingReadServerMessageNew_ResumeReadResponse{}
}
func (m *StreamingReadServerMessageNew_ResumeReadResponse) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadServerMessageNew_ResumeReadResponse) ProtoMessage() {}
func (*StreamingReadServerMessageNew_ResumeReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10, 7}
}

func (m *StreamingReadServerMessageNew_ResumeReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew_ResumeReadResponse.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew_ResumeReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew_ResumeReadResponse.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew_ResumeReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew_ResumeReadResponse.Merge(m, src)
}
func (m *StreamingReadServerMessageNew_ResumeReadResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew_ResumeReadResponse.Size(m)
}
func (m *StreamingReadServerMessageNew_ResumeReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew_ResumeReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew_ResumeReadResponse proto.InternalMessageInfo

type StreamingReadServerMessageNew_AddTopicResponse struct {
	// Block format version of data client will receive from the topic.
	BlockFormatVersion   int64    `protobuf:"varint,1,opt,name=block_format_version,json=blockFormatVersion,proto3" json:"block_format_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadServerMessageNew_AddTopicResponse) Reset() {
	*m = StreamingReadServerMessageNew_AddTopicResponse{}
}
func (m *StreamingReadServerMessageNew_AddTopicResponse) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadServerMessageNew_AddTopicResponse) ProtoMessage() {}
func (*StreamingReadServerMessageNew_AddTopicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10, 8}
}

func (m *StreamingReadServerMessageNew_AddTopicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew_AddTopicResponse.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew_AddTopicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew_AddTopicResponse.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew_AddTopicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew_AddTopicResponse.Merge(m, src)
}
func (m *StreamingReadServerMessageNew_AddTopicResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew_AddTopicResponse.Size(m)
}
func (m *StreamingReadServerMessageNew_AddTopicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew_AddTopicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew_AddTopicResponse proto.InternalMessageInfo

func (m *StreamingReadServerMessageNew_AddTopicResponse) GetBlockFormatVersion() int64 {
	if m != nil {
		return m.BlockFormatVersion
	}
	return 0
}

type StreamingReadServerMessageNew_RemoveTopicResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingReadServerMessageNew_RemoveTopicResponse) Reset() {
	*m = StreamingReadServerMessageNew_RemoveTopicResponse{}
}
func (m *StreamingReadServerMessageNew_RemoveTopicResponse) String() string {
	return proto.CompactTextString(m)
}
func (*StreamingReadServerMessageNew_RemoveTopicResponse) ProtoMessage() {}
func (*StreamingReadServerMessageNew_RemoveTopicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{10, 9}
}

func (m *StreamingReadServerMessageNew_RemoveTopicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingReadServerMessageNew_RemoveTopicResponse.Unmarshal(m, b)
}
func (m *StreamingReadServerMessageNew_RemoveTopicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingReadServerMessageNew_RemoveTopicResponse.Marshal(b, m, deterministic)
}
func (m *StreamingReadServerMessageNew_RemoveTopicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingReadServerMessageNew_RemoveTopicResponse.Merge(m, src)
}
func (m *StreamingReadServerMessageNew_RemoveTopicResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingReadServerMessageNew_RemoveTopicResponse.Size(m)
}
func (m *StreamingReadServerMessageNew_RemoveTopicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingReadServerMessageNew_RemoveTopicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingReadServerMessageNew_RemoveTopicResponse proto.InternalMessageInfo

//*
// Message that represens concrete partition partition stream.
type PartitionStream struct {
	// Topic path of partition.
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Cluster of topic instance.
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Partition identifier. Explicit only for debug purposes.
	PartitionId int64 `protobuf:"varint,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	// Partition group identifier. Explicit only for debug purposes.
	PartitionGroupId int64 `protobuf:"varint,4,opt,name=partition_group_id,json=partitionGroupId,proto3" json:"partition_group_id,omitempty"`
	// Identitifier of partition stream. Unique inside one RPC call.
	PartitionStreamId int64 `protobuf:"varint,6,opt,name=partition_stream_id,json=partitionStreamId,proto3" json:"partition_stream_id,omitempty"`
	// Opaque blob. Provide it with partition stream in state for session reconnects.
	ConnectionMeta       []byte   `protobuf:"bytes,7,opt,name=connection_meta,json=connectionMeta,proto3" json:"connection_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartitionStream) Reset()         { *m = PartitionStream{} }
func (m *PartitionStream) String() string { return proto.CompactTextString(m) }
func (*PartitionStream) ProtoMessage()    {}
func (*PartitionStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{11}
}

func (m *PartitionStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionStream.Unmarshal(m, b)
}
func (m *PartitionStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionStream.Marshal(b, m, deterministic)
}
func (m *PartitionStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionStream.Merge(m, src)
}
func (m *PartitionStream) XXX_Size() int {
	return xxx_messageInfo_PartitionStream.Size(m)
}
func (m *PartitionStream) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionStream.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionStream proto.InternalMessageInfo

func (m *PartitionStream) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *PartitionStream) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *PartitionStream) GetPartitionId() int64 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *PartitionStream) GetPartitionGroupId() int64 {
	if m != nil {
		return m.PartitionGroupId
	}
	return 0
}

func (m *PartitionStream) GetPartitionStreamId() int64 {
	if m != nil {
		return m.PartitionStreamId
	}
	return 0
}

func (m *PartitionStream) GetConnectionMeta() []byte {
	if m != nil {
		return m.ConnectionMeta
	}
	return nil
}

type MigrationStreamingReadClientMessage struct {
	// Types that are valid to be assigned to Request:
	//	*MigrationStreamingReadClientMessage_InitRequest_
	//	*MigrationStreamingReadClientMessage_Read_
	//	*MigrationStreamingReadClientMessage_StartRead_
	//	*MigrationStreamingReadClientMessage_Commit_
	//	*MigrationStreamingReadClientMessage_Released_
	//	*MigrationStreamingReadClientMessage_Status_
	Request isMigrationStreamingReadClientMessage_Request `protobuf_oneof:"request"`
	// User credentials if update is needed or empty string.
	Token                []byte   `protobuf:"bytes,20,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrationStreamingReadClientMessage) Reset()         { *m = MigrationStreamingReadClientMessage{} }
func (m *MigrationStreamingReadClientMessage) String() string { return proto.CompactTextString(m) }
func (*MigrationStreamingReadClientMessage) ProtoMessage()    {}
func (*MigrationStreamingReadClientMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{12}
}

func (m *MigrationStreamingReadClientMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadClientMessage.Unmarshal(m, b)
}
func (m *MigrationStreamingReadClientMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadClientMessage.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadClientMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadClientMessage.Merge(m, src)
}
func (m *MigrationStreamingReadClientMessage) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadClientMessage.Size(m)
}
func (m *MigrationStreamingReadClientMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadClientMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadClientMessage proto.InternalMessageInfo

type isMigrationStreamingReadClientMessage_Request interface {
	isMigrationStreamingReadClientMessage_Request()
}

type MigrationStreamingReadClientMessage_InitRequest_ struct {
	InitRequest *MigrationStreamingReadClientMessage_InitRequest `protobuf:"bytes,1,opt,name=init_request,json=initRequest,proto3,oneof"`
}

type MigrationStreamingReadClientMessage_Read_ struct {
	Read *MigrationStreamingReadClientMessage_Read `protobuf:"bytes,2,opt,name=read,proto3,oneof"`
}

type MigrationStreamingReadClientMessage_StartRead_ struct {
	StartRead *MigrationStreamingReadClientMessage_StartRead `protobuf:"bytes,3,opt,name=start_read,json=startRead,proto3,oneof"`
}

type MigrationStreamingReadClientMessage_Commit_ struct {
	Commit *MigrationStreamingReadClientMessage_Commit `protobuf:"bytes,4,opt,name=commit,proto3,oneof"`
}

type MigrationStreamingReadClientMessage_Released_ struct {
	Released *MigrationStreamingReadClientMessage_Released `protobuf:"bytes,5,opt,name=released,proto3,oneof"`
}

type MigrationStreamingReadClientMessage_Status_ struct {
	Status *MigrationStreamingReadClientMessage_Status `protobuf:"bytes,6,opt,name=status,proto3,oneof"`
}

func (*MigrationStreamingReadClientMessage_InitRequest_) isMigrationStreamingReadClientMessage_Request() {
}

func (*MigrationStreamingReadClientMessage_Read_) isMigrationStreamingReadClientMessage_Request() {}

func (*MigrationStreamingReadClientMessage_StartRead_) isMigrationStreamingReadClientMessage_Request() {
}

func (*MigrationStreamingReadClientMessage_Commit_) isMigrationStreamingReadClientMessage_Request() {}

func (*MigrationStreamingReadClientMessage_Released_) isMigrationStreamingReadClientMessage_Request() {
}

func (*MigrationStreamingReadClientMessage_Status_) isMigrationStreamingReadClientMessage_Request() {}

func (m *MigrationStreamingReadClientMessage) GetRequest() isMigrationStreamingReadClientMessage_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage) GetInitRequest() *MigrationStreamingReadClientMessage_InitRequest {
	if x, ok := m.GetRequest().(*MigrationStreamingReadClientMessage_InitRequest_); ok {
		return x.InitRequest
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage) GetRead() *MigrationStreamingReadClientMessage_Read {
	if x, ok := m.GetRequest().(*MigrationStreamingReadClientMessage_Read_); ok {
		return x.Read
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage) GetStartRead() *MigrationStreamingReadClientMessage_StartRead {
	if x, ok := m.GetRequest().(*MigrationStreamingReadClientMessage_StartRead_); ok {
		return x.StartRead
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage) GetCommit() *MigrationStreamingReadClientMessage_Commit {
	if x, ok := m.GetRequest().(*MigrationStreamingReadClientMessage_Commit_); ok {
		return x.Commit
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage) GetReleased() *MigrationStreamingReadClientMessage_Released {
	if x, ok := m.GetRequest().(*MigrationStreamingReadClientMessage_Released_); ok {
		return x.Released
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage) GetStatus() *MigrationStreamingReadClientMessage_Status {
	if x, ok := m.GetRequest().(*MigrationStreamingReadClientMessage_Status_); ok {
		return x.Status
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MigrationStreamingReadClientMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MigrationStreamingReadClientMessage_InitRequest_)(nil),
		(*MigrationStreamingReadClientMessage_Read_)(nil),
		(*MigrationStreamingReadClientMessage_StartRead_)(nil),
		(*MigrationStreamingReadClientMessage_Commit_)(nil),
		(*MigrationStreamingReadClientMessage_Released_)(nil),
		(*MigrationStreamingReadClientMessage_Status_)(nil),
	}
}

type MigrationStreamingReadClientMessage_TopicReadSettings struct {
	// Topic path.
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Partition groups that will be read by this session.
	// If list is empty - then session will read all partition groups.
	PartitionGroupIds []int64 `protobuf:"varint,2,rep,packed,name=partition_group_ids,json=partitionGroupIds,proto3" json:"partition_group_ids,omitempty"`
	// Read data only after this timestamp from this topic.
	StartFromWrittenAtMs int64    `protobuf:"varint,3,opt,name=start_from_written_at_ms,json=startFromWrittenAtMs,proto3" json:"start_from_written_at_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrationStreamingReadClientMessage_TopicReadSettings) Reset() {
	*m = MigrationStreamingReadClientMessage_TopicReadSettings{}
}
func (m *MigrationStreamingReadClientMessage_TopicReadSettings) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadClientMessage_TopicReadSettings) ProtoMessage() {}
func (*MigrationStreamingReadClientMessage_TopicReadSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{12, 0}
}

func (m *MigrationStreamingReadClientMessage_TopicReadSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_TopicReadSettings.Unmarshal(m, b)
}
func (m *MigrationStreamingReadClientMessage_TopicReadSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_TopicReadSettings.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadClientMessage_TopicReadSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadClientMessage_TopicReadSettings.Merge(m, src)
}
func (m *MigrationStreamingReadClientMessage_TopicReadSettings) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_TopicReadSettings.Size(m)
}
func (m *MigrationStreamingReadClientMessage_TopicReadSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadClientMessage_TopicReadSettings.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadClientMessage_TopicReadSettings proto.InternalMessageInfo

func (m *MigrationStreamingReadClientMessage_TopicReadSettings) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *MigrationStreamingReadClientMessage_TopicReadSettings) GetPartitionGroupIds() []int64 {
	if m != nil {
		return m.PartitionGroupIds
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage_TopicReadSettings) GetStartFromWrittenAtMs() int64 {
	if m != nil {
		return m.StartFromWrittenAtMs
	}
	return 0
}

// Handshake request.
type MigrationStreamingReadClientMessage_InitRequest struct {
	// Message that describes topic to read.
	// Topics that will be read by this session.
	TopicsReadSettings []*MigrationStreamingReadClientMessage_TopicReadSettings `protobuf:"bytes,1,rep,name=topics_read_settings,json=topicsReadSettings,proto3" json:"topics_read_settings,omitempty"`
	// Flag that indicates reading only of original topics in cluster or all including mirrored.
	ReadOnlyOriginal bool `protobuf:"varint,2,opt,name=read_only_original,json=readOnlyOriginal,proto3" json:"read_only_original,omitempty"`
	// Path of consumer that is used for reading by this session.
	Consumer string `protobuf:"bytes,3,opt,name=consumer,proto3" json:"consumer,omitempty"`
	// Skip all messages that has write timestamp smaller than now - max_time_lag_ms.
	MaxLagDurationMs int64 `protobuf:"varint,4,opt,name=max_lag_duration_ms,json=maxLagDurationMs,proto3" json:"max_lag_duration_ms,omitempty"`
	// Read data only after this timestamp from all topics.
	StartFromWrittenAtMs int64 `protobuf:"varint,5,opt,name=start_from_written_at_ms,json=startFromWrittenAtMs,proto3" json:"start_from_written_at_ms,omitempty"`
	// Maximum block format version supported by the client. Server will asses this parameter and return actual data blocks version in
	// StreamingReadServerMessage.InitResponse.block_format_version_by_topic (and StreamingReadServerMessage.AddTopicResponse.block_format_version)
	// or error if client will not be able to read data.
	MaxSupportedBlockFormatVersion int64 `protobuf:"varint,6,opt,name=max_supported_block_format_version,json=maxSupportedBlockFormatVersion,proto3" json:"max_supported_block_format_version,omitempty"`
	// Maximal size of client cache for message_group_id, ip and meta, per partition.
	// There is separate caches for each partition partition streams.
	// There is separate caches for message group identifiers, ip and meta inside one partition partition stream.
	MaxMetaCacheSize int64 `protobuf:"varint,10,opt,name=max_meta_cache_size,json=maxMetaCacheSize,proto3" json:"max_meta_cache_size,omitempty"`
	// Session identifier for retries. Must be the same as session_id from Inited server response. If this is first connect, not retry - do not use this field.
	SessionId string `protobuf:"bytes,100,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// 0 for first init message and incremental value for connect retries.
	ConnectionAttempt int64 `protobuf:"varint,101,opt,name=connection_attempt,json=connectionAttempt,proto3" json:"connection_attempt,omitempty"`
	// Formed state for retries. If not retry - do not use this field.
	State         *MigrationStreamingReadClientMessage_InitRequest_State `protobuf:"bytes,102,opt,name=state,proto3" json:"state,omitempty"`
	IdleTimeoutMs int64                                                  `protobuf:"varint,200,opt,name=idle_timeout_ms,json=idleTimeoutMs,proto3" json:"idle_timeout_ms,omitempty"`
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// TODO: remove after refactoring
	// Single read request params.
	ReadParams           *ReadParams `protobuf:"bytes,42,opt,name=read_params,json=readParams,proto3" json:"read_params,omitempty"`
	RangesMode           bool        `protobuf:"varint,442,opt,name=ranges_mode,json=rangesMode,proto3" json:"ranges_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MigrationStreamingReadClientMessage_InitRequest) Reset() {
	*m = MigrationStreamingReadClientMessage_InitRequest{}
}
func (m *MigrationStreamingReadClientMessage_InitRequest) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadClientMessage_InitRequest) ProtoMessage() {}
func (*MigrationStreamingReadClientMessage_InitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{12, 1}
}

func (m *MigrationStreamingReadClientMessage_InitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest.Unmarshal(m, b)
}
func (m *MigrationStreamingReadClientMessage_InitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadClientMessage_InitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest.Merge(m, src)
}
func (m *MigrationStreamingReadClientMessage_InitRequest) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest.Size(m)
}
func (m *MigrationStreamingReadClientMessage_InitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest proto.InternalMessageInfo

func (m *MigrationStreamingReadClientMessage_InitRequest) GetTopicsReadSettings() []*MigrationStreamingReadClientMessage_TopicReadSettings {
	if m != nil {
		return m.TopicsReadSettings
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage_InitRequest) GetReadOnlyOriginal() bool {
	if m != nil {
		return m.ReadOnlyOriginal
	}
	return false
}

func (m *MigrationStreamingReadClientMessage_InitRequest) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func (m *MigrationStreamingReadClientMessage_InitRequest) GetMaxLagDurationMs() int64 {
	if m != nil {
		return m.MaxLagDurationMs
	}
	return 0
}

func (m *MigrationStreamingReadClientMessage_InitRequest) GetStartFromWrittenAtMs() int64 {
	if m != nil {
		return m.StartFromWrittenAtMs
	}
	return 0
}

func (m *MigrationStreamingReadClientMessage_InitRequest) GetMaxSupportedBlockFormatVersion() int64 {
	if m != nil {
		return m.MaxSupportedBlockFormatVersion
	}
	return 0
}

func (m *MigrationStreamingReadClientMessage_InitRequest) GetMaxMetaCacheSize() int64 {
	if m != nil {
		return m.MaxMetaCacheSize
	}
	return 0
}

func (m *MigrationStreamingReadClientMessage_InitRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *MigrationStreamingReadClientMessage_InitRequest) GetConnectionAttempt() int64 {
	if m != nil {
		return m.ConnectionAttempt
	}
	return 0
}

func (m *MigrationStreamingReadClientMessage_InitRequest) GetState() *MigrationStreamingReadClientMessage_InitRequest_State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage_InitRequest) GetIdleTimeoutMs() int64 {
	if m != nil {
		return m.IdleTimeoutMs
	}
	return 0
}

func (m *MigrationStreamingReadClientMessage_InitRequest) GetReadParams() *ReadParams {
	if m != nil {
		return m.ReadParams
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage_InitRequest) GetRangesMode() bool {
	if m != nil {
		return m.RangesMode
	}
	return false
}

// State of client read session. Could be provided to server for retries.
type MigrationStreamingReadClientMessage_InitRequest_State struct {
	PartitionStreamsStates []*MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState `protobuf:"bytes,1,rep,name=partition_streams_states,json=partitionStreamsStates,proto3" json:"partition_streams_states,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                                                                      `json:"-"`
	XXX_unrecognized       []byte                                                                        `json:"-"`
	XXX_sizecache          int32                                                                         `json:"-"`
}

func (m *MigrationStreamingReadClientMessage_InitRequest_State) Reset() {
	*m = MigrationStreamingReadClientMessage_InitRequest_State{}
}
func (m *MigrationStreamingReadClientMessage_InitRequest_State) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadClientMessage_InitRequest_State) ProtoMessage() {}
func (*MigrationStreamingReadClientMessage_InitRequest_State) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{12, 1, 0}
}

func (m *MigrationStreamingReadClientMessage_InitRequest_State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest_State.Unmarshal(m, b)
}
func (m *MigrationStreamingReadClientMessage_InitRequest_State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest_State.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadClientMessage_InitRequest_State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest_State.Merge(m, src)
}
func (m *MigrationStreamingReadClientMessage_InitRequest_State) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest_State.Size(m)
}
func (m *MigrationStreamingReadClientMessage_InitRequest_State) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest_State.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest_State proto.InternalMessageInfo

func (m *MigrationStreamingReadClientMessage_InitRequest_State) GetPartitionStreamsStates() []*MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState {
	if m != nil {
		return m.PartitionStreamsStates
	}
	return nil
}

type MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState struct {
	// Partition partition stream.
	PartitionStream *PartitionStream `protobuf:"bytes,1,opt,name=partition_stream,json=partitionStream,proto3" json:"partition_stream,omitempty"`
	// Current read offset if has one. Actual for states DESTROYING, READING and STOPPED.
	ReadOffset int64 `protobuf:"varint,2,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
	// Ranges of committed by client offsets.
	OffsetRanges []*OffsetsRange `protobuf:"bytes,3,rep,name=offset_ranges,json=offsetRanges,proto3" json:"offset_ranges,omitempty"`
	// Status of partition stream.
	Status               MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status `protobuf:"varint,4,opt,name=status,proto3,enum=Ydb.PersQueue.V1.MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                          `json:"-"`
	XXX_unrecognized     []byte                                                                            `json:"-"`
	XXX_sizecache        int32                                                                             `json:"-"`
}

func (m *MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState) Reset() {
	*m = MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState{}
}
func (m *MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState) ProtoMessage() {}
func (*MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{12, 1, 0, 0}
}

func (m *MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState.Unmarshal(m, b)
}
func (m *MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState.Merge(m, src)
}
func (m *MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState.Size(m)
}
func (m *MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState proto.InternalMessageInfo

func (m *MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState) GetPartitionStream() *PartitionStream {
	if m != nil {
		return m.PartitionStream
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState) GetReadOffset() int64 {
	if m != nil {
		return m.ReadOffset
	}
	return 0
}

func (m *MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState) GetOffsetRanges() []*OffsetsRange {
	if m != nil {
		return m.OffsetRanges
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState) GetStatus() MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status {
	if m != nil {
		return m.Status
	}
	return MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_STATUS_UNSPECIFIED
}

// Request of single read.
type MigrationStreamingReadClientMessage_Read struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrationStreamingReadClientMessage_Read) Reset() {
	*m = MigrationStreamingReadClientMessage_Read{}
}
func (m *MigrationStreamingReadClientMessage_Read) String() string { return proto.CompactTextString(m) }
func (*MigrationStreamingReadClientMessage_Read) ProtoMessage()    {}
func (*MigrationStreamingReadClientMessage_Read) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{12, 2}
}

func (m *MigrationStreamingReadClientMessage_Read) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_Read.Unmarshal(m, b)
}
func (m *MigrationStreamingReadClientMessage_Read) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_Read.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadClientMessage_Read) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadClientMessage_Read.Merge(m, src)
}
func (m *MigrationStreamingReadClientMessage_Read) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_Read.Size(m)
}
func (m *MigrationStreamingReadClientMessage_Read) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadClientMessage_Read.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadClientMessage_Read proto.InternalMessageInfo

type MigrationStreamingReadClientMessage_StartRead struct {
	// Topic path of partition.
	Topic *Path `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Cluster of topic instance.
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Partition identifier. Explicit only for debug purposes.
	Partition uint64 `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	// Assign identifier of Assign request from server. Used for mathing Assign requests from server with StartRead responses from client.
	AssignId uint64 `protobuf:"varint,5,opt,name=assign_id,json=assignId,proto3" json:"assign_id,omitempty"`
	// Start reading from partition offset that is not less than read_offset.
	// ReadParams.max_time_lag_ms and ReadParams.read_timestamp_ms could lead to skip of more messages.
	// The same with actual committed offset. Regardless of set read_offset server will return data from maximal offset from read_offset, actual committed offset
	// and offsets calculated from ReadParams.max_time_lag_ms and ReadParams.read_timestamp_ms.
	ReadOffset uint64 `protobuf:"varint,6,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
	// All messages with offset less than commit_offset are processed by client. Server will commit this position if this is not done yet.
	CommitOffset uint64 `protobuf:"varint,7,opt,name=commit_offset,json=commitOffset,proto3" json:"commit_offset,omitempty"`
	// This option will enable sanity check on server for read_offset. Server will verify that read_offset is no less that actual committed offset.
	// If verification will fail then server will kill this read session and client will find out error in reading logic.
	// If client is not setting read_offset, sanity check will fail so do not set verify_read_offset if you not setting correct read_offset.
	VerifyReadOffset     bool     `protobuf:"varint,8,opt,name=verify_read_offset,json=verifyReadOffset,proto3" json:"verify_read_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrationStreamingReadClientMessage_StartRead) Reset() {
	*m = MigrationStreamingReadClientMessage_StartRead{}
}
func (m *MigrationStreamingReadClientMessage_StartRead) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadClientMessage_StartRead) ProtoMessage() {}
func (*MigrationStreamingReadClientMessage_StartRead) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{12, 3}
}

func (m *MigrationStreamingReadClientMessage_StartRead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_StartRead.Unmarshal(m, b)
}
func (m *MigrationStreamingReadClientMessage_StartRead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_StartRead.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadClientMessage_StartRead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadClientMessage_StartRead.Merge(m, src)
}
func (m *MigrationStreamingReadClientMessage_StartRead) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_StartRead.Size(m)
}
func (m *MigrationStreamingReadClientMessage_StartRead) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadClientMessage_StartRead.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadClientMessage_StartRead proto.InternalMessageInfo

func (m *MigrationStreamingReadClientMessage_StartRead) GetTopic() *Path {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage_StartRead) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *MigrationStreamingReadClientMessage_StartRead) GetPartition() uint64 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *MigrationStreamingReadClientMessage_StartRead) GetAssignId() uint64 {
	if m != nil {
		return m.AssignId
	}
	return 0
}

func (m *MigrationStreamingReadClientMessage_StartRead) GetReadOffset() uint64 {
	if m != nil {
		return m.ReadOffset
	}
	return 0
}

func (m *MigrationStreamingReadClientMessage_StartRead) GetCommitOffset() uint64 {
	if m != nil {
		return m.CommitOffset
	}
	return 0
}

func (m *MigrationStreamingReadClientMessage_StartRead) GetVerifyReadOffset() bool {
	if m != nil {
		return m.VerifyReadOffset
	}
	return false
}

// Signal for server that client finished working with this partition. Must be sent only after corresponding Release request from server.
// Server will give this partition to other read session only after Released signal.
type MigrationStreamingReadClientMessage_Released struct {
	// Topic path of partition.
	Topic *Path `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Cluster of topic instance.
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Partition identifier. Explicit only for debug purposes.
	Partition uint64 `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	// Assign identifier of Assign request from server. Used for mathing Assign requests from server with Released responses from client.
	AssignId             uint64   `protobuf:"varint,5,opt,name=assign_id,json=assignId,proto3" json:"assign_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrationStreamingReadClientMessage_Released) Reset() {
	*m = MigrationStreamingReadClientMessage_Released{}
}
func (m *MigrationStreamingReadClientMessage_Released) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadClientMessage_Released) ProtoMessage() {}
func (*MigrationStreamingReadClientMessage_Released) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{12, 4}
}

func (m *MigrationStreamingReadClientMessage_Released) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_Released.Unmarshal(m, b)
}
func (m *MigrationStreamingReadClientMessage_Released) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_Released.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadClientMessage_Released) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadClientMessage_Released.Merge(m, src)
}
func (m *MigrationStreamingReadClientMessage_Released) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_Released.Size(m)
}
func (m *MigrationStreamingReadClientMessage_Released) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadClientMessage_Released.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadClientMessage_Released proto.InternalMessageInfo

func (m *MigrationStreamingReadClientMessage_Released) GetTopic() *Path {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage_Released) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *MigrationStreamingReadClientMessage_Released) GetPartition() uint64 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *MigrationStreamingReadClientMessage_Released) GetAssignId() uint64 {
	if m != nil {
		return m.AssignId
	}
	return 0
}

// Signal for server that client processed some read data.
type MigrationStreamingReadClientMessage_Commit struct {
	// Partition read cookies that indicates processed data.
	Cookies              []*CommitCookie      `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty"`
	OffsetRanges         []*CommitOffsetRange `protobuf:"bytes,2,rep,name=offset_ranges,json=offsetRanges,proto3" json:"offset_ranges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MigrationStreamingReadClientMessage_Commit) Reset() {
	*m = MigrationStreamingReadClientMessage_Commit{}
}
func (m *MigrationStreamingReadClientMessage_Commit) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadClientMessage_Commit) ProtoMessage() {}
func (*MigrationStreamingReadClientMessage_Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{12, 5}
}

func (m *MigrationStreamingReadClientMessage_Commit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_Commit.Unmarshal(m, b)
}
func (m *MigrationStreamingReadClientMessage_Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_Commit.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadClientMessage_Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadClientMessage_Commit.Merge(m, src)
}
func (m *MigrationStreamingReadClientMessage_Commit) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_Commit.Size(m)
}
func (m *MigrationStreamingReadClientMessage_Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadClientMessage_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadClientMessage_Commit proto.InternalMessageInfo

func (m *MigrationStreamingReadClientMessage_Commit) GetCookies() []*CommitCookie {
	if m != nil {
		return m.Cookies
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage_Commit) GetOffsetRanges() []*CommitOffsetRange {
	if m != nil {
		return m.OffsetRanges
	}
	return nil
}

type MigrationStreamingReadClientMessage_Status struct {
	// Topic path of partition.
	Topic *Path `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Cluster of topic instance.
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Partition identifier. Explicit only for debug purposes.
	Partition uint64 `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	// Assign identifier of Assign request from server. Used for mathing Assign requests from server with Released responses from client.
	AssignId             uint64   `protobuf:"varint,5,opt,name=assign_id,json=assignId,proto3" json:"assign_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrationStreamingReadClientMessage_Status) Reset() {
	*m = MigrationStreamingReadClientMessage_Status{}
}
func (m *MigrationStreamingReadClientMessage_Status) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadClientMessage_Status) ProtoMessage() {}
func (*MigrationStreamingReadClientMessage_Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{12, 6}
}

func (m *MigrationStreamingReadClientMessage_Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_Status.Unmarshal(m, b)
}
func (m *MigrationStreamingReadClientMessage_Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_Status.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadClientMessage_Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadClientMessage_Status.Merge(m, src)
}
func (m *MigrationStreamingReadClientMessage_Status) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadClientMessage_Status.Size(m)
}
func (m *MigrationStreamingReadClientMessage_Status) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadClientMessage_Status.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadClientMessage_Status proto.InternalMessageInfo

func (m *MigrationStreamingReadClientMessage_Status) GetTopic() *Path {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *MigrationStreamingReadClientMessage_Status) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *MigrationStreamingReadClientMessage_Status) GetPartition() uint64 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *MigrationStreamingReadClientMessage_Status) GetAssignId() uint64 {
	if m != nil {
		return m.AssignId
	}
	return 0
}

type MigrationStreamingReadServerMessage struct {
	Status Ydb.StatusIds_StatusCode  `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
	// Types that are valid to be assigned to Response:
	//	*MigrationStreamingReadServerMessage_InitResponse_
	//	*MigrationStreamingReadServerMessage_DataBatch_
	//	*MigrationStreamingReadServerMessage_Assigned_
	//	*MigrationStreamingReadServerMessage_Release_
	//	*MigrationStreamingReadServerMessage_Committed_
	//	*MigrationStreamingReadServerMessage_PartitionStatus_
	Response             isMigrationStreamingReadServerMessage_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *MigrationStreamingReadServerMessage) Reset()         { *m = MigrationStreamingReadServerMessage{} }
func (m *MigrationStreamingReadServerMessage) String() string { return proto.CompactTextString(m) }
func (*MigrationStreamingReadServerMessage) ProtoMessage()    {}
func (*MigrationStreamingReadServerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{13}
}

func (m *MigrationStreamingReadServerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadServerMessage.Unmarshal(m, b)
}
func (m *MigrationStreamingReadServerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadServerMessage.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadServerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadServerMessage.Merge(m, src)
}
func (m *MigrationStreamingReadServerMessage) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadServerMessage.Size(m)
}
func (m *MigrationStreamingReadServerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadServerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadServerMessage proto.InternalMessageInfo

func (m *MigrationStreamingReadServerMessage) GetStatus() Ydb.StatusIds_StatusCode {
	if m != nil {
		return m.Status
	}
	return Ydb.StatusIds_STATUS_CODE_UNSPECIFIED
}

func (m *MigrationStreamingReadServerMessage) GetIssues() []*Ydb_Issue.IssueMessage {
	if m != nil {
		return m.Issues
	}
	return nil
}

type isMigrationStreamingReadServerMessage_Response interface {
	isMigrationStreamingReadServerMessage_Response()
}

type MigrationStreamingReadServerMessage_InitResponse_ struct {
	InitResponse *MigrationStreamingReadServerMessage_InitResponse `protobuf:"bytes,3,opt,name=init_response,json=initResponse,proto3,oneof"`
}

type MigrationStreamingReadServerMessage_DataBatch_ struct {
	DataBatch *MigrationStreamingReadServerMessage_DataBatch `protobuf:"bytes,4,opt,name=data_batch,json=dataBatch,proto3,oneof"`
}

type MigrationStreamingReadServerMessage_Assigned_ struct {
	Assigned *MigrationStreamingReadServerMessage_Assigned `protobuf:"bytes,5,opt,name=assigned,proto3,oneof"`
}

type MigrationStreamingReadServerMessage_Release_ struct {
	Release *MigrationStreamingReadServerMessage_Release `protobuf:"bytes,6,opt,name=release,proto3,oneof"`
}

type MigrationStreamingReadServerMessage_Committed_ struct {
	Committed *MigrationStreamingReadServerMessage_Committed `protobuf:"bytes,7,opt,name=committed,proto3,oneof"`
}

type MigrationStreamingReadServerMessage_PartitionStatus_ struct {
	PartitionStatus *MigrationStreamingReadServerMessage_PartitionStatus `protobuf:"bytes,8,opt,name=partition_status,json=partitionStatus,proto3,oneof"`
}

func (*MigrationStreamingReadServerMessage_InitResponse_) isMigrationStreamingReadServerMessage_Response() {
}

func (*MigrationStreamingReadServerMessage_DataBatch_) isMigrationStreamingReadServerMessage_Response() {
}

func (*MigrationStreamingReadServerMessage_Assigned_) isMigrationStreamingReadServerMessage_Response() {
}

func (*MigrationStreamingReadServerMessage_Release_) isMigrationStreamingReadServerMessage_Response() {
}

func (*MigrationStreamingReadServerMessage_Committed_) isMigrationStreamingReadServerMessage_Response() {
}

func (*MigrationStreamingReadServerMessage_PartitionStatus_) isMigrationStreamingReadServerMessage_Response() {
}

func (m *MigrationStreamingReadServerMessage) GetResponse() isMigrationStreamingReadServerMessage_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage) GetInitResponse() *MigrationStreamingReadServerMessage_InitResponse {
	if x, ok := m.GetResponse().(*MigrationStreamingReadServerMessage_InitResponse_); ok {
		return x.InitResponse
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage) GetDataBatch() *MigrationStreamingReadServerMessage_DataBatch {
	if x, ok := m.GetResponse().(*MigrationStreamingReadServerMessage_DataBatch_); ok {
		return x.DataBatch
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage) GetAssigned() *MigrationStreamingReadServerMessage_Assigned {
	if x, ok := m.GetResponse().(*MigrationStreamingReadServerMessage_Assigned_); ok {
		return x.Assigned
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage) GetRelease() *MigrationStreamingReadServerMessage_Release {
	if x, ok := m.GetResponse().(*MigrationStreamingReadServerMessage_Release_); ok {
		return x.Release
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage) GetCommitted() *MigrationStreamingReadServerMessage_Committed {
	if x, ok := m.GetResponse().(*MigrationStreamingReadServerMessage_Committed_); ok {
		return x.Committed
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage) GetPartitionStatus() *MigrationStreamingReadServerMessage_PartitionStatus {
	if x, ok := m.GetResponse().(*MigrationStreamingReadServerMessage_PartitionStatus_); ok {
		return x.PartitionStatus
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MigrationStreamingReadServerMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MigrationStreamingReadServerMessage_InitResponse_)(nil),
		(*MigrationStreamingReadServerMessage_DataBatch_)(nil),
		(*MigrationStreamingReadServerMessage_Assigned_)(nil),
		(*MigrationStreamingReadServerMessage_Release_)(nil),
		(*MigrationStreamingReadServerMessage_Committed_)(nil),
		(*MigrationStreamingReadServerMessage_PartitionStatus_)(nil),
	}
}

// Handshake response.
type MigrationStreamingReadServerMessage_InitResponse struct {
	// Read session identifier for debug purposes.
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Block format version of data client will receive from topics.
	BlockFormatVersionByTopic map[string]int64 `protobuf:"bytes,2,rep,name=block_format_version_by_topic,json=blockFormatVersionByTopic,proto3" json:"block_format_version_by_topic,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Choosed maximan cache size by server.
	// Client must use cache of this size. Could change on retries - reduce size of cache in this case.
	MaxMetaCacheSize     int64    `protobuf:"varint,10,opt,name=max_meta_cache_size,json=maxMetaCacheSize,proto3" json:"max_meta_cache_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrationStreamingReadServerMessage_InitResponse) Reset() {
	*m = MigrationStreamingReadServerMessage_InitResponse{}
}
func (m *MigrationStreamingReadServerMessage_InitResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadServerMessage_InitResponse) ProtoMessage() {}
func (*MigrationStreamingReadServerMessage_InitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{13, 0}
}

func (m *MigrationStreamingReadServerMessage_InitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_InitResponse.Unmarshal(m, b)
}
func (m *MigrationStreamingReadServerMessage_InitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_InitResponse.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadServerMessage_InitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadServerMessage_InitResponse.Merge(m, src)
}
func (m *MigrationStreamingReadServerMessage_InitResponse) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_InitResponse.Size(m)
}
func (m *MigrationStreamingReadServerMessage_InitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadServerMessage_InitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadServerMessage_InitResponse proto.InternalMessageInfo

func (m *MigrationStreamingReadServerMessage_InitResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *MigrationStreamingReadServerMessage_InitResponse) GetBlockFormatVersionByTopic() map[string]int64 {
	if m != nil {
		return m.BlockFormatVersionByTopic
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage_InitResponse) GetMaxMetaCacheSize() int64 {
	if m != nil {
		return m.MaxMetaCacheSize
	}
	return 0
}

// Signal that partition is assigned to this read session. Client must react on this signal by sending StartRead when ready.
type MigrationStreamingReadServerMessage_Assigned struct {
	// Partition's topic path.
	Topic *Path `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Topic's instance cluster name.
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Partition identifier. topic:cluster:partition is unique addressing of partition.
	Partition uint64 `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	// Assign idenfier. Is not unique between diffrent partitions. Used for matching Assigned request from server and StartRead response from client.
	AssignId uint64 `protobuf:"varint,5,opt,name=assign_id,json=assignId,proto3" json:"assign_id,omitempty"`
	// Actual read offset. Equeal to last committed offset.
	ReadOffset uint64 `protobuf:"varint,6,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
	// Offset of first not existing message in partition at this time.
	EndOffset            uint64   `protobuf:"varint,7,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrationStreamingReadServerMessage_Assigned) Reset() {
	*m = MigrationStreamingReadServerMessage_Assigned{}
}
func (m *MigrationStreamingReadServerMessage_Assigned) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadServerMessage_Assigned) ProtoMessage() {}
func (*MigrationStreamingReadServerMessage_Assigned) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{13, 1}
}

func (m *MigrationStreamingReadServerMessage_Assigned) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_Assigned.Unmarshal(m, b)
}
func (m *MigrationStreamingReadServerMessage_Assigned) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_Assigned.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadServerMessage_Assigned) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadServerMessage_Assigned.Merge(m, src)
}
func (m *MigrationStreamingReadServerMessage_Assigned) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_Assigned.Size(m)
}
func (m *MigrationStreamingReadServerMessage_Assigned) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadServerMessage_Assigned.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadServerMessage_Assigned proto.InternalMessageInfo

func (m *MigrationStreamingReadServerMessage_Assigned) GetTopic() *Path {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage_Assigned) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *MigrationStreamingReadServerMessage_Assigned) GetPartition() uint64 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_Assigned) GetAssignId() uint64 {
	if m != nil {
		return m.AssignId
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_Assigned) GetReadOffset() uint64 {
	if m != nil {
		return m.ReadOffset
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_Assigned) GetEndOffset() uint64 {
	if m != nil {
		return m.EndOffset
	}
	return 0
}

// Partition release request from server.
type MigrationStreamingReadServerMessage_Release struct {
	// Partition's topic path.
	Topic *Path `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Topic's instance cluster name.
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Partition identifier. topic:cluster:partition is unique addressing of partition.
	Partition uint64 `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	// Assign idenfier. Used for matching Assigned and Release requests from server.
	AssignId uint64 `protobuf:"varint,5,opt,name=assign_id,json=assignId,proto3" json:"assign_id,omitempty"`
	// If False then server is waiting for Released signal from client before giving of this partition for other read session.
	// If True then server gives partition for other session right now. All futher commits for this partition has no effect. Server is not waiting for Released signal.
	ForcefulRelease bool `protobuf:"varint,6,opt,name=forceful_release,json=forcefulRelease,proto3" json:"forceful_release,omitempty"`
	// Last known committed offset.
	CommitOffset         uint64   `protobuf:"varint,7,opt,name=commit_offset,json=commitOffset,proto3" json:"commit_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrationStreamingReadServerMessage_Release) Reset() {
	*m = MigrationStreamingReadServerMessage_Release{}
}
func (m *MigrationStreamingReadServerMessage_Release) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadServerMessage_Release) ProtoMessage() {}
func (*MigrationStreamingReadServerMessage_Release) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{13, 2}
}

func (m *MigrationStreamingReadServerMessage_Release) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_Release.Unmarshal(m, b)
}
func (m *MigrationStreamingReadServerMessage_Release) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_Release.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadServerMessage_Release) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadServerMessage_Release.Merge(m, src)
}
func (m *MigrationStreamingReadServerMessage_Release) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_Release.Size(m)
}
func (m *MigrationStreamingReadServerMessage_Release) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadServerMessage_Release.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadServerMessage_Release proto.InternalMessageInfo

func (m *MigrationStreamingReadServerMessage_Release) GetTopic() *Path {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage_Release) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *MigrationStreamingReadServerMessage_Release) GetPartition() uint64 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_Release) GetAssignId() uint64 {
	if m != nil {
		return m.AssignId
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_Release) GetForcefulRelease() bool {
	if m != nil {
		return m.ForcefulRelease
	}
	return false
}

func (m *MigrationStreamingReadServerMessage_Release) GetCommitOffset() uint64 {
	if m != nil {
		return m.CommitOffset
	}
	return 0
}

// Acknowledgement for commits.
type MigrationStreamingReadServerMessage_Committed struct {
	// List of cookies that correspond to commit of processing read data.
	Cookies              []*CommitCookie      `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty"`
	OffsetRanges         []*CommitOffsetRange `protobuf:"bytes,2,rep,name=offset_ranges,json=offsetRanges,proto3" json:"offset_ranges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MigrationStreamingReadServerMessage_Committed) Reset() {
	*m = MigrationStreamingReadServerMessage_Committed{}
}
func (m *MigrationStreamingReadServerMessage_Committed) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadServerMessage_Committed) ProtoMessage() {}
func (*MigrationStreamingReadServerMessage_Committed) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{13, 3}
}

func (m *MigrationStreamingReadServerMessage_Committed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_Committed.Unmarshal(m, b)
}
func (m *MigrationStreamingReadServerMessage_Committed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_Committed.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadServerMessage_Committed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadServerMessage_Committed.Merge(m, src)
}
func (m *MigrationStreamingReadServerMessage_Committed) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_Committed.Size(m)
}
func (m *MigrationStreamingReadServerMessage_Committed) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadServerMessage_Committed.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadServerMessage_Committed proto.InternalMessageInfo

func (m *MigrationStreamingReadServerMessage_Committed) GetCookies() []*CommitCookie {
	if m != nil {
		return m.Cookies
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage_Committed) GetOffsetRanges() []*CommitOffsetRange {
	if m != nil {
		return m.OffsetRanges
	}
	return nil
}

// Readed data.
type MigrationStreamingReadServerMessage_DataBatch struct {
	// Client messages, divided by partitions.
	PartitionData        []*MigrationStreamingReadServerMessage_DataBatch_PartitionData `protobuf:"bytes,1,rep,name=partition_data,json=partitionData,proto3" json:"partition_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                       `json:"-"`
	XXX_unrecognized     []byte                                                         `json:"-"`
	XXX_sizecache        int32                                                          `json:"-"`
}

func (m *MigrationStreamingReadServerMessage_DataBatch) Reset() {
	*m = MigrationStreamingReadServerMessage_DataBatch{}
}
func (m *MigrationStreamingReadServerMessage_DataBatch) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadServerMessage_DataBatch) ProtoMessage() {}
func (*MigrationStreamingReadServerMessage_DataBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{13, 4}
}

func (m *MigrationStreamingReadServerMessage_DataBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch.Unmarshal(m, b)
}
func (m *MigrationStreamingReadServerMessage_DataBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadServerMessage_DataBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch.Merge(m, src)
}
func (m *MigrationStreamingReadServerMessage_DataBatch) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch.Size(m)
}
func (m *MigrationStreamingReadServerMessage_DataBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch proto.InternalMessageInfo

func (m *MigrationStreamingReadServerMessage_DataBatch) GetPartitionData() []*MigrationStreamingReadServerMessage_DataBatch_PartitionData {
	if m != nil {
		return m.PartitionData
	}
	return nil
}

// One client message representation.
type MigrationStreamingReadServerMessage_DataBatch_MessageData struct {
	// Partition offset in partition that assigned for message.
	Offset uint64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// Sequence number that provided with message on write from client.
	SeqNo uint64 `protobuf:"varint,2,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	// Timestamp of creation of message provided on write from client.
	CreateTimestampMs uint64 `protobuf:"varint,3,opt,name=create_timestamp_ms,json=createTimestampMs,proto3" json:"create_timestamp_ms,omitempty"`
	// Codec that is used for data compressing.
	Codec Codec `protobuf:"varint,4,opt,name=codec,proto3,enum=Ydb.PersQueue.V1.Codec" json:"codec,omitempty"`
	// Compressed client message body.
	Data []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	// Uncompressed size of client message body.
	UncompressedSize uint64 `protobuf:"varint,6,opt,name=uncompressed_size,json=uncompressedSize,proto3" json:"uncompressed_size,omitempty"`
	// kinesis data
	PartitionKey         string   `protobuf:"bytes,7,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	ExplicitHash         []byte   `protobuf:"bytes,8,opt,name=explicit_hash,json=explicitHash,proto3" json:"explicit_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) Reset() {
	*m = MigrationStreamingReadServerMessage_DataBatch_MessageData{}
}
func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadServerMessage_DataBatch_MessageData) ProtoMessage() {}
func (*MigrationStreamingReadServerMessage_DataBatch_MessageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{13, 4, 0}
}

func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_MessageData.Unmarshal(m, b)
}
func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_MessageData.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_MessageData.Merge(m, src)
}
func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_MessageData.Size(m)
}
func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_MessageData.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_MessageData proto.InternalMessageInfo

func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) GetSeqNo() uint64 {
	if m != nil {
		return m.SeqNo
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) GetCreateTimestampMs() uint64 {
	if m != nil {
		return m.CreateTimestampMs
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) GetCodec() Codec {
	if m != nil {
		return m.Codec
	}
	return Codec_CODEC_UNSPECIFIED
}

func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) GetUncompressedSize() uint64 {
	if m != nil {
		return m.UncompressedSize
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) GetPartitionKey() string {
	if m != nil {
		return m.PartitionKey
	}
	return ""
}

func (m *MigrationStreamingReadServerMessage_DataBatch_MessageData) GetExplicitHash() []byte {
	if m != nil {
		return m.ExplicitHash
	}
	return nil
}

// Representation of sequence of client messages from one write session.
type MigrationStreamingReadServerMessage_DataBatch_Batch struct {
	// Source identifier provided by client for this batch of client messages.
	SourceId []byte `protobuf:"bytes,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	// Client metadata attached to write session, the same for all messages in batch.
	ExtraFields []*KeyValue `protobuf:"bytes,3,rep,name=extra_fields,json=extraFields,proto3" json:"extra_fields,omitempty"`
	// Persist timestamp on server for batch.
	WriteTimestampMs uint64 `protobuf:"varint,4,opt,name=write_timestamp_ms,json=writeTimestampMs,proto3" json:"write_timestamp_ms,omitempty"`
	// Peer address of node that created write session.
	Ip string `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`
	// List of client messages.
	MessageData          []*MigrationStreamingReadServerMessage_DataBatch_MessageData `protobuf:"bytes,1,rep,name=message_data,json=messageData,proto3" json:"message_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                     `json:"-"`
	XXX_unrecognized     []byte                                                       `json:"-"`
	XXX_sizecache        int32                                                        `json:"-"`
}

func (m *MigrationStreamingReadServerMessage_DataBatch_Batch) Reset() {
	*m = MigrationStreamingReadServerMessage_DataBatch_Batch{}
}
func (m *MigrationStreamingReadServerMessage_DataBatch_Batch) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadServerMessage_DataBatch_Batch) ProtoMessage() {}
func (*MigrationStreamingReadServerMessage_DataBatch_Batch) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{13, 4, 1}
}

func (m *MigrationStreamingReadServerMessage_DataBatch_Batch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_Batch.Unmarshal(m, b)
}
func (m *MigrationStreamingReadServerMessage_DataBatch_Batch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_Batch.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadServerMessage_DataBatch_Batch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_Batch.Merge(m, src)
}
func (m *MigrationStreamingReadServerMessage_DataBatch_Batch) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_Batch.Size(m)
}
func (m *MigrationStreamingReadServerMessage_DataBatch_Batch) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_Batch.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_Batch proto.InternalMessageInfo

func (m *MigrationStreamingReadServerMessage_DataBatch_Batch) GetSourceId() []byte {
	if m != nil {
		return m.SourceId
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage_DataBatch_Batch) GetExtraFields() []*KeyValue {
	if m != nil {
		return m.ExtraFields
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage_DataBatch_Batch) GetWriteTimestampMs() uint64 {
	if m != nil {
		return m.WriteTimestampMs
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_DataBatch_Batch) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *MigrationStreamingReadServerMessage_DataBatch_Batch) GetMessageData() []*MigrationStreamingReadServerMessage_DataBatch_MessageData {
	if m != nil {
		return m.MessageData
	}
	return nil
}

// Representation of sequence of messages from one partition.
type MigrationStreamingReadServerMessage_DataBatch_PartitionData struct {
	// Partition's topic path.
	Topic *Path `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Topic's instance cluster name.
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Partition identifier. topic:cluster:partition is unique addressing for partition.
	Partition uint64 `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	// Client messages, divided by write sessions.
	Batches []*MigrationStreamingReadServerMessage_DataBatch_Batch `protobuf:"bytes,4,rep,name=batches,proto3" json:"batches,omitempty"`
	// Cookie for addressing this partition messages batch for committing.
	Cookie *CommitCookie `protobuf:"bytes,5,opt,name=cookie,proto3" json:"cookie,omitempty"`
	// Old formatted topic name with cluster inside.
	DeprecatedTopic      string   `protobuf:"bytes,10,opt,name=deprecated_topic,json=deprecatedTopic,proto3" json:"deprecated_topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrationStreamingReadServerMessage_DataBatch_PartitionData) Reset() {
	*m = MigrationStreamingReadServerMessage_DataBatch_PartitionData{}
}
func (m *MigrationStreamingReadServerMessage_DataBatch_PartitionData) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadServerMessage_DataBatch_PartitionData) ProtoMessage() {}
func (*MigrationStreamingReadServerMessage_DataBatch_PartitionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{13, 4, 2}
}

func (m *MigrationStreamingReadServerMessage_DataBatch_PartitionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_PartitionData.Unmarshal(m, b)
}
func (m *MigrationStreamingReadServerMessage_DataBatch_PartitionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_PartitionData.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadServerMessage_DataBatch_PartitionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_PartitionData.Merge(m, src)
}
func (m *MigrationStreamingReadServerMessage_DataBatch_PartitionData) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_PartitionData.Size(m)
}
func (m *MigrationStreamingReadServerMessage_DataBatch_PartitionData) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_PartitionData.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadServerMessage_DataBatch_PartitionData proto.InternalMessageInfo

func (m *MigrationStreamingReadServerMessage_DataBatch_PartitionData) GetTopic() *Path {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage_DataBatch_PartitionData) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *MigrationStreamingReadServerMessage_DataBatch_PartitionData) GetPartition() uint64 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_DataBatch_PartitionData) GetBatches() []*MigrationStreamingReadServerMessage_DataBatch_Batch {
	if m != nil {
		return m.Batches
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage_DataBatch_PartitionData) GetCookie() *CommitCookie {
	if m != nil {
		return m.Cookie
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage_DataBatch_PartitionData) GetDeprecatedTopic() string {
	if m != nil {
		return m.DeprecatedTopic
	}
	return ""
}

// Response for status requst.
type MigrationStreamingReadServerMessage_PartitionStatus struct {
	// Partition's topic path.
	Topic *Path `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Topic's instance cluster name.
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Partition identifier. topic:cluster:partition is unique addressing of partition.
	Partition uint64 `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	// Assign idenfier. Used for matching Assigned and Release requests from server.
	AssignId             uint64   `protobuf:"varint,5,opt,name=assign_id,json=assignId,proto3" json:"assign_id,omitempty"`
	CommittedOffset      uint64   `protobuf:"varint,6,opt,name=committed_offset,json=committedOffset,proto3" json:"committed_offset,omitempty"`
	EndOffset            uint64   `protobuf:"varint,7,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	WriteWatermarkMs     uint64   `protobuf:"varint,8,opt,name=write_watermark_ms,json=writeWatermarkMs,proto3" json:"write_watermark_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrationStreamingReadServerMessage_PartitionStatus) Reset() {
	*m = MigrationStreamingReadServerMessage_PartitionStatus{}
}
func (m *MigrationStreamingReadServerMessage_PartitionStatus) String() string {
	return proto.CompactTextString(m)
}
func (*MigrationStreamingReadServerMessage_PartitionStatus) ProtoMessage() {}
func (*MigrationStreamingReadServerMessage_PartitionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{13, 5}
}

func (m *MigrationStreamingReadServerMessage_PartitionStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_PartitionStatus.Unmarshal(m, b)
}
func (m *MigrationStreamingReadServerMessage_PartitionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_PartitionStatus.Marshal(b, m, deterministic)
}
func (m *MigrationStreamingReadServerMessage_PartitionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationStreamingReadServerMessage_PartitionStatus.Merge(m, src)
}
func (m *MigrationStreamingReadServerMessage_PartitionStatus) XXX_Size() int {
	return xxx_messageInfo_MigrationStreamingReadServerMessage_PartitionStatus.Size(m)
}
func (m *MigrationStreamingReadServerMessage_PartitionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationStreamingReadServerMessage_PartitionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationStreamingReadServerMessage_PartitionStatus proto.InternalMessageInfo

func (m *MigrationStreamingReadServerMessage_PartitionStatus) GetTopic() *Path {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *MigrationStreamingReadServerMessage_PartitionStatus) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *MigrationStreamingReadServerMessage_PartitionStatus) GetPartition() uint64 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_PartitionStatus) GetAssignId() uint64 {
	if m != nil {
		return m.AssignId
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_PartitionStatus) GetCommittedOffset() uint64 {
	if m != nil {
		return m.CommittedOffset
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_PartitionStatus) GetEndOffset() uint64 {
	if m != nil {
		return m.EndOffset
	}
	return 0
}

func (m *MigrationStreamingReadServerMessage_PartitionStatus) GetWriteWatermarkMs() uint64 {
	if m != nil {
		return m.WriteWatermarkMs
	}
	return 0
}

type ReadInfoRequest struct {
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// List of topics that are beeing read.
	Topics []*Path `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	// If get_only_original == false then return info about mirrored topics too.
	GetOnlyOriginal bool `protobuf:"varint,3,opt,name=get_only_original,json=getOnlyOriginal,proto3" json:"get_only_original,omitempty"`
	// Consumer path that is reading specified topics.
	Consumer             *Path    `protobuf:"bytes,4,opt,name=consumer,proto3" json:"consumer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadInfoRequest) Reset()         { *m = ReadInfoRequest{} }
func (m *ReadInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ReadInfoRequest) ProtoMessage()    {}
func (*ReadInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{14}
}

func (m *ReadInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadInfoRequest.Unmarshal(m, b)
}
func (m *ReadInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadInfoRequest.Marshal(b, m, deterministic)
}
func (m *ReadInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadInfoRequest.Merge(m, src)
}
func (m *ReadInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ReadInfoRequest.Size(m)
}
func (m *ReadInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadInfoRequest proto.InternalMessageInfo

func (m *ReadInfoRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if m != nil {
		return m.OperationParams
	}
	return nil
}

func (m *ReadInfoRequest) GetTopics() []*Path {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *ReadInfoRequest) GetGetOnlyOriginal() bool {
	if m != nil {
		return m.GetOnlyOriginal
	}
	return false
}

func (m *ReadInfoRequest) GetConsumer() *Path {
	if m != nil {
		return m.Consumer
	}
	return nil
}

type ReadInfoResponse struct {
	// Result of request will be inside operation.
	Operation            *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ReadInfoResponse) Reset()         { *m = ReadInfoResponse{} }
func (m *ReadInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ReadInfoResponse) ProtoMessage()    {}
func (*ReadInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{15}
}

func (m *ReadInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadInfoResponse.Unmarshal(m, b)
}
func (m *ReadInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadInfoResponse.Marshal(b, m, deterministic)
}
func (m *ReadInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadInfoResponse.Merge(m, src)
}
func (m *ReadInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ReadInfoResponse.Size(m)
}
func (m *ReadInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadInfoResponse proto.InternalMessageInfo

func (m *ReadInfoResponse) GetOperation() *Ydb_Operations.Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

type ReadInfoResult struct {
	// List of topics info.
	Topics               []*ReadInfoResult_TopicInfo `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ReadInfoResult) Reset()         { *m = ReadInfoResult{} }
func (m *ReadInfoResult) String() string { return proto.CompactTextString(m) }
func (*ReadInfoResult) ProtoMessage()    {}
func (*ReadInfoResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{16}
}

func (m *ReadInfoResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadInfoResult.Unmarshal(m, b)
}
func (m *ReadInfoResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadInfoResult.Marshal(b, m, deterministic)
}
func (m *ReadInfoResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadInfoResult.Merge(m, src)
}
func (m *ReadInfoResult) XXX_Size() int {
	return xxx_messageInfo_ReadInfoResult.Size(m)
}
func (m *ReadInfoResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadInfoResult.DiscardUnknown(m)
}

var xxx_messageInfo_ReadInfoResult proto.InternalMessageInfo

func (m *ReadInfoResult) GetTopics() []*ReadInfoResult_TopicInfo {
	if m != nil {
		return m.Topics
	}
	return nil
}

// Message containing information about concrete topic reading.
type ReadInfoResult_TopicInfo struct {
	// Topic path.
	Topic *Path `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Topic original cluster.
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Status of whole topic.
	Status Ydb.StatusIds_StatusCode `protobuf:"varint,3,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	// Issues if any.
	Issues []*Ydb_Issue.IssueMessage `protobuf:"bytes,4,rep,name=issues,proto3" json:"issues,omitempty"`
	// Reading info for partitions of this topic.
	Partitions           []*ReadInfoResult_TopicInfo_PartitionInfo `protobuf:"bytes,5,rep,name=partitions,proto3" json:"partitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ReadInfoResult_TopicInfo) Reset()         { *m = ReadInfoResult_TopicInfo{} }
func (m *ReadInfoResult_TopicInfo) String() string { return proto.CompactTextString(m) }
func (*ReadInfoResult_TopicInfo) ProtoMessage()    {}
func (*ReadInfoResult_TopicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{16, 0}
}

func (m *ReadInfoResult_TopicInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadInfoResult_TopicInfo.Unmarshal(m, b)
}
func (m *ReadInfoResult_TopicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadInfoResult_TopicInfo.Marshal(b, m, deterministic)
}
func (m *ReadInfoResult_TopicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadInfoResult_TopicInfo.Merge(m, src)
}
func (m *ReadInfoResult_TopicInfo) XXX_Size() int {
	return xxx_messageInfo_ReadInfoResult_TopicInfo.Size(m)
}
func (m *ReadInfoResult_TopicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadInfoResult_TopicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReadInfoResult_TopicInfo proto.InternalMessageInfo

func (m *ReadInfoResult_TopicInfo) GetTopic() *Path {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *ReadInfoResult_TopicInfo) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *ReadInfoResult_TopicInfo) GetStatus() Ydb.StatusIds_StatusCode {
	if m != nil {
		return m.Status
	}
	return Ydb.StatusIds_STATUS_CODE_UNSPECIFIED
}

func (m *ReadInfoResult_TopicInfo) GetIssues() []*Ydb_Issue.IssueMessage {
	if m != nil {
		return m.Issues
	}
	return nil
}

func (m *ReadInfoResult_TopicInfo) GetPartitions() []*ReadInfoResult_TopicInfo_PartitionInfo {
	if m != nil {
		return m.Partitions
	}
	return nil
}

// Message containing information about concrete topic's partition reading.
type ReadInfoResult_TopicInfo_PartitionInfo struct {
	// Patition identifier inside topic.
	Partition uint64 `protobuf:"varint,1,opt,name=partition,proto3" json:"partition,omitempty"`
	// Request status of partition.
	Status Ydb.StatusIds_StatusCode `protobuf:"varint,2,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	// Issues if any.
	Issues []*Ydb_Issue.IssueMessage `protobuf:"bytes,3,rep,name=issues,proto3" json:"issues,omitempty"`
	// Offset of first message in partition.
	StartOffset uint64 `protobuf:"varint,4,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"`
	// Offset of next not yet existing message in partition.
	EndOffset uint64 `protobuf:"varint,5,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	// Offset of consumer committed message a.k.a. first not processed message.
	// If commit_offset == end_offset then all messages from partition are processed.
	CommitOffset uint64 `protobuf:"varint,6,opt,name=commit_offset,json=commitOffset,proto3" json:"commit_offset,omitempty"`
	// Consumer lag in time between committed and last messages in partition.
	CommitTimeLagMs uint64 `protobuf:"varint,7,opt,name=commit_time_lag_ms,json=commitTimeLagMs,proto3" json:"commit_time_lag_ms,omitempty"`
	// Offset of first not read message by consumer from this partition.
	// read_offset can be bigger that committed_offset - consumer could read some messages but not yet commit them.
	ReadOffset uint64 `protobuf:"varint,8,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
	// Consumer lag in time between read and last messages in partition.
	ReadTimeLagMs uint64 `protobuf:"varint,9,opt,name=read_time_lag_ms,json=readTimeLagMs,proto3" json:"read_time_lag_ms,omitempty"`
	// Session identifier that locked and reading this partition right now.
	SessionId string `protobuf:"bytes,10,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Ip if node that created reading this session.
	ClientNode string `protobuf:"bytes,11,opt,name=client_node,json=clientNode,proto3" json:"client_node,omitempty"`
	// Host name of proxy node that processing this reading session.
	ProxyNode string `protobuf:"bytes,12,opt,name=proxy_node,json=proxyNode,proto3" json:"proxy_node,omitempty"`
	// Host name of node where partition leader is running.
	TabletNode string `protobuf:"bytes,13,opt,name=tablet_node,json=tabletNode,proto3" json:"tablet_node,omitempty"`
	// Assign identifier of actual partition assignment.
	AssignId uint64 `protobuf:"varint,14,opt,name=assign_id,json=assignId,proto3" json:"assign_id,omitempty"`
	// Timestamp of assignment.
	AssignTimestampMs uint64 `protobuf:"varint,15,opt,name=assign_timestamp_ms,json=assignTimestampMs,proto3" json:"assign_timestamp_ms,omitempty"`
	// Cookie of last performed read in session.
	LastReadCookie uint64 `protobuf:"varint,16,opt,name=last_read_cookie,json=lastReadCookie,proto3" json:"last_read_cookie,omitempty"`
	// Cookie upto whitch commits done.
	CommittedReadCookie uint64 `protobuf:"varint,17,opt,name=committed_read_cookie,json=committedReadCookie,proto3" json:"committed_read_cookie,omitempty"`
	// Cookie that client wants to commit, but server is waiting for committed_read_cookie + 1.
	OutOfOrderReadCookiesToCommit []uint64 `protobuf:"varint,18,rep,packed,name=out_of_order_read_cookies_to_commit,json=outOfOrderReadCookiesToCommit,proto3" json:"out_of_order_read_cookies_to_commit,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) Reset() {
	*m = ReadInfoResult_TopicInfo_PartitionInfo{}
}
func (m *ReadInfoResult_TopicInfo_PartitionInfo) String() string { return proto.CompactTextString(m) }
func (*ReadInfoResult_TopicInfo_PartitionInfo) ProtoMessage()    {}
func (*ReadInfoResult_TopicInfo_PartitionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{16, 0, 0}
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadInfoResult_TopicInfo_PartitionInfo.Unmarshal(m, b)
}
func (m *ReadInfoResult_TopicInfo_PartitionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadInfoResult_TopicInfo_PartitionInfo.Marshal(b, m, deterministic)
}
func (m *ReadInfoResult_TopicInfo_PartitionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadInfoResult_TopicInfo_PartitionInfo.Merge(m, src)
}
func (m *ReadInfoResult_TopicInfo_PartitionInfo) XXX_Size() int {
	return xxx_messageInfo_ReadInfoResult_TopicInfo_PartitionInfo.Size(m)
}
func (m *ReadInfoResult_TopicInfo_PartitionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadInfoResult_TopicInfo_PartitionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReadInfoResult_TopicInfo_PartitionInfo proto.InternalMessageInfo

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetPartition() uint64 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetStatus() Ydb.StatusIds_StatusCode {
	if m != nil {
		return m.Status
	}
	return Ydb.StatusIds_STATUS_CODE_UNSPECIFIED
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetIssues() []*Ydb_Issue.IssueMessage {
	if m != nil {
		return m.Issues
	}
	return nil
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetStartOffset() uint64 {
	if m != nil {
		return m.StartOffset
	}
	return 0
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetEndOffset() uint64 {
	if m != nil {
		return m.EndOffset
	}
	return 0
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetCommitOffset() uint64 {
	if m != nil {
		return m.CommitOffset
	}
	return 0
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetCommitTimeLagMs() uint64 {
	if m != nil {
		return m.CommitTimeLagMs
	}
	return 0
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetReadOffset() uint64 {
	if m != nil {
		return m.ReadOffset
	}
	return 0
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetReadTimeLagMs() uint64 {
	if m != nil {
		return m.ReadTimeLagMs
	}
	return 0
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetClientNode() string {
	if m != nil {
		return m.ClientNode
	}
	return ""
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetProxyNode() string {
	if m != nil {
		return m.ProxyNode
	}
	return ""
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetTabletNode() string {
	if m != nil {
		return m.TabletNode
	}
	return ""
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetAssignId() uint64 {
	if m != nil {
		return m.AssignId
	}
	return 0
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetAssignTimestampMs() uint64 {
	if m != nil {
		return m.AssignTimestampMs
	}
	return 0
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetLastReadCookie() uint64 {
	if m != nil {
		return m.LastReadCookie
	}
	return 0
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetCommittedReadCookie() uint64 {
	if m != nil {
		return m.CommittedReadCookie
	}
	return 0
}

func (m *ReadInfoResult_TopicInfo_PartitionInfo) GetOutOfOrderReadCookiesToCommit() []uint64 {
	if m != nil {
		return m.OutOfOrderReadCookiesToCommit
	}
	return nil
}

type DropTopicRequest struct {
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Topic path.
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DropTopicRequest) Reset()         { *m = DropTopicRequest{} }
func (m *DropTopicRequest) String() string { return proto.CompactTextString(m) }
func (*DropTopicRequest) ProtoMessage()    {}
func (*DropTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{17}
}

func (m *DropTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropTopicRequest.Unmarshal(m, b)
}
func (m *DropTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropTopicRequest.Marshal(b, m, deterministic)
}
func (m *DropTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropTopicRequest.Merge(m, src)
}
func (m *DropTopicRequest) XXX_Size() int {
	return xxx_messageInfo_DropTopicRequest.Size(m)
}
func (m *DropTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DropTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DropTopicRequest proto.InternalMessageInfo

func (m *DropTopicRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if m != nil {
		return m.OperationParams
	}
	return nil
}

func (m *DropTopicRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type DropTopicResponse struct {
	// Result of request will be inside operation.
	Operation            *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DropTopicResponse) Reset()         { *m = DropTopicResponse{} }
func (m *DropTopicResponse) String() string { return proto.CompactTextString(m) }
func (*DropTopicResponse) ProtoMessage()    {}
func (*DropTopicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{18}
}

func (m *DropTopicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropTopicResponse.Unmarshal(m, b)
}
func (m *DropTopicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropTopicResponse.Marshal(b, m, deterministic)
}
func (m *DropTopicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropTopicResponse.Merge(m, src)
}
func (m *DropTopicResponse) XXX_Size() int {
	return xxx_messageInfo_DropTopicResponse.Size(m)
}
func (m *DropTopicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DropTopicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DropTopicResponse proto.InternalMessageInfo

func (m *DropTopicResponse) GetOperation() *Ydb_Operations.Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

type DropTopicResult struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DropTopicResult) Reset()         { *m = DropTopicResult{} }
func (m *DropTopicResult) String() string { return proto.CompactTextString(m) }
func (*DropTopicResult) ProtoMessage()    {}
func (*DropTopicResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{19}
}

func (m *DropTopicResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropTopicResult.Unmarshal(m, b)
}
func (m *DropTopicResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropTopicResult.Marshal(b, m, deterministic)
}
func (m *DropTopicResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropTopicResult.Merge(m, src)
}
func (m *DropTopicResult) XXX_Size() int {
	return xxx_messageInfo_DropTopicResult.Size(m)
}
func (m *DropTopicResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DropTopicResult.DiscardUnknown(m)
}

var xxx_messageInfo_DropTopicResult proto.InternalMessageInfo

type Credentials struct {
	// Types that are valid to be assigned to Credentials:
	//	*Credentials_OauthToken
	//	*Credentials_JwtParams
	//	*Credentials_Iam_
	Credentials          isCredentials_Credentials `protobuf_oneof:"credentials"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Credentials) Reset()         { *m = Credentials{} }
func (m *Credentials) String() string { return proto.CompactTextString(m) }
func (*Credentials) ProtoMessage()    {}
func (*Credentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{20}
}

func (m *Credentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credentials.Unmarshal(m, b)
}
func (m *Credentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credentials.Marshal(b, m, deterministic)
}
func (m *Credentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credentials.Merge(m, src)
}
func (m *Credentials) XXX_Size() int {
	return xxx_messageInfo_Credentials.Size(m)
}
func (m *Credentials) XXX_DiscardUnknown() {
	xxx_messageInfo_Credentials.DiscardUnknown(m)
}

var xxx_messageInfo_Credentials proto.InternalMessageInfo

type isCredentials_Credentials interface {
	isCredentials_Credentials()
}

type Credentials_OauthToken struct {
	OauthToken string `protobuf:"bytes,1,opt,name=oauth_token,json=oauthToken,proto3,oneof"`
}

type Credentials_JwtParams struct {
	JwtParams string `protobuf:"bytes,2,opt,name=jwt_params,json=jwtParams,proto3,oneof"`
}

type Credentials_Iam_ struct {
	Iam *Credentials_Iam `protobuf:"bytes,3,opt,name=iam,proto3,oneof"`
}

func (*Credentials_OauthToken) isCredentials_Credentials() {}

func (*Credentials_JwtParams) isCredentials_Credentials() {}

func (*Credentials_Iam_) isCredentials_Credentials() {}

func (m *Credentials) GetCredentials() isCredentials_Credentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *Credentials) GetOauthToken() string {
	if x, ok := m.GetCredentials().(*Credentials_OauthToken); ok {
		return x.OauthToken
	}
	return ""
}

func (m *Credentials) GetJwtParams() string {
	if x, ok := m.GetCredentials().(*Credentials_JwtParams); ok {
		return x.JwtParams
	}
	return ""
}

func (m *Credentials) GetIam() *Credentials_Iam {
	if x, ok := m.GetCredentials().(*Credentials_Iam_); ok {
		return x.Iam
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Credentials) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Credentials_OauthToken)(nil),
		(*Credentials_JwtParams)(nil),
		(*Credentials_Iam_)(nil),
	}
}

type Credentials_Iam struct {
	Endpoint             string   `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	ServiceAccountKey    string   `protobuf:"bytes,2,opt,name=service_account_key,json=serviceAccountKey,proto3" json:"service_account_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Credentials_Iam) Reset()         { *m = Credentials_Iam{} }
func (m *Credentials_Iam) String() string { return proto.CompactTextString(m) }
func (*Credentials_Iam) ProtoMessage()    {}
func (*Credentials_Iam) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{20, 0}
}

func (m *Credentials_Iam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credentials_Iam.Unmarshal(m, b)
}
func (m *Credentials_Iam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credentials_Iam.Marshal(b, m, deterministic)
}
func (m *Credentials_Iam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credentials_Iam.Merge(m, src)
}
func (m *Credentials_Iam) XXX_Size() int {
	return xxx_messageInfo_Credentials_Iam.Size(m)
}
func (m *Credentials_Iam) XXX_DiscardUnknown() {
	xxx_messageInfo_Credentials_Iam.DiscardUnknown(m)
}

var xxx_messageInfo_Credentials_Iam proto.InternalMessageInfo

func (m *Credentials_Iam) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Credentials_Iam) GetServiceAccountKey() string {
	if m != nil {
		return m.ServiceAccountKey
	}
	return ""
}

type TopicSettings struct {
	// How many partitions in topic. Must less than database limit. Default limit - 10.
	PartitionsCount int32 `protobuf:"varint,1,opt,name=partitions_count,json=partitionsCount,proto3" json:"partitions_count,omitempty"`
	// How long data in partition should be stored. Must be greater than 0 and less than limit for this database.  Default limit - 36 hours.
	RetentionPeriodMs int64 `protobuf:"varint,2,opt,name=retention_period_ms,json=retentionPeriodMs,proto3" json:"retention_period_ms,omitempty"`
	// How long last written seqno for message group should be stored. Must be greater then retention_period_ms and less then limit for this database.  Default limit - 16 days.
	MessageGroupSeqnoRetentionPeriodMs int64 `protobuf:"varint,12,opt,name=message_group_seqno_retention_period_ms,json=messageGroupSeqnoRetentionPeriodMs,proto3" json:"message_group_seqno_retention_period_ms,omitempty"`
	// How many last written seqno for various message groups should be stored per partition. Must be less than limit for this database.  Default limit - 6*10^6 values.
	MaxPartitionMessageGroupsSeqnoStored int64 `protobuf:"varint,13,opt,name=max_partition_message_groups_seqno_stored,json=maxPartitionMessageGroupsSeqnoStored,proto3" json:"max_partition_message_groups_seqno_stored,omitempty"`
	// Max format version that is allowed for writers. Must be value from enum FormatVersion.
	// Writes with greater format version are forbiden.
	SupportedFormat TopicSettings_Format `protobuf:"varint,3,opt,name=supported_format,json=supportedFormat,proto3,enum=Ydb.PersQueue.V1.TopicSettings_Format" json:"supported_format,omitempty"`
	// List of allowed codecs for writers.
	// Writes with codec not from this list are forbiden.
	SupportedCodecs []Codec `protobuf:"varint,4,rep,packed,name=supported_codecs,json=supportedCodecs,proto3,enum=Ydb.PersQueue.V1.Codec" json:"supported_codecs,omitempty"`
	// Max storage usage for each topic's partition. Must be less than database limit. Default limit - 130 GB.
	MaxPartitionStorageSize int64 `protobuf:"varint,5,opt,name=max_partition_storage_size,json=maxPartitionStorageSize,proto3" json:"max_partition_storage_size,omitempty"`
	// Partition write speed in bytes per second. Must be less than database limit. Default limit - 1 MB/s.
	MaxPartitionWriteSpeed int64 `protobuf:"varint,6,opt,name=max_partition_write_speed,json=maxPartitionWriteSpeed,proto3" json:"max_partition_write_speed,omitempty"`
	// Burst size for write in partition, in bytes. Must be less than database limit. Default limit - 1 MB.
	MaxPartitionWriteBurst int64 `protobuf:"varint,7,opt,name=max_partition_write_burst,json=maxPartitionWriteBurst,proto3" json:"max_partition_write_burst,omitempty"`
	// Disallows client writes. Used for mirrored topics in federation.
	ClientWriteDisabled bool `protobuf:"varint,8,opt,name=client_write_disabled,json=clientWriteDisabled,proto3" json:"client_write_disabled,omitempty"`
	// List of consumer read rules for this topic.
	ReadRules []*TopicSettings_ReadRule `protobuf:"bytes,9,rep,name=read_rules,json=readRules,proto3" json:"read_rules,omitempty"`
	// User and server attributes of topic. Server attributes starts from "_" and will be validated by server.
	Attributes map[string]string `protobuf:"bytes,10,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// remote mirror rule for this topic.
	RemoteMirrorRule     *TopicSettings_RemoteMirrorRule `protobuf:"bytes,11,opt,name=remote_mirror_rule,json=remoteMirrorRule,proto3" json:"remote_mirror_rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *TopicSettings) Reset()         { *m = TopicSettings{} }
func (m *TopicSettings) String() string { return proto.CompactTextString(m) }
func (*TopicSettings) ProtoMessage()    {}
func (*TopicSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{21}
}

func (m *TopicSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicSettings.Unmarshal(m, b)
}
func (m *TopicSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicSettings.Marshal(b, m, deterministic)
}
func (m *TopicSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicSettings.Merge(m, src)
}
func (m *TopicSettings) XXX_Size() int {
	return xxx_messageInfo_TopicSettings.Size(m)
}
func (m *TopicSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TopicSettings proto.InternalMessageInfo

func (m *TopicSettings) GetPartitionsCount() int32 {
	if m != nil {
		return m.PartitionsCount
	}
	return 0
}

func (m *TopicSettings) GetRetentionPeriodMs() int64 {
	if m != nil {
		return m.RetentionPeriodMs
	}
	return 0
}

func (m *TopicSettings) GetMessageGroupSeqnoRetentionPeriodMs() int64 {
	if m != nil {
		return m.MessageGroupSeqnoRetentionPeriodMs
	}
	return 0
}

func (m *TopicSettings) GetMaxPartitionMessageGroupsSeqnoStored() int64 {
	if m != nil {
		return m.MaxPartitionMessageGroupsSeqnoStored
	}
	return 0
}

func (m *TopicSettings) GetSupportedFormat() TopicSettings_Format {
	if m != nil {
		return m.SupportedFormat
	}
	return TopicSettings_FORMAT_UNSPECIFIED
}

func (m *TopicSettings) GetSupportedCodecs() []Codec {
	if m != nil {
		return m.SupportedCodecs
	}
	return nil
}

func (m *TopicSettings) GetMaxPartitionStorageSize() int64 {
	if m != nil {
		return m.MaxPartitionStorageSize
	}
	return 0
}

func (m *TopicSettings) GetMaxPartitionWriteSpeed() int64 {
	if m != nil {
		return m.MaxPartitionWriteSpeed
	}
	return 0
}

func (m *TopicSettings) GetMaxPartitionWriteBurst() int64 {
	if m != nil {
		return m.MaxPartitionWriteBurst
	}
	return 0
}

func (m *TopicSettings) GetClientWriteDisabled() bool {
	if m != nil {
		return m.ClientWriteDisabled
	}
	return false
}

func (m *TopicSettings) GetReadRules() []*TopicSettings_ReadRule {
	if m != nil {
		return m.ReadRules
	}
	return nil
}

func (m *TopicSettings) GetAttributes() map[string]string {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *TopicSettings) GetRemoteMirrorRule() *TopicSettings_RemoteMirrorRule {
	if m != nil {
		return m.RemoteMirrorRule
	}
	return nil
}

// Message for read rules description.
type TopicSettings_ReadRule struct {
	// For what consumer this read rule is. Must be valid not empty consumer name.
	// Is key for read rules. There could be only one read rule with corresponding consumer name.
	ConsumerName string `protobuf:"bytes,1,opt,name=consumer_name,json=consumerName,proto3" json:"consumer_name,omitempty"`
	// Flag that this consumer is important.
	Important bool `protobuf:"varint,2,opt,name=important,proto3" json:"important,omitempty"`
	// All messages with smaller timestamp of write will be skipped.
	StartingMessageTimestampMs int64 `protobuf:"varint,3,opt,name=starting_message_timestamp_ms,json=startingMessageTimestampMs,proto3" json:"starting_message_timestamp_ms,omitempty"`
	// Max format version that is supported by this consumer.
	// supported_format on topic must not be greater.
	SupportedFormat TopicSettings_Format `protobuf:"varint,4,opt,name=supported_format,json=supportedFormat,proto3,enum=Ydb.PersQueue.V1.TopicSettings_Format" json:"supported_format,omitempty"`
	// List of supported codecs by this consumer.
	// supported_codecs on topic must be contained inside this list.
	SupportedCodecs []Codec `protobuf:"varint,5,rep,packed,name=supported_codecs,json=supportedCodecs,proto3,enum=Ydb.PersQueue.V1.Codec" json:"supported_codecs,omitempty"`
	// Read rule version. Any non-negative integer.
	Version int64 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// Client service type.
	ServiceType          string   `protobuf:"bytes,7,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicSettings_ReadRule) Reset()         { *m = TopicSettings_ReadRule{} }
func (m *TopicSettings_ReadRule) String() string { return proto.CompactTextString(m) }
func (*TopicSettings_ReadRule) ProtoMessage()    {}
func (*TopicSettings_ReadRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{21, 0}
}

func (m *TopicSettings_ReadRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicSettings_ReadRule.Unmarshal(m, b)
}
func (m *TopicSettings_ReadRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicSettings_ReadRule.Marshal(b, m, deterministic)
}
func (m *TopicSettings_ReadRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicSettings_ReadRule.Merge(m, src)
}
func (m *TopicSettings_ReadRule) XXX_Size() int {
	return xxx_messageInfo_TopicSettings_ReadRule.Size(m)
}
func (m *TopicSettings_ReadRule) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicSettings_ReadRule.DiscardUnknown(m)
}

var xxx_messageInfo_TopicSettings_ReadRule proto.InternalMessageInfo

func (m *TopicSettings_ReadRule) GetConsumerName() string {
	if m != nil {
		return m.ConsumerName
	}
	return ""
}

func (m *TopicSettings_ReadRule) GetImportant() bool {
	if m != nil {
		return m.Important
	}
	return false
}

func (m *TopicSettings_ReadRule) GetStartingMessageTimestampMs() int64 {
	if m != nil {
		return m.StartingMessageTimestampMs
	}
	return 0
}

func (m *TopicSettings_ReadRule) GetSupportedFormat() TopicSettings_Format {
	if m != nil {
		return m.SupportedFormat
	}
	return TopicSettings_FORMAT_UNSPECIFIED
}

func (m *TopicSettings_ReadRule) GetSupportedCodecs() []Codec {
	if m != nil {
		return m.SupportedCodecs
	}
	return nil
}

func (m *TopicSettings_ReadRule) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *TopicSettings_ReadRule) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

// Message for remote mirror rule description.
type TopicSettings_RemoteMirrorRule struct {
	// Source cluster endpoint in format server:port.
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Source topic that we want to mirror.
	TopicPath string `protobuf:"bytes,2,opt,name=topic_path,json=topicPath,proto3" json:"topic_path,omitempty"`
	// Source consumer for reading source topic.
	ConsumerName string `protobuf:"bytes,3,opt,name=consumer_name,json=consumerName,proto3" json:"consumer_name,omitempty"`
	// Credentials for reading source topic by source consumer.
	Credentials *Credentials `protobuf:"bytes,4,opt,name=credentials,proto3" json:"credentials,omitempty"`
	// All messages with smaller timestamp of write will be skipped.
	StartingMessageTimestampMs int64 `protobuf:"varint,5,opt,name=starting_message_timestamp_ms,json=startingMessageTimestampMs,proto3" json:"starting_message_timestamp_ms,omitempty"`
	// Database
	Database             string   `protobuf:"bytes,6,opt,name=database,proto3" json:"database,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicSettings_RemoteMirrorRule) Reset()         { *m = TopicSettings_RemoteMirrorRule{} }
func (m *TopicSettings_RemoteMirrorRule) String() string { return proto.CompactTextString(m) }
func (*TopicSettings_RemoteMirrorRule) ProtoMessage()    {}
func (*TopicSettings_RemoteMirrorRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{21, 2}
}

func (m *TopicSettings_RemoteMirrorRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicSettings_RemoteMirrorRule.Unmarshal(m, b)
}
func (m *TopicSettings_RemoteMirrorRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicSettings_RemoteMirrorRule.Marshal(b, m, deterministic)
}
func (m *TopicSettings_RemoteMirrorRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicSettings_RemoteMirrorRule.Merge(m, src)
}
func (m *TopicSettings_RemoteMirrorRule) XXX_Size() int {
	return xxx_messageInfo_TopicSettings_RemoteMirrorRule.Size(m)
}
func (m *TopicSettings_RemoteMirrorRule) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicSettings_RemoteMirrorRule.DiscardUnknown(m)
}

var xxx_messageInfo_TopicSettings_RemoteMirrorRule proto.InternalMessageInfo

func (m *TopicSettings_RemoteMirrorRule) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *TopicSettings_RemoteMirrorRule) GetTopicPath() string {
	if m != nil {
		return m.TopicPath
	}
	return ""
}

func (m *TopicSettings_RemoteMirrorRule) GetConsumerName() string {
	if m != nil {
		return m.ConsumerName
	}
	return ""
}

func (m *TopicSettings_RemoteMirrorRule) GetCredentials() *Credentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *TopicSettings_RemoteMirrorRule) GetStartingMessageTimestampMs() int64 {
	if m != nil {
		return m.StartingMessageTimestampMs
	}
	return 0
}

func (m *TopicSettings_RemoteMirrorRule) GetDatabase() string {
	if m != nil {
		return m.Database
	}
	return ""
}

type CreateTopicRequest struct {
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Topic path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Topic settings.
	Settings             *TopicSettings `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateTopicRequest) Reset()         { *m = CreateTopicRequest{} }
func (m *CreateTopicRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTopicRequest) ProtoMessage()    {}
func (*CreateTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{22}
}

func (m *CreateTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTopicRequest.Unmarshal(m, b)
}
func (m *CreateTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTopicRequest.Marshal(b, m, deterministic)
}
func (m *CreateTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTopicRequest.Merge(m, src)
}
func (m *CreateTopicRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTopicRequest.Size(m)
}
func (m *CreateTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTopicRequest proto.InternalMessageInfo

func (m *CreateTopicRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if m != nil {
		return m.OperationParams
	}
	return nil
}

func (m *CreateTopicRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CreateTopicRequest) GetSettings() *TopicSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type CreateTopicResponse struct {
	// Result of request will be inside operation.
	Operation            *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CreateTopicResponse) Reset()         { *m = CreateTopicResponse{} }
func (m *CreateTopicResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTopicResponse) ProtoMessage()    {}
func (*CreateTopicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{23}
}

func (m *CreateTopicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTopicResponse.Unmarshal(m, b)
}
func (m *CreateTopicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTopicResponse.Marshal(b, m, deterministic)
}
func (m *CreateTopicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTopicResponse.Merge(m, src)
}
func (m *CreateTopicResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTopicResponse.Size(m)
}
func (m *CreateTopicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTopicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTopicResponse proto.InternalMessageInfo

func (m *CreateTopicResponse) GetOperation() *Ydb_Operations.Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

type CreateTopicResult struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTopicResult) Reset()         { *m = CreateTopicResult{} }
func (m *CreateTopicResult) String() string { return proto.CompactTextString(m) }
func (*CreateTopicResult) ProtoMessage()    {}
func (*CreateTopicResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{24}
}

func (m *CreateTopicResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTopicResult.Unmarshal(m, b)
}
func (m *CreateTopicResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTopicResult.Marshal(b, m, deterministic)
}
func (m *CreateTopicResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTopicResult.Merge(m, src)
}
func (m *CreateTopicResult) XXX_Size() int {
	return xxx_messageInfo_CreateTopicResult.Size(m)
}
func (m *CreateTopicResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTopicResult.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTopicResult proto.InternalMessageInfo

type AlterTopicRequest struct {
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Topic path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// New topic settings to be set. All options inside should be set despite same value.
	Settings             *TopicSettings `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AlterTopicRequest) Reset()         { *m = AlterTopicRequest{} }
func (m *AlterTopicRequest) String() string { return proto.CompactTextString(m) }
func (*AlterTopicRequest) ProtoMessage()    {}
func (*AlterTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{25}
}

func (m *AlterTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlterTopicRequest.Unmarshal(m, b)
}
func (m *AlterTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlterTopicRequest.Marshal(b, m, deterministic)
}
func (m *AlterTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlterTopicRequest.Merge(m, src)
}
func (m *AlterTopicRequest) XXX_Size() int {
	return xxx_messageInfo_AlterTopicRequest.Size(m)
}
func (m *AlterTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AlterTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AlterTopicRequest proto.InternalMessageInfo

func (m *AlterTopicRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if m != nil {
		return m.OperationParams
	}
	return nil
}

func (m *AlterTopicRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *AlterTopicRequest) GetSettings() *TopicSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type AlterTopicResponse struct {
	// Result of request will be inside operation.
	Operation            *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AlterTopicResponse) Reset()         { *m = AlterTopicResponse{} }
func (m *AlterTopicResponse) String() string { return proto.CompactTextString(m) }
func (*AlterTopicResponse) ProtoMessage()    {}
func (*AlterTopicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{26}
}

func (m *AlterTopicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlterTopicResponse.Unmarshal(m, b)
}
func (m *AlterTopicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlterTopicResponse.Marshal(b, m, deterministic)
}
func (m *AlterTopicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlterTopicResponse.Merge(m, src)
}
func (m *AlterTopicResponse) XXX_Size() int {
	return xxx_messageInfo_AlterTopicResponse.Size(m)
}
func (m *AlterTopicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AlterTopicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AlterTopicResponse proto.InternalMessageInfo

func (m *AlterTopicResponse) GetOperation() *Ydb_Operations.Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

//*
// Update topic result message that will be inside UpdateTopicResponse.operation.
type AlterTopicResult struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlterTopicResult) Reset()         { *m = AlterTopicResult{} }
func (m *AlterTopicResult) String() string { return proto.CompactTextString(m) }
func (*AlterTopicResult) ProtoMessage()    {}
func (*AlterTopicResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{27}
}

func (m *AlterTopicResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlterTopicResult.Unmarshal(m, b)
}
func (m *AlterTopicResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlterTopicResult.Marshal(b, m, deterministic)
}
func (m *AlterTopicResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlterTopicResult.Merge(m, src)
}
func (m *AlterTopicResult) XXX_Size() int {
	return xxx_messageInfo_AlterTopicResult.Size(m)
}
func (m *AlterTopicResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AlterTopicResult.DiscardUnknown(m)
}

var xxx_messageInfo_AlterTopicResult proto.InternalMessageInfo

//*
// Add read rules for existing topic request.
type AddReadRuleRequest struct {
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Topic path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// read rules to add
	ReadRule             *TopicSettings_ReadRule `protobuf:"bytes,3,opt,name=read_rule,json=readRule,proto3" json:"read_rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *AddReadRuleRequest) Reset()         { *m = AddReadRuleRequest{} }
func (m *AddReadRuleRequest) String() string { return proto.CompactTextString(m) }
func (*AddReadRuleRequest) ProtoMessage()    {}
func (*AddReadRuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{28}
}

func (m *AddReadRuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddReadRuleRequest.Unmarshal(m, b)
}
func (m *AddReadRuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddReadRuleRequest.Marshal(b, m, deterministic)
}
func (m *AddReadRuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddReadRuleRequest.Merge(m, src)
}
func (m *AddReadRuleRequest) XXX_Size() int {
	return xxx_messageInfo_AddReadRuleRequest.Size(m)
}
func (m *AddReadRuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddReadRuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddReadRuleRequest proto.InternalMessageInfo

func (m *AddReadRuleRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if m != nil {
		return m.OperationParams
	}
	return nil
}

func (m *AddReadRuleRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *AddReadRuleRequest) GetReadRule() *TopicSettings_ReadRule {
	if m != nil {
		return m.ReadRule
	}
	return nil
}

//*
// Add read rules for existing topic response.
type AddReadRuleResponse struct {
	// Result of request will be inside operation.
	Operation            *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AddReadRuleResponse) Reset()         { *m = AddReadRuleResponse{} }
func (m *AddReadRuleResponse) String() string { return proto.CompactTextString(m) }
func (*AddReadRuleResponse) ProtoMessage()    {}
func (*AddReadRuleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{29}
}

func (m *AddReadRuleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddReadRuleResponse.Unmarshal(m, b)
}
func (m *AddReadRuleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddReadRuleResponse.Marshal(b, m, deterministic)
}
func (m *AddReadRuleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddReadRuleResponse.Merge(m, src)
}
func (m *AddReadRuleResponse) XXX_Size() int {
	return xxx_messageInfo_AddReadRuleResponse.Size(m)
}
func (m *AddReadRuleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddReadRuleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddReadRuleResponse proto.InternalMessageInfo

func (m *AddReadRuleResponse) GetOperation() *Ydb_Operations.Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

//*
// Add read rules result message that will be inside AddReadRuleReponse.operation.
type AddReadRuleResult struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddReadRuleResult) Reset()         { *m = AddReadRuleResult{} }
func (m *AddReadRuleResult) String() string { return proto.CompactTextString(m) }
func (*AddReadRuleResult) ProtoMessage()    {}
func (*AddReadRuleResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{30}
}

func (m *AddReadRuleResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddReadRuleResult.Unmarshal(m, b)
}
func (m *AddReadRuleResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddReadRuleResult.Marshal(b, m, deterministic)
}
func (m *AddReadRuleResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddReadRuleResult.Merge(m, src)
}
func (m *AddReadRuleResult) XXX_Size() int {
	return xxx_messageInfo_AddReadRuleResult.Size(m)
}
func (m *AddReadRuleResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AddReadRuleResult.DiscardUnknown(m)
}

var xxx_messageInfo_AddReadRuleResult proto.InternalMessageInfo

//*
// Remove read rules request for existing topic.
type RemoveReadRuleRequest struct {
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Topic path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// read rules to remove. Only consumer names
	ConsumerName         string   `protobuf:"bytes,3,opt,name=consumer_name,json=consumerName,proto3" json:"consumer_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveReadRuleRequest) Reset()         { *m = RemoveReadRuleRequest{} }
func (m *RemoveReadRuleRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveReadRuleRequest) ProtoMessage()    {}
func (*RemoveReadRuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{31}
}

func (m *RemoveReadRuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveReadRuleRequest.Unmarshal(m, b)
}
func (m *RemoveReadRuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveReadRuleRequest.Marshal(b, m, deterministic)
}
func (m *RemoveReadRuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveReadRuleRequest.Merge(m, src)
}
func (m *RemoveReadRuleRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveReadRuleRequest.Size(m)
}
func (m *RemoveReadRuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveReadRuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveReadRuleRequest proto.InternalMessageInfo

func (m *RemoveReadRuleRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if m != nil {
		return m.OperationParams
	}
	return nil
}

func (m *RemoveReadRuleRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *RemoveReadRuleRequest) GetConsumerName() string {
	if m != nil {
		return m.ConsumerName
	}
	return ""
}

//*
// Remove read rules response for existing topic.
type RemoveReadRuleResponse struct {
	// Result of request will be inside operation.
	Operation            *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RemoveReadRuleResponse) Reset()         { *m = RemoveReadRuleResponse{} }
func (m *RemoveReadRuleResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveReadRuleResponse) ProtoMessage()    {}
func (*RemoveReadRuleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{32}
}

func (m *RemoveReadRuleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveReadRuleResponse.Unmarshal(m, b)
}
func (m *RemoveReadRuleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveReadRuleResponse.Marshal(b, m, deterministic)
}
func (m *RemoveReadRuleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveReadRuleResponse.Merge(m, src)
}
func (m *RemoveReadRuleResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveReadRuleResponse.Size(m)
}
func (m *RemoveReadRuleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveReadRuleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveReadRuleResponse proto.InternalMessageInfo

func (m *RemoveReadRuleResponse) GetOperation() *Ydb_Operations.Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

//*
// Remove read rules result message that will be inside RemoveReadRuleReponse.operation.
type RemoveReadRuleResult struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveReadRuleResult) Reset()         { *m = RemoveReadRuleResult{} }
func (m *RemoveReadRuleResult) String() string { return proto.CompactTextString(m) }
func (*RemoveReadRuleResult) ProtoMessage()    {}
func (*RemoveReadRuleResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{33}
}

func (m *RemoveReadRuleResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveReadRuleResult.Unmarshal(m, b)
}
func (m *RemoveReadRuleResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveReadRuleResult.Marshal(b, m, deterministic)
}
func (m *RemoveReadRuleResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveReadRuleResult.Merge(m, src)
}
func (m *RemoveReadRuleResult) XXX_Size() int {
	return xxx_messageInfo_RemoveReadRuleResult.Size(m)
}
func (m *RemoveReadRuleResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveReadRuleResult.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveReadRuleResult proto.InternalMessageInfo

type DescribeTopicRequest struct {
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Topic path.
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DescribeTopicRequest) Reset()         { *m = DescribeTopicRequest{} }
func (m *DescribeTopicRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeTopicRequest) ProtoMessage()    {}
func (*DescribeTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{34}
}

func (m *DescribeTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeTopicRequest.Unmarshal(m, b)
}
func (m *DescribeTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeTopicRequest.Marshal(b, m, deterministic)
}
func (m *DescribeTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeTopicRequest.Merge(m, src)
}
func (m *DescribeTopicRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeTopicRequest.Size(m)
}
func (m *DescribeTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeTopicRequest proto.InternalMessageInfo

func (m *DescribeTopicRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if m != nil {
		return m.OperationParams
	}
	return nil
}

func (m *DescribeTopicRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type DescribeTopicResponse struct {
	// Result of request will be inside operation.
	Operation            *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DescribeTopicResponse) Reset()         { *m = DescribeTopicResponse{} }
func (m *DescribeTopicResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeTopicResponse) ProtoMessage()    {}
func (*DescribeTopicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{35}
}

func (m *DescribeTopicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeTopicResponse.Unmarshal(m, b)
}
func (m *DescribeTopicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeTopicResponse.Marshal(b, m, deterministic)
}
func (m *DescribeTopicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeTopicResponse.Merge(m, src)
}
func (m *DescribeTopicResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeTopicResponse.Size(m)
}
func (m *DescribeTopicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeTopicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeTopicResponse proto.InternalMessageInfo

func (m *DescribeTopicResponse) GetOperation() *Ydb_Operations.Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

type DescribeTopicResult struct {
	// Topic path.
	Self *Ydb_Scheme.Entry `protobuf:"bytes,1,opt,name=self,proto3" json:"self,omitempty"`
	// Settings of topic.
	Settings             *TopicSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DescribeTopicResult) Reset()         { *m = DescribeTopicResult{} }
func (m *DescribeTopicResult) String() string { return proto.CompactTextString(m) }
func (*DescribeTopicResult) ProtoMessage()    {}
func (*DescribeTopicResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_c34299dbed9da419, []int{36}
}

func (m *DescribeTopicResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeTopicResult.Unmarshal(m, b)
}
func (m *DescribeTopicResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeTopicResult.Marshal(b, m, deterministic)
}
func (m *DescribeTopicResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeTopicResult.Merge(m, src)
}
func (m *DescribeTopicResult) XXX_Size() int {
	return xxx_messageInfo_DescribeTopicResult.Size(m)
}
func (m *DescribeTopicResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeTopicResult.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeTopicResult proto.InternalMessageInfo

func (m *DescribeTopicResult) GetSelf() *Ydb_Scheme.Entry {
	if m != nil {
		return m.Self
	}
	return nil
}

func (m *DescribeTopicResult) GetSettings() *TopicSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func init() {
	proto.RegisterEnum("Ydb.PersQueue.V1.Codec", Codec_name, Codec_value)
	proto.RegisterEnum("Ydb.PersQueue.V1.StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status", StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status_name, StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState_Status_value)
	proto.RegisterEnum("Ydb.PersQueue.V1.MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status", MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status_name, MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState_Status_value)
	proto.RegisterEnum("Ydb.PersQueue.V1.TopicSettings_Format", TopicSettings_Format_name, TopicSettings_Format_value)
	proto.RegisterType((*SessionMetaValue)(nil), "Ydb.PersQueue.V1.SessionMetaValue")
	proto.RegisterMapType((map[string]string)(nil), "Ydb.PersQueue.V1.SessionMetaValue.ValueEntry")
	proto.RegisterType((*OffsetsRange)(nil), "Ydb.PersQueue.V1.OffsetsRange")
	proto.RegisterType((*StreamingWriteClientMessage)(nil), "Ydb.PersQueue.V1.StreamingWriteClientMessage")
	proto.RegisterType((*StreamingWriteClientMessage_InitRequest)(nil), "Ydb.PersQueue.V1.StreamingWriteClientMessage.InitRequest")
	proto.RegisterMapType((map[string]string)(nil), "Ydb.PersQueue.V1.StreamingWriteClientMessage.InitRequest.SessionMetaEntry")
	proto.RegisterType((*StreamingWriteClientMessage_WriteRequest)(nil), "Ydb.PersQueue.V1.StreamingWriteClientMessage.WriteRequest")
	proto.RegisterType((*StreamingWriteClientMessage_UpdateTokenRequest)(nil), "Ydb.PersQueue.V1.StreamingWriteClientMessage.UpdateTokenRequest")
	proto.RegisterType((*StreamingWriteServerMessage)(nil), "Ydb.PersQueue.V1.StreamingWriteServerMessage")
	proto.RegisterType((*StreamingWriteServerMessage_InitResponse)(nil), "Ydb.PersQueue.V1.StreamingWriteServerMessage.InitResponse")
	proto.RegisterType((*StreamingWriteServerMessage_BatchWriteResponse)(nil), "Ydb.PersQueue.V1.StreamingWriteServerMessage.BatchWriteResponse")
	proto.RegisterType((*StreamingWriteServerMessage_UpdateTokenResponse)(nil), "Ydb.PersQueue.V1.StreamingWriteServerMessage.UpdateTokenResponse")
	proto.RegisterType((*StreamingWriteServerMessage_WriteStatistics)(nil), "Ydb.PersQueue.V1.StreamingWriteServerMessage.WriteStatistics")
	proto.RegisterType((*Path)(nil), "Ydb.PersQueue.V1.Path")
	proto.RegisterType((*KeyValue)(nil), "Ydb.PersQueue.V1.KeyValue")
	proto.RegisterType((*ReadParams)(nil), "Ydb.PersQueue.V1.ReadParams")
	proto.RegisterType((*CommitCookie)(nil), "Ydb.PersQueue.V1.CommitCookie")
	proto.RegisterType((*CommitOffsetRange)(nil), "Ydb.PersQueue.V1.CommitOffsetRange")
	proto.RegisterType((*StreamingReadClientMessageNew)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew")
	proto.RegisterType((*StreamingReadClientMessageNew_InitRequest)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew.InitRequest")
	proto.RegisterType((*StreamingReadClientMessageNew_InitRequest_State)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew.InitRequest.State")
	proto.RegisterType((*StreamingReadClientMessageNew_InitRequest_State_PartitionStreamState)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew.InitRequest.State.PartitionStreamState")
	proto.RegisterType((*StreamingReadClientMessageNew_ReadRequest)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew.ReadRequest")
	proto.RegisterType((*StreamingReadClientMessageNew_CreatePartitionStreamResponse)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew.CreatePartitionStreamResponse")
	proto.RegisterType((*StreamingReadClientMessageNew_DestroyPartitionStreamResponse)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew.DestroyPartitionStreamResponse")
	proto.RegisterType((*StreamingReadClientMessageNew_StopReadRequest)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew.StopReadRequest")
	proto.RegisterType((*StreamingReadClientMessageNew_ResumeReadRequest)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew.ResumeReadRequest")
	proto.RegisterType((*StreamingReadClientMessageNew_CommitRequest)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew.CommitRequest")
	proto.RegisterType((*StreamingReadClientMessageNew_PartitionStreamStatusRequest)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew.PartitionStreamStatusRequest")
	proto.RegisterType((*StreamingReadClientMessageNew_AddTopicRequest)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew.AddTopicRequest")
	proto.RegisterType((*StreamingReadClientMessageNew_RemoveTopicRequest)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew.RemoveTopicRequest")
	proto.RegisterType((*StreamingReadClientMessageNew_TopicReadSettings)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew.TopicReadSettings")
	proto.RegisterType((*StreamingReadClientMessageNew_PartitionCommit)(nil), "Ydb.PersQueue.V1.StreamingReadClientMessageNew.PartitionCommit")
	proto.RegisterType((*StreamingReadServerMessageNew)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew")
	proto.RegisterType((*StreamingReadServerMessageNew_InitResponse)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.InitResponse")
	proto.RegisterMapType((map[string]int64)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.InitResponse.BlockFormatVersionByTopicEntry")
	proto.RegisterType((*StreamingReadServerMessageNew_CreatePartitionStreamRequest)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.CreatePartitionStreamRequest")
	proto.RegisterType((*StreamingReadServerMessageNew_DestroyPartitionStreamRequest)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.DestroyPartitionStreamRequest")
	proto.RegisterType((*StreamingReadServerMessageNew_CommitResponse)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.CommitResponse")
	proto.RegisterType((*StreamingReadServerMessageNew_CommitResponse_PartitionCommittedOffset)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.CommitResponse.PartitionCommittedOffset")
	proto.RegisterType((*StreamingReadServerMessageNew_BatchReadResponse)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.BatchReadResponse")
	proto.RegisterType((*StreamingReadServerMessageNew_BatchReadResponse_PartitionData)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.BatchReadResponse.PartitionData")
	proto.RegisterType((*StreamingReadServerMessageNew_BatchReadResponse_PartitionData_ReadStatistics)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.BatchReadResponse.PartitionData.ReadStatistics")
	proto.RegisterType((*StreamingReadServerMessageNew_BatchReadResponse_SkipRange)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.BatchReadResponse.SkipRange")
	proto.RegisterType((*StreamingReadServerMessageNew_PartitionStreamStatusResponse)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.PartitionStreamStatusResponse")
	proto.RegisterType((*StreamingReadServerMessageNew_StopReadResponse)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.StopReadResponse")
	proto.RegisterType((*StreamingReadServerMessageNew_ResumeReadResponse)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.ResumeReadResponse")
	proto.RegisterType((*StreamingReadServerMessageNew_AddTopicResponse)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.AddTopicResponse")
	proto.RegisterType((*StreamingReadServerMessageNew_RemoveTopicResponse)(nil), "Ydb.PersQueue.V1.StreamingReadServerMessageNew.RemoveTopicResponse")
	proto.RegisterType((*PartitionStream)(nil), "Ydb.PersQueue.V1.PartitionStream")
	proto.RegisterType((*MigrationStreamingReadClientMessage)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadClientMessage")
	proto.RegisterType((*MigrationStreamingReadClientMessage_TopicReadSettings)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.TopicReadSettings")
	proto.RegisterType((*MigrationStreamingReadClientMessage_InitRequest)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.InitRequest")
	proto.RegisterType((*MigrationStreamingReadClientMessage_InitRequest_State)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.InitRequest.State")
	proto.RegisterType((*MigrationStreamingReadClientMessage_InitRequest_State_PartitionStreamState)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.InitRequest.State.PartitionStreamState")
	proto.RegisterType((*MigrationStreamingReadClientMessage_Read)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Read")
	proto.RegisterType((*MigrationStreamingReadClientMessage_StartRead)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.StartRead")
	proto.RegisterType((*MigrationStreamingReadClientMessage_Released)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Released")
	proto.RegisterType((*MigrationStreamingReadClientMessage_Commit)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Commit")
	proto.RegisterType((*MigrationStreamingReadClientMessage_Status)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Status")
	proto.RegisterType((*MigrationStreamingReadServerMessage)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadServerMessage")
	proto.RegisterType((*MigrationStreamingReadServerMessage_InitResponse)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.InitResponse")
	proto.RegisterMapType((map[string]int64)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.InitResponse.BlockFormatVersionByTopicEntry")
	proto.RegisterType((*MigrationStreamingReadServerMessage_Assigned)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Assigned")
	proto.RegisterType((*MigrationStreamingReadServerMessage_Release)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Release")
	proto.RegisterType((*MigrationStreamingReadServerMessage_Committed)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Committed")
	proto.RegisterType((*MigrationStreamingReadServerMessage_DataBatch)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.DataBatch")
	proto.RegisterType((*MigrationStreamingReadServerMessage_DataBatch_MessageData)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.DataBatch.MessageData")
	proto.RegisterType((*MigrationStreamingReadServerMessage_DataBatch_Batch)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.DataBatch.Batch")
	proto.RegisterType((*MigrationStreamingReadServerMessage_DataBatch_PartitionData)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.DataBatch.PartitionData")
	proto.RegisterType((*MigrationStreamingReadServerMessage_PartitionStatus)(nil), "Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.PartitionStatus")
	proto.RegisterType((*ReadInfoRequest)(nil), "Ydb.PersQueue.V1.ReadInfoRequest")
	proto.RegisterType((*ReadInfoResponse)(nil), "Ydb.PersQueue.V1.ReadInfoResponse")
	proto.RegisterType((*ReadInfoResult)(nil), "Ydb.PersQueue.V1.ReadInfoResult")
	proto.RegisterType((*ReadInfoResult_TopicInfo)(nil), "Ydb.PersQueue.V1.ReadInfoResult.TopicInfo")
	proto.RegisterType((*ReadInfoResult_TopicInfo_PartitionInfo)(nil), "Ydb.PersQueue.V1.ReadInfoResult.TopicInfo.PartitionInfo")
	proto.RegisterType((*DropTopicRequest)(nil), "Ydb.PersQueue.V1.DropTopicRequest")
	proto.RegisterType((*DropTopicResponse)(nil), "Ydb.PersQueue.V1.DropTopicResponse")
	proto.RegisterType((*DropTopicResult)(nil), "Ydb.PersQueue.V1.DropTopicResult")
	proto.RegisterType((*Credentials)(nil), "Ydb.PersQueue.V1.Credentials")
	proto.RegisterType((*Credentials_Iam)(nil), "Ydb.PersQueue.V1.Credentials.Iam")
	proto.RegisterType((*TopicSettings)(nil), "Ydb.PersQueue.V1.TopicSettings")
	proto.RegisterMapType((map[string]string)(nil), "Ydb.PersQueue.V1.TopicSettings.AttributesEntry")
	proto.RegisterType((*TopicSettings_ReadRule)(nil), "Ydb.PersQueue.V1.TopicSettings.ReadRule")
	proto.RegisterType((*TopicSettings_RemoteMirrorRule)(nil), "Ydb.PersQueue.V1.TopicSettings.RemoteMirrorRule")
	proto.RegisterType((*CreateTopicRequest)(nil), "Ydb.PersQueue.V1.CreateTopicRequest")
	proto.RegisterType((*CreateTopicResponse)(nil), "Ydb.PersQueue.V1.CreateTopicResponse")
	proto.RegisterType((*CreateTopicResult)(nil), "Ydb.PersQueue.V1.CreateTopicResult")
	proto.RegisterType((*AlterTopicRequest)(nil), "Ydb.PersQueue.V1.AlterTopicRequest")
	proto.RegisterType((*AlterTopicResponse)(nil), "Ydb.PersQueue.V1.AlterTopicResponse")
	proto.RegisterType((*AlterTopicResult)(nil), "Ydb.PersQueue.V1.AlterTopicResult")
	proto.RegisterType((*AddReadRuleRequest)(nil), "Ydb.PersQueue.V1.AddReadRuleRequest")
	proto.RegisterType((*AddReadRuleResponse)(nil), "Ydb.PersQueue.V1.AddReadRuleResponse")
	proto.RegisterType((*AddReadRuleResult)(nil), "Ydb.PersQueue.V1.AddReadRuleResult")
	proto.RegisterType((*RemoveReadRuleRequest)(nil), "Ydb.PersQueue.V1.RemoveReadRuleRequest")
	proto.RegisterType((*RemoveReadRuleResponse)(nil), "Ydb.PersQueue.V1.RemoveReadRuleResponse")
	proto.RegisterType((*RemoveReadRuleResult)(nil), "Ydb.PersQueue.V1.RemoveReadRuleResult")
	proto.RegisterType((*DescribeTopicRequest)(nil), "Ydb.PersQueue.V1.DescribeTopicRequest")
	proto.RegisterType((*DescribeTopicResponse)(nil), "Ydb.PersQueue.V1.DescribeTopicResponse")
	proto.RegisterType((*DescribeTopicResult)(nil), "Ydb.PersQueue.V1.DescribeTopicResult")
}

func init() { proto.RegisterFile("ydb_persqueue_v1.proto", fileDescriptor_c34299dbed9da419) }

var fileDescriptor_c34299dbed9da419 = []byte{
	// 5491 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7c, 0x4d, 0x6c, 0x1c, 0x47,
	0x76, 0xb0, 0xe6, 0x87, 0xe4, 0xcc, 0x9b, 0x21, 0x67, 0xa6, 0x48, 0x4a, 0xa3, 0xb6, 0x28, 0xc9,
	0xa3, 0xfd, 0x91, 0xb8, 0x36, 0x25, 0xf3, 0x83, 0xd7, 0xfe, 0xbc, 0x2b, 0x3b, 0xfc, 0x93, 0x45,
	0x4b, 0x14, 0xe9, 0x26, 0x2d, 0xad, 0x9d, 0xb5, 0xdb, 0xcd, 0xe9, 0x22, 0xd9, 0xe6, 0x4c, 0xf7,
	0xa8, 0xab, 0x47, 0x24, 0x77, 0x73, 0x0a, 0xf2, 0x03, 0x24, 0x0e, 0x6c, 0x1f, 0xb2, 0x49, 0x76,
	0x93, 0x43, 0xb2, 0x40, 0x0e, 0xb9, 0x04, 0xf0, 0x61, 0xb3, 0x9b, 0x5b, 0xb0, 0x39, 0x04, 0x01,
	0x02, 0x6c, 0x0e, 0x01, 0x72, 0xc8, 0x59, 0x40, 0x12, 0xe4, 0x94, 0x4b, 0x92, 0x4b, 0x82, 0x7a,
	0x55, 0xdd, 0x5d, 0xdd, 0xf3, 0xc3, 0x19, 0x52, 0xb6, 0xe5, 0x20, 0x97, 0xc1, 0xf4, 0xab, 0x57,
	0xaf, 0xaa, 0x5e, 0x55, 0xbd, 0xff, 0x6e, 0x38, 0x7b, 0x64, 0x6d, 0x1b, 0x2d, 0xea, 0xb1, 0x87,
	0x6d, 0xda, 0xa6, 0xc6, 0xa3, 0x17, 0xe6, 0x5a, 0x9e, 0xeb, 0xbb, 0xa4, 0xfc, 0xb6, 0xb5, 0x3d,
	0xb7, 0x41, 0x3d, 0xf6, 0x26, 0x87, 0xcf, 0xdd, 0x7f, 0x41, 0x7b, 0x6e, 0xdf, 0xde, 0xb7, 0x9b,
	0xde, 0xf5, 0x56, 0x7b, 0xbb, 0x61, 0xd7, 0xaf, 0x9b, 0x2d, 0xfb, 0x3a, 0xa2, 0xb2, 0xeb, 0x9c,
	0x84, 0xdb, 0xa2, 0x9e, 0xe9, 0xdb, 0xae, 0x23, 0xfa, 0x6b, 0xd7, 0xfa, 0x62, 0xb3, 0xfa, 0x1e,
	0x6d, 0x52, 0x89, 0x7a, 0xbd, 0x3f, 0xaa, 0x6f, 0xfa, 0x6d, 0x66, 0xd4, 0x5d, 0x8b, 0x32, 0xd9,
	0xe1, 0x46, 0xdf, 0x0e, 0x36, 0x63, 0x6d, 0x6a, 0x34, 0x29, 0x63, 0xe6, 0x6e, 0x30, 0xc4, 0x8b,
	0x3d, 0x7b, 0x98, 0x8e, 0xe3, 0xfa, 0x38, 0x71, 0x76, 0xfd, 0x91, 0xd9, 0xb0, 0x2d, 0x65, 0x11,
	0xb5, 0x4f, 0x52, 0x50, 0xde, 0xa4, 0x8c, 0xd9, 0xae, 0xb3, 0x46, 0x7d, 0xf3, 0xbe, 0xd9, 0x68,
	0x53, 0xb2, 0x04, 0x23, 0x8f, 0xf8, 0x9f, 0x6a, 0xea, 0x72, 0xe6, 0x6a, 0x61, 0xfe, 0xf9, 0xb9,
	0x24, 0xa7, 0xe6, 0x92, 0x5d, 0xe6, 0xf0, 0x77, 0xc5, 0xf1, 0xbd, 0x23, 0x5d, 0xf4, 0xd5, 0x5e,
	0x06, 0x88, 0x80, 0xa4, 0x0c, 0x99, 0x7d, 0x7a, 0x54, 0x4d, 0x5d, 0x4e, 0x5d, 0xcd, 0xeb, 0xfc,
	0x2f, 0x99, 0x0a, 0x06, 0x49, 0x23, 0x4c, 0x3c, 0xbc, 0x92, 0x7e, 0x39, 0x55, 0xdb, 0x80, 0xe2,
	0xfa, 0xce, 0x0e, 0xa3, 0x3e, 0xd3, 0x4d, 0x67, 0x97, 0x92, 0x67, 0xa1, 0xc8, 0x7c, 0xd3, 0xf3,
	0x0d, 0x17, 0xa1, 0x48, 0x24, 0xa3, 0x17, 0x10, 0x26, 0x10, 0xc9, 0x0c, 0x00, 0x75, 0xac, 0x00,
	0x21, 0x8d, 0x08, 0x79, 0xea, 0x58, 0xa2, 0xb9, 0xf6, 0x61, 0x01, 0x9e, 0xd9, 0xf4, 0x3d, 0x6a,
	0x36, 0x6d, 0x67, 0xf7, 0x81, 0x67, 0xfb, 0x74, 0xa9, 0x61, 0x53, 0xc7, 0x5f, 0x13, 0x2c, 0x24,
	0xef, 0x41, 0xd1, 0x76, 0x6c, 0xdf, 0xf0, 0xe8, 0xc3, 0x36, 0x65, 0x62, 0x84, 0xc2, 0xfc, 0xff,
	0xef, 0xb2, 0xee, 0xde, 0x44, 0xe6, 0x56, 0x1d, 0xdb, 0xd7, 0x05, 0x81, 0xdb, 0x67, 0xf4, 0x82,
	0x1d, 0x3d, 0x12, 0x13, 0xc6, 0x0f, 0x78, 0x87, 0x70, 0x80, 0x34, 0x0e, 0xf0, 0xca, 0x70, 0x03,
	0x20, 0x28, 0x1a, 0xa1, 0x78, 0xa0, 0x3c, 0x13, 0x1f, 0xa6, 0xda, 0x2d, 0xcb, 0xf4, 0xa9, 0xe1,
	0xbb, 0xfb, 0xd4, 0x09, 0x47, 0xca, 0xe0, 0x48, 0xbf, 0x34, 0xdc, 0x48, 0x6f, 0x21, 0xa5, 0x2d,
	0x4e, 0x28, 0x1a, 0x8f, 0xb4, 0x3b, 0xa0, 0xda, 0xcf, 0xb3, 0x50, 0x50, 0xd6, 0xcd, 0x37, 0xd5,
	0x77, 0x5b, 0x76, 0x5d, 0x6e, 0xb4, 0x78, 0x20, 0x57, 0xa1, 0x2c, 0x0f, 0xab, 0xb1, 0xeb, 0xb9,
	0xed, 0x96, 0x61, 0x5b, 0x72, 0xd7, 0x27, 0x24, 0xfc, 0x75, 0x0e, 0x5e, 0xb5, 0x48, 0x13, 0x8a,
	0x4c, 0x1c, 0x2d, 0xa3, 0x49, 0x7d, 0xb3, 0x9a, 0xc1, 0x03, 0xf8, 0xc6, 0x89, 0x37, 0x42, 0x3d,
	0xa8, 0xe2, 0x74, 0x16, 0x58, 0x04, 0x21, 0xcf, 0x01, 0x69, 0x99, 0x9e, 0x6f, 0xf3, 0x0b, 0x11,
	0x4d, 0x2d, 0x8b, 0xc7, 0xa7, 0x1c, 0xb6, 0x04, 0x93, 0x7b, 0x03, 0x6a, 0x4d, 0xf3, 0xd0, 0x60,
	0xed, 0x56, 0xcb, 0xf5, 0x7c, 0x6a, 0x19, 0xdb, 0x0d, 0xb7, 0xbe, 0x6f, 0xec, 0xb8, 0x5e, 0xd3,
	0xf4, 0x8d, 0x47, 0xd4, 0xe3, 0x74, 0xab, 0x23, 0xd8, 0xfb, 0x62, 0xd3, 0x3c, 0xdc, 0x0c, 0x10,
	0x17, 0x39, 0xde, 0x2d, 0x44, 0xbb, 0x2f, 0xb0, 0xf8, 0x81, 0x0d, 0x16, 0x6a, 0x5b, 0x55, 0x0b,
	0x99, 0x91, 0x97, 0x90, 0x55, 0x8b, 0x3c, 0x0f, 0xa4, 0xee, 0x3a, 0x0e, 0xad, 0xe3, 0xcc, 0x4c,
	0xdf, 0xa7, 0xcd, 0x96, 0x5f, 0xa5, 0x48, 0xba, 0x12, 0xb5, 0x2c, 0x88, 0x06, 0xf2, 0x75, 0x28,
	0x29, 0xe8, 0xc8, 0xb9, 0x9d, 0xcb, 0xa9, 0xab, 0x45, 0x7d, 0x22, 0x02, 0xe3, 0x82, 0xbf, 0x01,
	0x95, 0x96, 0x47, 0x77, 0xa8, 0xe7, 0x51, 0xcb, 0xa8, 0x37, 0xda, 0xcc, 0xa7, 0x5e, 0x75, 0x17,
	0x47, 0x2f, 0x87, 0x0d, 0x4b, 0x02, 0xce, 0xa9, 0xda, 0x56, 0x83, 0x1a, 0xbe, 0xdd, 0xa4, 0x6e,
	0xdb, 0x37, 0x9a, 0xac, 0xfa, 0x37, 0xe2, 0xee, 0x8d, 0x73, 0xf8, 0x96, 0x00, 0xaf, 0x31, 0xed,
	0xd5, 0x98, 0x0c, 0x19, 0xfa, 0xc2, 0x6b, 0x7f, 0x9e, 0x81, 0xa2, 0x7a, 0xb8, 0xc9, 0x35, 0x28,
	0x33, 0xfe, 0xd7, 0xa9, 0x53, 0xc3, 0x69, 0x37, 0xb7, 0xa9, 0xc7, 0xaa, 0xe9, 0xcb, 0x99, 0xab,
	0x19, 0xbd, 0x14, 0xc0, 0xef, 0x09, 0x30, 0xa9, 0xc1, 0x78, 0xdd, 0xa3, 0x26, 0xdf, 0x0e, 0x13,
	0xa7, 0x98, 0x41, 0xbc, 0x82, 0x04, 0x2e, 0xf8, 0x6b, 0x8c, 0x5c, 0xe0, 0xcc, 0x76, 0x7c, 0x89,
	0x90, 0x45, 0x84, 0x1c, 0x87, 0x60, 0xeb, 0x15, 0x18, 0x0f, 0x4e, 0x27, 0xb3, 0xbf, 0x47, 0x59,
	0x75, 0x04, 0x11, 0x8a, 0x12, 0xb8, 0xc9, 0x61, 0xe4, 0xab, 0x30, 0x81, 0xbb, 0xcd, 0xa4, 0x8c,
	0x61, 0xd5, 0x51, 0xc4, 0x1a, 0x17, 0x50, 0x29, 0xaf, 0xc8, 0x1c, 0x4c, 0x4a, 0x34, 0x7e, 0x7a,
	0xc2, 0xb9, 0x8f, 0x21, 0x6e, 0x45, 0x34, 0x6d, 0x98, 0x9e, 0x1f, 0xcc, 0x7e, 0x1e, 0xa6, 0x25,
	0x7e, 0x30, 0x85, 0xba, 0xdb, 0x76, 0x7c, 0x56, 0xcd, 0x61, 0x0f, 0x49, 0x4c, 0x1e, 0xec, 0x25,
	0x6c, 0x22, 0xaf, 0xc0, 0x79, 0xd9, 0xa7, 0xed, 0xd4, 0xdd, 0x66, 0xcb, 0xa3, 0x8c, 0x51, 0x4b,
	0xce, 0x3d, 0x8f, 0xfd, 0xce, 0x09, 0x84, 0xb7, 0x94, 0xf6, 0xe4, 0x32, 0xf6, 0xa8, 0x69, 0xf1,
	0xa9, 0xc1, 0xe5, 0xcc, 0xd5, 0x62, 0xb0, 0x8c, 0xdb, 0x02, 0x48, 0x2e, 0x41, 0x41, 0xa2, 0x59,
	0xa6, 0x6f, 0x56, 0x0b, 0x88, 0x03, 0x02, 0xb4, 0x6c, 0xfa, 0xa6, 0x36, 0x0b, 0xa4, 0x53, 0x46,
	0x88, 0xdb, 0xbf, 0x4f, 0x9d, 0xe8, 0xf6, 0xef, 0x53, 0x67, 0xb1, 0x0c, 0x13, 0x75, 0xbc, 0x9f,
	0xc1, 0x1a, 0x6b, 0xff, 0xd0, 0x21, 0x8e, 0x37, 0xa9, 0xf7, 0x88, 0x7a, 0x81, 0x38, 0x36, 0x61,
	0x5c, 0x8a, 0x63, 0xd6, 0x72, 0x1d, 0x46, 0xa5, 0x10, 0x3b, 0x56, 0x5c, 0xc6, 0xa8, 0x48, 0x31,
	0x20, 0x28, 0x70, 0x71, 0x69, 0x2b, 0xcf, 0x5c, 0x5c, 0x6e, 0x9b, 0x7e, 0x7d, 0xcf, 0x08, 0xe4,
	0xb2, 0x1c, 0x29, 0x3b, 0x98, 0xb8, 0x8c, 0x8f, 0xb4, 0xc8, 0x29, 0xc9, 0x03, 0x1c, 0x8e, 0x47,
	0xb6, 0x3b, 0xa0, 0xe4, 0x00, 0xa6, 0x13, 0x42, 0x5a, 0x0e, 0x3b, 0x82, 0xc3, 0x2e, 0x0c, 0x37,
	0x6c, 0x6c, 0x07, 0xc2, 0x71, 0x27, 0xdb, 0x9d, 0x60, 0xf2, 0x02, 0x8c, 0x0a, 0x2b, 0x03, 0xb7,
	0x66, 0x62, 0xfe, 0x3c, 0x8e, 0xb4, 0x89, 0xa0, 0x55, 0x8b, 0xc9, 0x7f, 0x4b, 0xae, 0x45, 0x75,
	0x89, 0x48, 0xae, 0xc3, 0x28, 0xda, 0x19, 0xe2, 0xe6, 0x15, 0xe6, 0xcf, 0x61, 0x97, 0x55, 0x0e,
	0x12, 0xbf, 0x72, 0x1a, 0xba, 0x44, 0xd3, 0xfe, 0x2c, 0x03, 0x45, 0x95, 0xe7, 0xe4, 0x06, 0x4c,
	0x35, 0x4c, 0xe6, 0x1b, 0x89, 0xab, 0x2c, 0xf5, 0x37, 0xe1, 0x6d, 0x9b, 0xb1, 0xdb, 0x9c, 0x90,
	0x8a, 0xe9, 0xa4, 0x54, 0x0c, 0xb5, 0x4b, 0x46, 0xd5, 0x2e, 0x55, 0x18, 0x0b, 0x24, 0x59, 0x16,
	0xe1, 0xc1, 0x23, 0x37, 0x1c, 0x22, 0xf1, 0x6e, 0x5b, 0x52, 0x34, 0x17, 0x42, 0xd8, 0xaa, 0xc5,
	0xe7, 0xd8, 0x55, 0x8a, 0x8f, 0x8a, 0x39, 0x6e, 0x77, 0x4a, 0xee, 0x45, 0x28, 0x47, 0x1a, 0x80,
	0xdb, 0x6c, 0x75, 0x71, 0x89, 0x26, 0x24, 0x87, 0x62, 0xdb, 0xc7, 0x39, 0x5a, 0xd7, 0x4b, 0x61,
	0x07, 0x7c, 0x66, 0xe4, 0x05, 0x98, 0xe6, 0x9a, 0x64, 0xa7, 0xd1, 0x66, 0x7b, 0xc6, 0x81, 0xed,
	0x58, 0xee, 0x01, 0xde, 0xdf, 0xea, 0x98, 0x18, 0xb6, 0x69, 0x1e, 0xde, 0xe2, 0x6d, 0x0f, 0xb0,
	0x89, 0x5f, 0x5d, 0xf2, 0x15, 0x98, 0xe0, 0x5d, 0xc4, 0x64, 0x11, 0x37, 0x87, 0xb8, 0xc5, 0xa6,
	0x79, 0x88, 0xfa, 0x05, 0xb1, 0xba, 0x28, 0x82, 0x7c, 0x37, 0x45, 0xa0, 0x7d, 0x94, 0x06, 0xd2,
	0x79, 0x6c, 0xbb, 0x0a, 0xde, 0x54, 0x77, 0xc1, 0x5b, 0x85, 0xb1, 0x40, 0x14, 0x0a, 0xd1, 0x1c,
	0x3c, 0xf2, 0x49, 0x98, 0x0d, 0x8f, 0x9a, 0xd6, 0x11, 0xde, 0x2e, 0x9f, 0x3a, 0x28, 0x94, 0x73,
	0xfa, 0x84, 0x04, 0x3f, 0x10, 0xd0, 0x8e, 0xfd, 0xc9, 0x76, 0xee, 0xcf, 0x1e, 0x94, 0xc5, 0x0d,
	0xe5, 0xa7, 0xd2, 0x66, 0xbe, 0x5d, 0x67, 0xf2, 0xb2, 0xdc, 0x1c, 0xee, 0xb2, 0x08, 0x50, 0x48,
	0x44, 0x2f, 0x1d, 0xc4, 0x01, 0xda, 0x34, 0x4c, 0x76, 0xb9, 0x50, 0xda, 0xef, 0xa5, 0xa1, 0x94,
	0xe8, 0xcb, 0xa5, 0x3c, 0xf7, 0x27, 0x6c, 0xe6, 0x1b, 0x56, 0x5b, 0xf8, 0x04, 0x5c, 0xb1, 0x88,
	0x73, 0x5d, 0x91, 0x4d, 0xcb, 0xb2, 0x65, 0x8d, 0x91, 0x65, 0xb8, 0x84, 0xbe, 0x87, 0x65, 0xd8,
	0x8e, 0x11, 0xad, 0x58, 0xed, 0x2b, 0x4c, 0xd6, 0x67, 0x04, 0xda, 0xaa, 0xb3, 0x11, 0x20, 0x29,
	0x54, 0xde, 0x80, 0x9a, 0xbf, 0xe7, 0xb9, 0xbe, 0xdf, 0xa0, 0x96, 0xe1, 0xf6, 0x22, 0x94, 0x11,
	0xe6, 0x47, 0x88, 0xb9, 0xde, 0x95, 0xd6, 0x22, 0x5c, 0x8c, 0xd1, 0xc2, 0x9b, 0x14, 0xa3, 0x23,
	0xf6, 0x42, 0x53, 0xe8, 0x6c, 0x71, 0x9c, 0x88, 0x06, 0x97, 0xeb, 0x0c, 0x59, 0x1c, 0xca, 0x75,
	0x0d, 0xb2, 0x1b, 0xa6, 0xbf, 0x47, 0x08, 0x64, 0x5b, 0xa6, 0xbf, 0x27, 0xd5, 0x00, 0xfe, 0xaf,
	0xcd, 0x43, 0xee, 0x0e, 0x3d, 0x12, 0xfe, 0xc5, 0x80, 0xb6, 0x41, 0x6d, 0x17, 0x40, 0xa7, 0xa6,
	0xb5, 0x61, 0x7a, 0x66, 0x93, 0x91, 0x17, 0xe1, 0x1c, 0xbf, 0x01, 0xfc, 0x04, 0x05, 0x23, 0x32,
	0xa1, 0x2e, 0x91, 0xd2, 0xb8, 0x3e, 0xd5, 0x34, 0x0f, 0x39, 0xbe, 0xdc, 0x72, 0x86, 0xfa, 0x92,
	0x1b, 0x08, 0x61, 0x37, 0xbc, 0x37, 0x69, 0x44, 0x2e, 0x48, 0x64, 0x7e, 0x6d, 0x6a, 0xf7, 0xa1,
	0xb8, 0xe4, 0x36, 0x9b, 0xb6, 0xbf, 0xe4, 0xba, 0xfb, 0x36, 0x25, 0xcf, 0x40, 0xde, 0x64, 0xcc,
	0xde, 0xc5, 0x53, 0xc9, 0x89, 0x67, 0xf5, 0x9c, 0x00, 0xac, 0x5a, 0xfc, 0x8e, 0x44, 0xac, 0xaf,
	0x63, 0x07, 0xa4, 0x99, 0xd5, 0x4b, 0x21, 0x5c, 0xd0, 0xa9, 0x79, 0x50, 0x11, 0x74, 0x85, 0x7d,
	0x20, 0xdc, 0x99, 0xbe, 0xc4, 0x93, 0xbe, 0x8e, 0x20, 0xdc, 0xc7, 0xd7, 0xc9, 0x20, 0x82, 0xe2,
	0xeb, 0xfc, 0xfa, 0x0c, 0xcc, 0x84, 0x17, 0x81, 0xaf, 0x30, 0x66, 0x1c, 0xdf, 0xa3, 0x07, 0xe4,
	0xfd, 0xae, 0xde, 0xce, 0xb7, 0xfa, 0xdc, 0xa7, 0x6e, 0x64, 0xfa, 0xf9, 0x3b, 0xef, 0x43, 0x11,
	0xf9, 0x1d, 0x77, 0x77, 0x86, 0x1e, 0x81, 0x03, 0x95, 0x11, 0xbc, 0xe8, 0x91, 0xfc, 0x7e, 0x0a,
	0x2e, 0x0b, 0x13, 0x4f, 0xb9, 0x07, 0x0c, 0xa9, 0x25, 0xcd, 0x86, 0xb5, 0x61, 0x87, 0x5d, 0x42,
	0xba, 0xe1, 0xb5, 0x11, 0xc8, 0x8a, 0x86, 0x9d, 0xa9, 0xf7, 0x43, 0x20, 0x3b, 0x30, 0x51, 0xc7,
	0x4d, 0x0f, 0x97, 0x9f, 0x3d, 0x56, 0x60, 0x75, 0x9f, 0x07, 0x52, 0x89, 0x18, 0x30, 0x5e, 0x57,
	0x01, 0xe4, 0x47, 0x29, 0x78, 0xd6, 0xa2, 0xcc, 0xf7, 0xdc, 0xa3, 0x3e, 0x3c, 0x10, 0xc2, 0xf2,
	0xde, 0xb0, 0x63, 0x2f, 0x0b, 0xc2, 0xbd, 0x99, 0x70, 0xd1, 0xea, 0x8b, 0x41, 0x9a, 0x50, 0x61,
	0xbe, 0xdb, 0x32, 0x62, 0xe7, 0x60, 0x14, 0x27, 0xf3, 0xda, 0xb0, 0x93, 0xd9, 0xf4, 0xdd, 0x56,
	0xfc, 0x2c, 0x94, 0x58, 0x1c, 0x44, 0x18, 0x4c, 0x7a, 0x94, 0xb5, 0x9b, 0x34, 0x3e, 0xe0, 0xd8,
	0xb1, 0x76, 0x55, 0x8f, 0x83, 0xc7, 0x49, 0xc5, 0x87, 0xac, 0x78, 0x49, 0x20, 0xf9, 0xdd, 0x14,
	0x5c, 0xea, 0xe0, 0xbc, 0x8c, 0xe6, 0x04, 0x33, 0xc8, 0xe1, 0x0c, 0xee, 0x0e, 0x3b, 0x83, 0x04,
	0x5b, 0x85, 0x7d, 0x16, 0x4d, 0xe6, 0x42, 0xab, 0x4f, 0x3b, 0xe7, 0xbd, 0x69, 0x59, 0x52, 0xa8,
	0x07, 0x13, 0xc9, 0x9f, 0x8c, 0xf7, 0x0b, 0x96, 0x85, 0x82, 0x5f, 0xe1, 0xbd, 0x19, 0x07, 0x91,
	0x47, 0x30, 0xe5, 0xd1, 0xa6, 0xfb, 0x88, 0x26, 0x46, 0x04, 0x1c, 0x71, 0x71, 0x78, 0xe6, 0x73,
	0x5a, 0x89, 0x41, 0x89, 0xd7, 0x01, 0x8d, 0xdc, 0x8d, 0x29, 0xc5, 0xdd, 0xd0, 0x7e, 0x96, 0x8f,
	0x87, 0x24, 0x18, 0x4c, 0xe1, 0xb4, 0x98, 0x54, 0x01, 0xd4, 0xf7, 0x6d, 0x67, 0x97, 0xc9, 0xd8,
	0xd6, 0xd0, 0x47, 0x43, 0xce, 0xc0, 0xb4, 0x36, 0x25, 0x21, 0x9d, 0x08, 0xf2, 0x2a, 0x8c, 0x3c,
	0x07, 0x04, 0x47, 0x73, 0x9d, 0xc6, 0x91, 0xe1, 0x7a, 0xf6, 0xae, 0xed, 0x98, 0x0d, 0x14, 0x83,
	0x39, 0xbd, 0xcc, 0x5b, 0xd6, 0x9d, 0xc6, 0xd1, 0xba, 0x84, 0x13, 0x0d, 0x72, 0x75, 0xd7, 0xe1,
	0xa7, 0xcb, 0x93, 0xa6, 0x6d, 0xf8, 0x4c, 0x9e, 0x87, 0x49, 0xae, 0xbe, 0x1a, 0xe6, 0x6e, 0x17,
	0xf5, 0x5c, 0x6e, 0x9a, 0x87, 0x77, 0xcd, 0x5d, 0x45, 0xb1, 0x7f, 0x13, 0xaa, 0x42, 0x7f, 0xec,
	0x78, 0x6e, 0x33, 0x30, 0xbf, 0xa4, 0xe3, 0x2b, 0xcc, 0xdf, 0x29, 0x6c, 0xbf, 0xe5, 0xb9, 0x4d,
	0x69, 0x86, 0xa1, 0x13, 0x3c, 0x58, 0x6c, 0x63, 0x74, 0xa0, 0xd8, 0x86, 0x9c, 0x32, 0xb7, 0x3e,
	0x8d, 0xba, 0x59, 0xdf, 0x13, 0x7e, 0x35, 0x1e, 0x07, 0x31, 0x65, 0x6e, 0x81, 0x2e, 0xf1, 0x06,
	0xb4, 0x59, 0x9f, 0x6c, 0x28, 0xe4, 0x01, 0x8c, 0xf0, 0x1b, 0x48, 0x31, 0x00, 0x72, 0x82, 0xfd,
	0x8d, 0x05, 0x8f, 0x38, 0x21, 0x5d, 0xd0, 0x1b, 0x3c, 0x1a, 0xf2, 0xd3, 0x2c, 0x8c, 0x60, 0x4f,
	0xf2, 0x71, 0x0a, 0xaa, 0x49, 0xf9, 0xc0, 0x50, 0x40, 0xd0, 0xe0, 0xfc, 0xdd, 0x3f, 0xf5, 0xfc,
	0xba, 0x89, 0x0a, 0xaa, 0x9f, 0x4d, 0x08, 0x08, 0x86, 0x60, 0xa6, 0xfd, 0x28, 0x03, 0x53, 0xdd,
	0x3a, 0x90, 0xbb, 0xaa, 0x55, 0x23, 0xa6, 0x2a, 0x0d, 0x83, 0x67, 0x3b, 0xa7, 0x98, 0x14, 0xfa,
	0xa5, 0xc4, 0x68, 0xe4, 0x12, 0x14, 0xc4, 0xf9, 0x57, 0x03, 0xb2, 0x80, 0x07, 0x5f, 0x18, 0x31,
	0x4b, 0x30, 0x2e, 0xda, 0x0c, 0x8f, 0x1b, 0x45, 0x4c, 0x46, 0xfa, 0x2e, 0x76, 0x8e, 0xa5, 0x86,
	0x82, 0xf5, 0xa2, 0x1b, 0x19, 0x52, 0x8c, 0xb4, 0x43, 0xaf, 0x36, 0x8b, 0x5e, 0xed, 0xbb, 0x9f,
	0x0d, 0x33, 0xa5, 0x77, 0x1c, 0x78, 0xc6, 0xb5, 0xef, 0xc0, 0xa8, 0x80, 0x90, 0xb3, 0x40, 0x36,
	0xb7, 0x16, 0xb6, 0xde, 0xda, 0x34, 0xde, 0xba, 0xb7, 0xb9, 0xb1, 0xb2, 0xb4, 0x7a, 0x6b, 0x75,
	0x65, 0xb9, 0x7c, 0x86, 0x14, 0x21, 0xb7, 0xa4, 0xaf, 0x2c, 0x6c, 0xad, 0xde, 0x7b, 0xbd, 0x9c,
	0x22, 0x13, 0x00, 0xcb, 0x2b, 0x9b, 0x5b, 0xfa, 0xfa, 0xdb, 0xfc, 0x39, 0x4d, 0x0a, 0x30, 0xa6,
	0xaf, 0x2c, 0x2c, 0xf3, 0x87, 0x0c, 0x7f, 0xd8, 0xdc, 0x5a, 0xdf, 0xd8, 0x58, 0x59, 0x2e, 0x67,
	0xb5, 0x55, 0x28, 0xa8, 0xfa, 0xe5, 0x15, 0x38, 0x2f, 0x65, 0x69, 0x67, 0xa8, 0x47, 0x7a, 0x1b,
	0xe7, 0x24, 0x42, 0x32, 0xd4, 0xa3, 0xfd, 0x3c, 0x05, 0x33, 0x7d, 0x0d, 0x19, 0xf4, 0x62, 0x92,
	0xca, 0x4b, 0x5a, 0xa4, 0xdc, 0x8b, 0x89, 0xf7, 0x5a, 0xb5, 0x8e, 0xdf, 0xd3, 0x2b, 0x20, 0x2d,
	0x14, 0xd5, 0x36, 0xcd, 0xe8, 0xc5, 0xba, 0x62, 0x02, 0x73, 0xc9, 0xf8, 0x88, 0x7a, 0xf6, 0xce,
	0x91, 0xa1, 0x12, 0xcb, 0x0a, 0xc9, 0x28, 0x5a, 0xf4, 0x90, 0xa4, 0xb6, 0x01, 0x17, 0xfb, 0x5b,
	0x22, 0xc3, 0xae, 0x42, 0x5b, 0x82, 0x52, 0xc2, 0x9c, 0x20, 0x37, 0x60, 0xaa, 0x0b, 0x89, 0xc0,
	0xf1, 0x25, 0x1d, 0x34, 0x98, 0xf6, 0x51, 0x0a, 0x2a, 0x1d, 0x36, 0xc2, 0xf0, 0x74, 0xb8, 0xb5,
	0xaf, 0x70, 0x21, 0x70, 0xa4, 0x0b, 0x11, 0x4f, 0x31, 0x62, 0x27, 0x0d, 0x1b, 0xe1, 0x6a, 0x04,
	0x01, 0xce, 0x71, 0x01, 0x15, 0x8e, 0x06, 0xd3, 0x3e, 0x80, 0xf1, 0x98, 0xb9, 0x48, 0xde, 0x86,
	0x31, 0xc1, 0xf7, 0x40, 0xd2, 0xbc, 0x76, 0x62, 0x13, 0x44, 0x12, 0x0e, 0xe8, 0x69, 0xf7, 0xe0,
	0x42, 0x3f, 0xf3, 0x64, 0xe8, 0x2d, 0xf9, 0xb5, 0x14, 0x94, 0x12, 0x66, 0x06, 0x79, 0x08, 0x93,
	0x81, 0x31, 0x11, 0x57, 0xda, 0xa9, 0x27, 0xa3, 0xb4, 0x2b, 0x7e, 0x12, 0xa4, 0xcd, 0x02, 0xd1,
	0x7b, 0x18, 0x19, 0xc9, 0x8c, 0x86, 0xf6, 0x49, 0x0a, 0x2a, 0x1d, 0x44, 0x7b, 0x64, 0x3f, 0x62,
	0xec, 0x08, 0x92, 0x0c, 0xc1, 0x5e, 0x57, 0x92, 0x59, 0x86, 0xfe, 0x2a, 0x3c, 0xd3, 0x5b, 0x85,
	0x6b, 0xdf, 0x87, 0x52, 0x62, 0xcb, 0x86, 0xbe, 0xe2, 0x2f, 0xc7, 0x63, 0x3a, 0xc7, 0xcb, 0xe3,
	0x00, 0xbd, 0x4b, 0x90, 0xf7, 0x3f, 0x9f, 0x4d, 0xf8, 0xa1, 0xb1, 0x78, 0x0c, 0xf7, 0x43, 0xeb,
	0xdd, 0xc3, 0xbc, 0xdf, 0x3e, 0x66, 0x77, 0x93, 0x74, 0xfa, 0x07, 0x7a, 0x19, 0x4c, 0x8a, 0x40,
	0xaf, 0xf4, 0x0b, 0x62, 0x71, 0xde, 0x85, 0x61, 0x87, 0xc2, 0x90, 0x99, 0xb8, 0xf3, 0xe1, 0x78,
	0x95, 0xed, 0x24, 0x10, 0x1d, 0x83, 0xde, 0xde, 0xa9, 0xb0, 0x8e, 0x47, 0x06, 0x72, 0x0c, 0x3a,
	0x66, 0xd0, 0x43, 0xa6, 0x87, 0x8e, 0x41, 0xbd, 0x4f, 0x3b, 0x7a, 0xcd, 0x7d, 0x5c, 0x46, 0xd5,
	0x49, 0x5b, 0x1b, 0x76, 0x62, 0xbd, 0xe4, 0x74, 0x30, 0xb3, 0x19, 0xab, 0x1f, 0x02, 0xb1, 0xa1,
	0x14, 0x7a, 0xcd, 0x72, 0x8f, 0x84, 0xf3, 0xf6, 0xea, 0xd0, 0x1c, 0x92, 0x72, 0x30, 0xdc, 0xa0,
	0x89, 0x7a, 0x0c, 0x82, 0x5c, 0xe8, 0xed, 0xb6, 0xc9, 0xc1, 0x73, 0x27, 0xe3, 0x42, 0x0f, 0xc1,
	0x18, 0xc5, 0x0e, 0x5a, 0xfd, 0x10, 0x48, 0x0b, 0x88, 0xea, 0x35, 0xcb, 0xb9, 0xe4, 0x8f, 0x4d,
	0x4a, 0x74, 0x9d, 0x4b, 0xa4, 0xe7, 0xc2, 0xe1, 0xcb, 0x2c, 0x01, 0x13, 0xce, 0x9b, 0xea, 0x38,
	0xcb, 0x31, 0x07, 0x73, 0xde, 0x3a, 0xc6, 0x54, 0xb5, 0x62, 0x94, 0x0a, 0xf1, 0x3a, 0xa0, 0x7c,
	0xa5, 0xaa, 0x8f, 0x2a, 0x47, 0x2d, 0x9c, 0x6c, 0xa5, 0x91, 0xf6, 0x88, 0x56, 0x6a, 0x26, 0x60,
	0xe4, 0x08, 0xa6, 0x13, 0x6e, 0xaa, 0x1c, 0xb4, 0x88, 0x83, 0x2e, 0x0d, 0xbf, 0x54, 0x45, 0x59,
	0x44, 0xe9, 0x17, 0xaf, 0x13, 0xfc, 0xb9, 0xa4, 0x5f, 0xfe, 0x36, 0x9d, 0x48, 0xbf, 0xc4, 0xfd,
	0xaa, 0x54, 0xd2, 0xaf, 0xfa, 0xa3, 0x14, 0xcc, 0x74, 0x73, 0xf2, 0x8c, 0xed, 0x23, 0xc1, 0x20,
	0x39, 0xf0, 0x2f, 0x9f, 0x46, 0x1c, 0xcf, 0x75, 0xba, 0x87, 0x8b, 0x47, 0xc8, 0x1b, 0x91, 0x8d,
	0x3f, 0xbf, 0xdd, 0xab, 0x7d, 0x48, 0x2f, 0x52, 0xbb, 0x0b, 0x17, 0xfb, 0x8f, 0x75, 0x5c, 0xd4,
	0x39, 0xa3, 0x66, 0xa4, 0x7f, 0x92, 0x82, 0x0b, 0xfd, 0x24, 0xed, 0x13, 0x76, 0x97, 0xae, 0x41,
	0x59, 0xc8, 0x28, 0xee, 0x79, 0xc7, 0xec, 0xeb, 0x52, 0x08, 0xef, 0x19, 0xfd, 0x55, 0x2b, 0x5d,
	0xb4, 0x1f, 0xa4, 0x60, 0xa6, 0xaf, 0x24, 0x1e, 0xda, 0x26, 0xd0, 0x20, 0xb7, 0xeb, 0x99, 0x75,
	0xba, 0xd3, 0x0e, 0x02, 0x18, 0xe1, 0x73, 0xd7, 0x79, 0x67, 0xba, 0xce, 0x5b, 0xfb, 0x71, 0x1a,
	0x26, 0xe2, 0x92, 0x99, 0xfc, 0x41, 0x0a, 0xa2, 0x38, 0x16, 0x33, 0x92, 0x94, 0x02, 0xc3, 0xf5,
	0xc1, 0xe9, 0x14, 0x40, 0xd2, 0x8e, 0x0d, 0xa7, 0xa4, 0x6b, 0xd1, 0xe0, 0x89, 0x26, 0xa6, 0xb5,
	0xa1, 0xda, 0xab, 0xdf, 0xd0, 0x1c, 0x1c, 0x7c, 0x77, 0xb5, 0x7f, 0x2c, 0x42, 0xa5, 0xc3, 0xc6,
	0x20, 0x1f, 0x00, 0xb0, 0x7d, 0xbb, 0x25, 0x5c, 0x65, 0xc9, 0x95, 0x3b, 0xa7, 0x36, 0x5d, 0xe6,
	0x36, 0xf7, 0xed, 0x96, 0x30, 0xe3, 0xf2, 0x2c, 0xf8, 0x4b, 0x5c, 0x80, 0x88, 0x2d, 0x52, 0x04,
	0xac, 0x9f, 0x7e, 0xac, 0x28, 0x09, 0x65, 0xfa, 0xa6, 0xae, 0x0c, 0xa1, 0xfd, 0x73, 0x1e, 0xc6,
	0x63, 0xad, 0x43, 0xf3, 0xb7, 0x77, 0x26, 0xb2, 0x5b, 0x3a, 0x33, 0x33, 0x60, 0x1d, 0x49, 0xb6,
	0xb3, 0x8e, 0xa4, 0x26, 0xca, 0xb8, 0xd4, 0x88, 0x1a, 0xe2, 0x1c, 0x28, 0x81, 0xb4, 0x59, 0xa8,
	0x24, 0x6b, 0x9d, 0x44, 0xad, 0x48, 0x5e, 0x2f, 0xc5, 0x8b, 0x9d, 0x18, 0x79, 0x09, 0xaa, 0x49,
	0x5c, 0xc3, 0x76, 0x2c, 0x7a, 0x48, 0x45, 0xc9, 0x08, 0xd1, 0xa7, 0xe3, 0x5d, 0x56, 0x45, 0x23,
	0x17, 0x65, 0x76, 0x4b, 0x14, 0x89, 0xe4, 0x75, 0xfe, 0x97, 0x8b, 0x05, 0xbb, 0x15, 0x76, 0xce,
	0x63, 0xe7, 0xbc, 0xdd, 0x0a, 0x3a, 0x6c, 0xc1, 0x54, 0x58, 0xe3, 0xa2, 0xd6, 0x57, 0x01, 0xee,
	0x6f, 0xed, 0xf8, 0x02, 0x3f, 0x9d, 0x04, 0xe5, 0x30, 0x4a, 0xf9, 0xd4, 0x6b, 0x70, 0xa1, 0x1b,
	0xd5, 0x70, 0x1a, 0x05, 0x9c, 0xc6, 0xf9, 0xce, 0x9e, 0xc1, 0xb4, 0x3a, 0x4a, 0x6f, 0x8a, 0x03,
	0x95, 0xde, 0x8c, 0x0f, 0x51, 0x7a, 0x33, 0x31, 0x74, 0xe9, 0x4d, 0xe9, 0x84, 0xa5, 0x37, 0xe5,
	0x61, 0x4b, 0x6f, 0x2a, 0x03, 0x94, 0xde, 0x90, 0x64, 0xe9, 0x0d, 0xe7, 0x59, 0x2c, 0x20, 0x50,
	0x9d, 0x17, 0x51, 0x16, 0x35, 0x1e, 0x40, 0x7e, 0x33, 0x05, 0x25, 0xe1, 0x39, 0x47, 0x69, 0x73,
	0x0b, 0xd5, 0xd3, 0x7b, 0x4f, 0xf8, 0x2e, 0x63, 0x92, 0x4e, 0xc9, 0xab, 0x4f, 0x78, 0xb1, 0x67,
	0xed, 0xb7, 0xd2, 0x30, 0x11, 0x47, 0x21, 0x57, 0xa1, 0xbc, 0xdd, 0x70, 0xb7, 0x99, 0x70, 0x70,
	0x51, 0xb7, 0xcb, 0xcb, 0x3d, 0x81, 0x70, 0xee, 0xd8, 0xa2, 0x62, 0x27, 0x5f, 0x83, 0x92, 0x82,
	0x69, 0xd9, 0x6c, 0x5f, 0x0a, 0xce, 0xf1, 0x10, 0x71, 0xd9, 0x66, 0xfb, 0x88, 0x77, 0xe4, 0x53,
	0x89, 0xc7, 0xf9, 0x2b, 0xd5, 0xd0, 0x38, 0x82, 0x39, 0x1e, 0xe7, 0x2f, 0x8e, 0x1c, 0xe1, 0x89,
	0x91, 0xb3, 0x72, 0xe4, 0x00, 0x31, 0x1a, 0x39, 0xc2, 0xc4, 0x91, 0x47, 0x12, 0x14, 0x71, 0x64,
	0x0c, 0xf4, 0xb7, 0xcc, 0xfa, 0x7e, 0x2c, 0x3a, 0x2f, 0xe2, 0xe4, 0x65, 0xd1, 0x12, 0x45, 0xe7,
	0xb5, 0xef, 0x41, 0x3e, 0x14, 0xba, 0x43, 0x8b, 0xb9, 0x9b, 0x31, 0x2d, 0x20, 0x52, 0xaa, 0xc7,
	0xf9, 0xe7, 0x91, 0x60, 0xd7, 0x7e, 0x91, 0x82, 0x99, 0xbe, 0xde, 0xc9, 0x67, 0xa8, 0xd7, 0x8e,
	0xb1, 0x5a, 0xc8, 0x8b, 0x70, 0x4e, 0x11, 0xac, 0x07, 0xa6, 0x4f, 0xbd, 0xa6, 0xe9, 0xed, 0x47,
	0x89, 0x8e, 0xa9, 0x50, 0xc4, 0x3e, 0x08, 0x1a, 0xd7, 0x98, 0x46, 0xa0, 0x9c, 0xf4, 0x71, 0xb4,
	0x29, 0x20, 0x9d, 0x3e, 0x88, 0xb6, 0x0c, 0xe5, 0xa4, 0x8f, 0xd0, 0xb3, 0xf4, 0x27, 0xd5, 0xab,
	0xf4, 0x47, 0x9b, 0x86, 0xc9, 0x2e, 0x46, 0x7f, 0x97, 0x42, 0x88, 0x7f, 0x4d, 0x29, 0xb1, 0x18,
	0x69, 0xe3, 0x75, 0x0f, 0x0e, 0x29, 0xc5, 0x4b, 0xe9, 0xfe, 0xc5, 0x4b, 0x99, 0xce, 0xe2, 0x98,
	0xe1, 0xca, 0x57, 0x7b, 0x6c, 0xef, 0x68, 0xaf, 0xed, 0xed, 0x52, 0x4b, 0x34, 0xd6, 0xad, 0x96,
	0xa8, 0xf6, 0xef, 0xd3, 0x70, 0x65, 0xcd, 0xde, 0x15, 0xa7, 0xbc, 0x77, 0x20, 0x8e, 0xec, 0x74,
	0xad, 0x3b, 0xe8, 0x12, 0x83, 0x19, 0x80, 0x58, 0xbf, 0xea, 0x83, 0x0d, 0xc8, 0x72, 0x21, 0xd4,
	0xbb, 0xc8, 0x7a, 0x10, 0xfa, 0x1c, 0x72, 0xfb, 0x8c, 0x8e, 0x94, 0xc8, 0xfb, 0x00, 0x22, 0x24,
	0xe7, 0x05, 0xa2, 0xa5, 0x6b, 0x3c, 0x75, 0x10, 0xba, 0x9b, 0x9c, 0x8e, 0x24, 0x9e, 0x67, 0xc1,
	0x03, 0xb9, 0x0f, 0xa3, 0xe2, 0xce, 0xc8, 0xc8, 0xd4, 0xb7, 0x4f, 0x46, 0x5d, 0x98, 0xaa, 0xb7,
	0xcf, 0xe8, 0x92, 0x1a, 0xf9, 0x2e, 0xe4, 0x3c, 0xda, 0xa0, 0x26, 0xa3, 0x96, 0x8c, 0x38, 0xbd,
	0x7a, 0x52, 0x7e, 0x08, 0x2a, 0xb7, 0xcf, 0xe8, 0x21, 0x45, 0x3e, 0x6b, 0xe9, 0xd7, 0x8e, 0x9e,
	0x66, 0xd6, 0x42, 0x0e, 0xf1, 0x59, 0x4b, 0xe7, 0x37, 0x96, 0xd9, 0x2d, 0x06, 0x99, 0xdd, 0xa7,
	0x31, 0xe8, 0xfa, 0x29, 0xc4, 0xb3, 0xcd, 0x47, 0x7d, 0xb3, 0xcd, 0xaf, 0x9f, 0x8c, 0x3f, 0xff,
	0x97, 0x73, 0x7e, 0xba, 0x73, 0xce, 0xef, 0xc6, 0x73, 0xce, 0xaf, 0x9f, 0x5a, 0xa2, 0x9d, 0x2c,
	0xf3, 0x4c, 0x6e, 0xca, 0x0c, 0x5d, 0x0b, 0x0b, 0xe6, 0xaa, 0xb3, 0x38, 0x9b, 0x0b, 0x9d, 0xb3,
	0x89, 0x8a, 0xea, 0x44, 0xfe, 0x4e, 0x16, 0xd8, 0x5d, 0x86, 0x82, 0x48, 0xc6, 0x1a, 0x4d, 0xd7,
	0xa2, 0xd5, 0xbf, 0xcc, 0xe0, 0xd1, 0x01, 0x01, 0x5b, 0x73, 0x2d, 0xaa, 0xfd, 0x75, 0x98, 0xda,
	0xfe, 0xc1, 0xf1, 0xa9, 0xed, 0xef, 0x3e, 0x21, 0x36, 0x0c, 0x97, 0xe0, 0xfe, 0xe3, 0xff, 0x4d,
	0x09, 0xee, 0xef, 0x27, 0x12, 0xdc, 0xf5, 0xcf, 0x92, 0xa5, 0x9f, 0x5f, 0x9a, 0x7b, 0x14, 0xb2,
	0x7c, 0x92, 0xda, 0xaf, 0xa6, 0x21, 0x1f, 0xea, 0x43, 0xf2, 0x9c, 0x2a, 0xc8, 0x0b, 0xf3, 0x67,
	0xbb, 0xed, 0x8a, 0xbf, 0x77, 0xbc, 0xe1, 0x74, 0x01, 0xf2, 0xe1, 0x6e, 0x05, 0xe5, 0x91, 0x21,
	0x20, 0x5e, 0x7d, 0x39, 0x92, 0xa8, 0xbe, 0x4c, 0xec, 0xea, 0x28, 0x36, 0xf7, 0x4d, 0x71, 0x8f,
	0x21, 0xca, 0x20, 0x29, 0xee, 0x5c, 0x8f, 0x14, 0xf7, 0xef, 0xa4, 0x20, 0x17, 0x28, 0xd7, 0xa7,
	0x80, 0x07, 0xda, 0x87, 0x29, 0x18, 0x95, 0xe9, 0xc3, 0x97, 0x61, 0x2c, 0x48, 0x3a, 0xa7, 0x7a,
	0x9d, 0x5e, 0xb5, 0x6e, 0x56, 0x0f, 0xd0, 0xc9, 0xed, 0xe4, 0xe9, 0x17, 0x81, 0xa4, 0x2b, 0xbd,
	0xfa, 0x2b, 0xf5, 0xb1, 0xf1, 0x2b, 0xa0, 0xfd, 0x76, 0x2a, 0x3c, 0x86, 0x5f, 0x3c, 0x73, 0x16,
	0xf3, 0x30, 0x26, 0xad, 0xd7, 0xda, 0xc7, 0xe7, 0x7a, 0x59, 0xbd, 0xf1, 0x97, 0x59, 0x3e, 0x87,
	0xd8, 0x3f, 0xb1, 0xbb, 0x67, 0x52, 0x17, 0x07, 0x15, 0x17, 0x43, 0xbc, 0x38, 0xf3, 0x3e, 0x80,
	0x65, 0xfa, 0xa6, 0x81, 0x49, 0x4f, 0x69, 0xac, 0xbe, 0x76, 0xb2, 0x71, 0x96, 0x4d, 0xdf, 0xc4,
	0xe8, 0x02, 0x37, 0x85, 0xad, 0xe0, 0x81, 0x9b, 0xac, 0x82, 0xdf, 0xc3, 0x9b, 0xac, 0x71, 0xfa,
	0x0b, 0x92, 0x0a, 0x37, 0x59, 0x03, 0x8a, 0xe4, 0x6d, 0xbe, 0x83, 0x78, 0xdb, 0xa4, 0xcd, 0x7a,
	0xf3, 0x64, 0xc4, 0xe5, 0x95, 0xbd, 0x7d, 0x46, 0x0f, 0xe8, 0x11, 0x03, 0xf2, 0xa1, 0xdf, 0x2b,
	0x93, 0x97, 0x27, 0xe4, 0x4c, 0x18, 0x71, 0xe6, 0x9c, 0x09, 0x69, 0x12, 0x2f, 0xae, 0xc2, 0xf0,
	0x50, 0x89, 0x3c, 0xe5, 0xca, 0xc9, 0xc6, 0x51, 0xd4, 0x80, 0xb4, 0xc0, 0x55, 0x45, 0xc7, 0x41,
	0xda, 0x2f, 0x86, 0x4c, 0x2b, 0xfd, 0x78, 0xc0, 0xb4, 0x92, 0x79, 0xfa, 0xb3, 0xf9, 0x65, 0x4d,
	0x2e, 0xfd, 0x5d, 0x0a, 0x72, 0xc1, 0xd9, 0xfc, 0x52, 0x68, 0xbd, 0x78, 0xf4, 0x66, 0x2c, 0xf1,
	0xc6, 0x81, 0xf6, 0x4f, 0x29, 0x18, 0x93, 0xd7, 0xe1, 0x69, 0x58, 0xce, 0x35, 0x28, 0xef, 0xb8,
	0x1e, 0x26, 0xa8, 0x0c, 0xf5, 0xaa, 0xe7, 0xf4, 0x52, 0x00, 0x0f, 0x66, 0x3b, 0x88, 0x3a, 0xd7,
	0x3e, 0x4a, 0x41, 0x3e, 0xbc, 0x90, 0x4f, 0x85, 0x4e, 0xfc, 0xaf, 0x31, 0xc8, 0x87, 0xc2, 0x93,
	0xf8, 0x30, 0xa1, 0xbc, 0x0a, 0x64, 0xfa, 0xa6, 0x9c, 0xd8, 0xda, 0x29, 0xa5, 0x72, 0x22, 0x67,
	0x33, 0xde, 0x52, 0x1f, 0xb5, 0x3f, 0x4d, 0x43, 0x41, 0x76, 0xc1, 0xb0, 0xf4, 0x59, 0x18, 0x55,
	0x5e, 0xcf, 0xcf, 0xea, 0xf2, 0x89, 0x4c, 0xc3, 0x28, 0xa3, 0x0f, 0x0d, 0xc7, 0x95, 0xaf, 0xb2,
	0x8c, 0x30, 0xfa, 0xf0, 0x9e, 0xcb, 0xfd, 0x73, 0x59, 0x20, 0xc3, 0xbd, 0x1a, 0xe6, 0x9b, 0xcd,
	0x56, 0xe0, 0x6a, 0x67, 0xf5, 0x8a, 0x68, 0xda, 0x0a, 0x5a, 0xd6, 0x18, 0x79, 0x1e, 0x46, 0xf0,
	0x5d, 0x3b, 0x69, 0x08, 0xf7, 0x7c, 0xd5, 0x4e, 0x60, 0x11, 0x02, 0x59, 0xe4, 0xc4, 0x08, 0xc6,
	0x0f, 0xf0, 0x3f, 0xf9, 0x06, 0x54, 0x3a, 0xab, 0x28, 0xc5, 0x61, 0x2f, 0xb7, 0x13, 0xe1, 0x7a,
	0x7e, 0x32, 0x22, 0xa6, 0xf2, 0x9b, 0x3d, 0x86, 0xe7, 0x33, 0x0a, 0xc9, 0xdd, 0xa1, 0x47, 0x1c,
	0x89, 0x1e, 0xb6, 0x1a, 0x76, 0xdd, 0xf6, 0x8d, 0x3d, 0x93, 0xed, 0xa1, 0x30, 0x2e, 0xea, 0xc5,
	0x00, 0x78, 0xdb, 0x64, 0x7b, 0xda, 0x27, 0x69, 0x18, 0x11, 0x1b, 0xf5, 0x0c, 0xe4, 0x99, 0xdb,
	0xf6, 0xea, 0x34, 0x78, 0xb9, 0xb1, 0xa8, 0xe7, 0x04, 0x00, 0xa3, 0xbb, 0x45, 0x7a, 0xe8, 0x7b,
	0xa6, 0xb1, 0x63, 0xd3, 0x86, 0x15, 0xb8, 0x0b, 0x5a, 0xe7, 0x3a, 0x83, 0xb7, 0xa8, 0xf4, 0x02,
	0xe2, 0xdf, 0x42, 0x74, 0x6e, 0x73, 0x8a, 0xf7, 0xe4, 0x62, 0xec, 0xcc, 0x8a, 0xd5, 0x61, 0x8b,
	0xca, 0xcd, 0x09, 0x48, 0xdb, 0x2d, 0x64, 0x4e, 0x5e, 0x4f, 0xdb, 0x2d, 0xe2, 0x40, 0x90, 0x72,
	0x51, 0x0f, 0xd0, 0x9d, 0xd3, 0x1e, 0x20, 0xe5, 0x7c, 0xe8, 0x85, 0x66, 0xf4, 0xa0, 0xfd, 0x2c,
	0x9d, 0xcc, 0xf9, 0x7d, 0x3e, 0x72, 0xc3, 0x80, 0x31, 0xb4, 0x5b, 0xa8, 0x48, 0xef, 0x9d, 0x58,
	0x6f, 0x46, 0x4b, 0x14, 0xd9, 0x91, 0x80, 0x2a, 0xf9, 0x26, 0x8c, 0xca, 0xac, 0xcc, 0x48, 0xaf,
	0xf8, 0x7c, 0x4c, 0x38, 0x48, 0x6c, 0x2e, 0xb3, 0x2c, 0xda, 0xf2, 0x68, 0x1d, 0x13, 0x90, 0x82,
	0x13, 0x80, 0x2b, 0x2b, 0x45, 0x70, 0x54, 0x37, 0xda, 0x87, 0xe9, 0x58, 0x6c, 0xf9, 0x29, 0xb1,
	0x8c, 0xbb, 0x26, 0x03, 0xc4, 0xe5, 0x3a, 0x26, 0x19, 0x90, 0x54, 0x27, 0xd1, 0x51, 0x8e, 0xe5,
	0x01, 0x72, 0xca, 0x51, 0x56, 0x72, 0x00, 0x8b, 0x00, 0xb9, 0xc0, 0xea, 0xad, 0xfd, 0x5b, 0x0a,
	0x4a, 0x7c, 0xb3, 0x56, 0x9d, 0x1d, 0x37, 0x08, 0xc8, 0xbd, 0x01, 0xe5, 0xf0, 0xc3, 0x2d, 0x41,
	0x60, 0x44, 0x70, 0xe9, 0x12, 0x72, 0x69, 0x3d, 0x68, 0x64, 0xd1, 0x5f, 0x19, 0x1b, 0x29, 0xb9,
	0x71, 0x00, 0x99, 0x83, 0x51, 0x11, 0x77, 0x93, 0xa2, 0xbb, 0x17, 0x9f, 0x25, 0x16, 0x99, 0x85,
	0xca, 0x2e, 0xf5, 0x13, 0x01, 0x39, 0x11, 0x55, 0x29, 0xed, 0x52, 0x3f, 0x16, 0x8f, 0x9b, 0x57,
	0xe2, 0x71, 0xd9, 0xbe, 0xbb, 0x18, 0xe2, 0xd5, 0xee, 0x40, 0x39, 0x5a, 0xae, 0x34, 0xcf, 0x5e,
	0x82, 0x7c, 0x38, 0x6d, 0xb9, 0xd0, 0xf3, 0x3d, 0x17, 0xaa, 0x47, 0xb8, 0xb5, 0xbf, 0xcf, 0x89,
	0x44, 0x9d, 0xa4, 0xd6, 0x6e, 0xf8, 0x64, 0x31, 0x5c, 0xaf, 0x10, 0x08, 0xb3, 0xdd, 0x43, 0x49,
	0x51, 0x0f, 0x11, 0xa9, 0xc4, 0x67, 0xd9, 0x13, 0x75, 0x55, 0x08, 0x7d, 0x62, 0x07, 0x35, 0x72,
	0xaa, 0x32, 0xc3, 0x3b, 0x55, 0xd9, 0xc1, 0x9c, 0xaa, 0xef, 0xc4, 0x2a, 0x21, 0x46, 0xb0, 0xd3,
	0xcb, 0x83, 0x73, 0x20, 0x52, 0x9f, 0xd8, 0xaa, 0x96, 0x3c, 0x3c, 0x1e, 0x51, 0xc4, 0x1f, 0xf2,
	0x25, 0x76, 0xf1, 0x52, 0xc9, 0x8b, 0x17, 0xad, 0x36, 0x3d, 0xfc, 0x6a, 0x33, 0x83, 0xad, 0x36,
	0xf9, 0xe2, 0x69, 0xf6, 0xb8, 0x17, 0x4f, 0x47, 0x92, 0xf7, 0xb6, 0xc3, 0x98, 0x1a, 0xed, 0x12,
	0x1b, 0xf9, 0x06, 0x10, 0x89, 0xc4, 0x15, 0x15, 0x86, 0x98, 0x9b, 0x4c, 0xca, 0x00, 0x29, 0x28,
	0xb8, 0xa2, 0xba, 0x6b, 0xee, 0xae, 0xb1, 0xa4, 0x61, 0x9a, 0xeb, 0x30, 0x4c, 0xbf, 0x0e, 0x18,
	0xd8, 0x8e, 0xd1, 0xca, 0x23, 0xd6, 0x38, 0x87, 0x47, 0x94, 0xe2, 0x4e, 0x0b, 0x24, 0x9d, 0x96,
	0x4b, 0x50, 0x90, 0xd5, 0xcb, 0x8e, 0x6b, 0x89, 0x2a, 0xc4, 0xbc, 0x0e, 0x02, 0x74, 0xcf, 0xb5,
	0xd0, 0xe9, 0x69, 0x79, 0xee, 0xe1, 0x91, 0x68, 0x2f, 0x8a, 0xfe, 0x08, 0xc1, 0xe6, 0x4b, 0x50,
	0xf0, 0xcd, 0xed, 0x06, 0x95, 0xfd, 0xc7, 0x45, 0x7f, 0x01, 0x42, 0x84, 0x98, 0xe8, 0x9c, 0x48,
	0x88, 0xce, 0x39, 0x98, 0x94, 0x8d, 0x31, 0xe5, 0x5d, 0x12, 0xb6, 0x90, 0x68, 0x52, 0xb5, 0xf7,
	0x55, 0x28, 0xe3, 0x77, 0x15, 0x70, 0xe9, 0x52, 0xdd, 0x94, 0x11, 0x79, 0x82, 0xc3, 0x31, 0xfe,
	0x27, 0xd4, 0xca, 0x3c, 0x4c, 0x47, 0x42, 0x59, 0x45, 0xaf, 0x20, 0xfa, 0x64, 0xd8, 0xa8, 0xf4,
	0x79, 0x03, 0xae, 0xb8, 0x6d, 0xbe, 0x87, 0x86, 0xeb, 0x59, 0xd4, 0x53, 0xbb, 0x31, 0xc3, 0x77,
	0x65, 0x99, 0x16, 0x16, 0x26, 0x64, 0xf5, 0x19, 0xb7, 0xed, 0xaf, 0xef, 0xac, 0x73, 0xc4, 0x88,
	0x04, 0xdb, 0x72, 0x85, 0x92, 0xab, 0x79, 0x50, 0x5e, 0xf6, 0xdc, 0x56, 0xac, 0xa0, 0xfe, 0x49,
	0x0a, 0xe4, 0xe0, 0x45, 0xf3, 0xb4, 0xf2, 0xa2, 0xf9, 0x5d, 0xa8, 0x28, 0x63, 0x9e, 0x56, 0x2a,
	0x56, 0xa0, 0xa4, 0x52, 0x6b, 0x37, 0xfc, 0xda, 0xbf, 0xa4, 0xa0, 0xb0, 0xe4, 0x51, 0x8b, 0x3a,
	0xbe, 0x6d, 0x36, 0xf8, 0xcd, 0x29, 0xb8, 0x66, 0xdb, 0xdf, 0x33, 0x94, 0x6f, 0x9f, 0xdc, 0x3e,
	0xa3, 0x03, 0x02, 0xf1, 0x63, 0x02, 0xe4, 0x12, 0xc0, 0x07, 0x07, 0x7e, 0xb0, 0xda, 0xb4, 0xc4,
	0xc8, 0x7f, 0x70, 0xe0, 0x87, 0xef, 0xb6, 0x67, 0x6c, 0xb3, 0x29, 0xc3, 0x36, 0x5d, 0xe2, 0xd1,
	0xca, 0x78, 0x73, 0xab, 0x66, 0xf3, 0xf6, 0x19, 0x9d, 0xe3, 0x6b, 0x6f, 0x42, 0x66, 0xd5, 0x6c,
	0x12, 0x0d, 0x72, 0xd4, 0xb1, 0x5a, 0xae, 0x2d, 0x5f, 0x85, 0xcf, 0xeb, 0xe1, 0x33, 0x3f, 0x5c,
	0x8c, 0x7a, 0x8f, 0xec, 0x3a, 0x35, 0xcc, 0x3a, 0x56, 0xb8, 0xa0, 0x39, 0x2b, 0x38, 0x56, 0x91,
	0x4d, 0x0b, 0xa2, 0xe5, 0x0e, 0x3d, 0x5a, 0x1c, 0x87, 0x42, 0x3d, 0x1a, 0xac, 0xf6, 0xdf, 0xe3,
	0x30, 0x8e, 0x8b, 0x0f, 0xd3, 0x4c, 0xf3, 0x4a, 0x10, 0x42, 0x7d, 0xff, 0x7e, 0x64, 0x71, 0xec,
	0xd3, 0xc7, 0xb3, 0x99, 0x57, 0x2f, 0xdf, 0x50, 0x82, 0x08, 0xf2, 0x1d, 0xfc, 0x97, 0x60, 0xd2,
	0xa3, 0x3e, 0xa7, 0xc9, 0xf7, 0x9c, 0x7a, 0xb6, 0x6b, 0x85, 0x1f, 0x3d, 0x88, 0xba, 0x55, 0x42,
	0x9c, 0x0d, 0x44, 0x59, 0x63, 0xe4, 0x5d, 0xf8, 0x7a, 0xbc, 0x42, 0x8a, 0xd1, 0x87, 0x8e, 0x6b,
	0x74, 0x23, 0x56, 0x44, 0x62, 0xb9, 0x4f, 0x1f, 0xcf, 0x66, 0x5f, 0xbd, 0x79, 0xf9, 0x86, 0x5e,
	0x53, 0x4b, 0xa7, 0x36, 0x79, 0x37, 0xbd, 0x83, 0xbc, 0x09, 0xd7, 0x9a, 0xe6, 0xa1, 0x52, 0x0a,
	0x1f, 0x1b, 0x8c, 0xc9, 0xd1, 0x98, 0xef, 0x7a, 0xd4, 0xc2, 0x5b, 0xad, 0x0e, 0xf0, 0x95, 0xa6,
	0x79, 0x18, 0x4a, 0xf1, 0x35, 0x65, 0x30, 0x86, 0xa3, 0x6d, 0x62, 0x2f, 0xf2, 0xa6, 0xfa, 0xb9,
	0x10, 0x11, 0x12, 0x91, 0x3a, 0xeb, 0x6b, 0x9d, 0xdb, 0x1c, 0xe3, 0xf4, 0x9c, 0x88, 0x36, 0x28,
	0x5f, 0x0f, 0x11, 0x00, 0x7e, 0x83, 0x3a, 0xbe, 0x40, 0x92, 0xed, 0xfb, 0x05, 0x92, 0xc5, 0xd1,
	0x1f, 0x3e, 0x9e, 0x4d, 0x57, 0xad, 0xce, 0x2f, 0x91, 0xac, 0x80, 0x16, 0xe7, 0x00, 0x5f, 0x6c,
	0x50, 0x8f, 0x25, 0xb2, 0x77, 0xca, 0x92, 0xcf, 0xa9, 0x4b, 0xde, 0x14, 0x98, 0xe8, 0x2e, 0x2d,
	0xc1, 0xf9, 0x38, 0x19, 0xf9, 0xd1, 0x8e, 0x16, 0xa5, 0xb2, 0xc2, 0x40, 0xa1, 0x72, 0x56, 0xa5,
	0x22, 0xbe, 0xad, 0xc1, 0xf1, 0x7a, 0x11, 0xd9, 0x6e, 0x7b, 0xf2, 0x4d, 0xee, 0xfe, 0x44, 0x16,
	0x39, 0x1e, 0x8a, 0x3c, 0x21, 0xca, 0x45, 0x6f, 0xcb, 0x66, 0x5c, 0x0c, 0x5b, 0x32, 0xfe, 0x3e,
	0x29, 0x1a, 0xb1, 0xc3, 0xb2, 0x6c, 0x22, 0x1b, 0x00, 0xa2, 0xf8, 0xbd, 0xdd, 0x90, 0xc5, 0x73,
	0x85, 0xf9, 0xab, 0xc7, 0xed, 0x0e, 0xd6, 0x97, 0xb4, 0x1b, 0x74, 0x71, 0xec, 0x87, 0x8f, 0x67,
	0x33, 0xd5, 0x9f, 0x9e, 0xd3, 0xf3, 0x9e, 0x04, 0x31, 0xb2, 0x0e, 0x60, 0xfa, 0xbe, 0x67, 0x6f,
	0xb7, 0x7d, 0xca, 0x64, 0x95, 0xdd, 0xf5, 0xe3, 0x28, 0x2e, 0x84, 0x3d, 0x44, 0xfc, 0x4a, 0x21,
	0x41, 0xde, 0x03, 0x7c, 0x03, 0xda, 0xa7, 0x46, 0xd3, 0xf6, 0x3c, 0xd7, 0xc3, 0xb9, 0xca, 0x72,
	0xf9, 0x1b, 0xc7, 0x4f, 0x95, 0xf7, 0x5c, 0xc3, 0x8e, 0x7c, 0x7e, 0x7a, 0xd9, 0x4b, 0x40, 0xb4,
	0xdf, 0xc8, 0x40, 0x2e, 0x58, 0x11, 0xb9, 0xc6, 0x35, 0xb9, 0xb0, 0x31, 0x0d, 0xc7, 0x6c, 0x8a,
	0xea, 0xac, 0xfc, 0x62, 0xf6, 0xe3, 0xc7, 0xb3, 0x29, 0xae, 0xcf, 0x45, 0xd3, 0x3d, 0xb3, 0x49,
	0xb9, 0xe1, 0x62, 0x37, 0xf9, 0x89, 0x32, 0x1d, 0x5f, 0xe6, 0x9a, 0x23, 0x00, 0xb9, 0x03, 0x33,
	0x68, 0x40, 0xd8, 0xce, 0x6e, 0x78, 0xb5, 0x3a, 0xfc, 0x7d, 0x75, 0x57, 0xb5, 0x00, 0x5d, 0xde,
	0x27, 0x55, 0xed, 0x75, 0xbb, 0x49, 0xd9, 0x27, 0x7f, 0x93, 0x46, 0x4e, 0x78, 0x93, 0x6a, 0x30,
	0x16, 0x4b, 0x59, 0x2b, 0xab, 0x0a, 0x1a, 0xd0, 0xc8, 0x92, 0xc2, 0xd8, 0x3f, 0x6a, 0x51, 0x19,
	0x54, 0x28, 0x48, 0xd8, 0xd6, 0x51, 0x8b, 0x6a, 0x37, 0xa1, 0x94, 0x38, 0x07, 0x43, 0x7d, 0x4a,
	0xed, 0x0f, 0xd3, 0xdc, 0x27, 0x88, 0x6f, 0x6e, 0x5f, 0xfd, 0x30, 0x03, 0x20, 0x5e, 0x87, 0x50,
	0x14, 0x69, 0x1e, 0x21, 0xf8, 0x29, 0x97, 0x2b, 0xc9, 0xa3, 0x20, 0x6a, 0x05, 0xe2, 0x87, 0xe0,
	0xb5, 0x98, 0xce, 0x90, 0xee, 0xcb, 0x4c, 0x5f, 0x2d, 0xa6, 0xab, 0x3d, 0x8e, 0x3f, 0x27, 0x23,
	0x43, 0x9c, 0x13, 0x0d, 0x72, 0x96, 0xe9, 0x9b, 0xdb, 0x41, 0xdc, 0x2f, 0xaf, 0x87, 0xcf, 0xb5,
	0x17, 0x60, 0x54, 0x6e, 0xfd, 0x59, 0x20, 0xb7, 0xd6, 0xf5, 0xb5, 0x85, 0xad, 0x44, 0x4e, 0xb3,
	0x04, 0x05, 0x09, 0x5f, 0x5c, 0xd8, 0x5c, 0x29, 0xa7, 0x6a, 0x7f, 0x91, 0x02, 0x22, 0x5e, 0x05,
	0xf8, 0xcc, 0xcc, 0x98, 0xaa, 0x6a, 0xc6, 0xc8, 0x6b, 0x86, 0x10, 0xf2, 0x2d, 0xc8, 0x85, 0x25,
	0x24, 0x59, 0x85, 0x7a, 0xef, 0xb3, 0xae, 0x87, 0x1d, 0x6a, 0xf7, 0x60, 0x32, 0x36, 0xf1, 0xd3,
	0xda, 0x42, 0x93, 0x50, 0x89, 0xd3, 0xe3, 0xd6, 0xd0, 0x4f, 0x52, 0x50, 0x59, 0x68, 0xf8, 0xd4,
	0xfb, 0xb2, 0x71, 0x67, 0x0d, 0x88, 0x3a, 0xef, 0xd3, 0x32, 0x87, 0x40, 0x39, 0x46, 0x8e, 0xf3,
	0xe6, 0xaf, 0x52, 0x40, 0x16, 0x2c, 0x2b, 0x90, 0xab, 0x9f, 0x2f, 0x73, 0x56, 0x20, 0x1f, 0x2a,
	0x35, 0x69, 0x58, 0x0e, 0xac, 0xd3, 0xf4, 0x5c, 0xa0, 0xca, 0xf8, 0x21, 0x8a, 0x2d, 0xe1, 0x09,
	0x1c, 0xa2, 0x38, 0x3d, 0xce, 0xa8, 0x3f, 0x49, 0xc1, 0xb4, 0xa8, 0xac, 0xfc, 0x62, 0x78, 0x35,
	0x88, 0x94, 0xab, 0xbd, 0x09, 0x67, 0x93, 0x73, 0x3c, 0x2d, 0x33, 0xce, 0xc2, 0x54, 0x07, 0x49,
	0xce, 0x8f, 0x5f, 0x81, 0xa9, 0x65, 0xca, 0xea, 0x9e, 0xbd, 0xfd, 0x05, 0x08, 0x9d, 0xda, 0x06,
	0x4c, 0x27, 0x46, 0x3f, 0xed, 0x3a, 0x8f, 0x60, 0x32, 0x49, 0xb1, 0xdd, 0xf0, 0xc9, 0x57, 0x21,
	0xcb, 0x68, 0x63, 0x47, 0x92, 0xaa, 0x88, 0xa8, 0x86, 0xf8, 0x6e, 0xb2, 0xb0, 0x80, 0xb0, 0x39,
	0x76, 0xcd, 0xd3, 0x43, 0x5e, 0xf3, 0xd9, 0x77, 0x61, 0x04, 0x15, 0x34, 0x99, 0x86, 0xca, 0xd2,
	0xfa, 0xf2, 0xca, 0x52, 0x42, 0xde, 0x8f, 0x43, 0x5e, 0x80, 0xf5, 0x85, 0x07, 0xa2, 0x88, 0x45,
	0x3c, 0xbe, 0xfe, 0xce, 0xea, 0x46, 0x39, 0x1d, 0x3d, 0xdf, 0x7d, 0x67, 0x7d, 0xa3, 0x9c, 0x89,
	0x9e, 0xdf, 0xd9, 0xdc, 0x5a, 0x2e, 0x67, 0x17, 0x67, 0xa0, 0x5a, 0x77, 0x9b, 0x73, 0x47, 0xa6,
	0x63, 0xd1, 0xc3, 0xb9, 0x23, 0x6b, 0x7b, 0x2e, 0xfc, 0xd2, 0xf4, 0x7f, 0xa4, 0x52, 0xdb, 0xa3,
	0xf8, 0x95, 0xe5, 0xff, 0xf7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x41, 0x94, 0x0d, 0x84,
	0x5a, 0x00, 0x00,
}

// SetOperationParams implements ydb generic interface for setting
// operation parameters inside driver implementation.
func (m *ReadInfoRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	m.OperationParams = v
}

// SetOperationParams implements ydb generic interface for setting
// operation parameters inside driver implementation.
func (m *DropTopicRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	m.OperationParams = v
}

// SetOperationParams implements ydb generic interface for setting
// operation parameters inside driver implementation.
func (m *CreateTopicRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	m.OperationParams = v
}

// SetOperationParams implements ydb generic interface for setting
// operation parameters inside driver implementation.
func (m *AlterTopicRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	m.OperationParams = v
}

// SetOperationParams implements ydb generic interface for setting
// operation parameters inside driver implementation.
func (m *AddReadRuleRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	m.OperationParams = v
}

// SetOperationParams implements ydb generic interface for setting
// operation parameters inside driver implementation.
func (m *RemoveReadRuleRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	m.OperationParams = v
}

// SetOperationParams implements ydb generic interface for setting
// operation parameters inside driver implementation.
func (m *DescribeTopicRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	m.OperationParams = v
}
