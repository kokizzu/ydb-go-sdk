// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ydb_persqueue_cluster_discovery.proto

package Ydb_PersQueue_ClusterDiscovery

import (
	Ydb_Operations "github.com/yandex-cloud/ydb-go-sdk/v2/api/protos/Ydb_Operations"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WriteSessionClusters_SelectionReason int32

const (
	WriteSessionClusters_SELECTION_REASON_UNSPECIFIED WriteSessionClusters_SelectionReason = 0
	WriteSessionClusters_CLIENT_PREFERENCE            WriteSessionClusters_SelectionReason = 1
	WriteSessionClusters_CLIENT_LOCATION              WriteSessionClusters_SelectionReason = 2
	WriteSessionClusters_CONSISTENT_DISTRIBUTION      WriteSessionClusters_SelectionReason = 3
)

var WriteSessionClusters_SelectionReason_name = map[int32]string{
	0: "SELECTION_REASON_UNSPECIFIED",
	1: "CLIENT_PREFERENCE",
	2: "CLIENT_LOCATION",
	3: "CONSISTENT_DISTRIBUTION",
}

var WriteSessionClusters_SelectionReason_value = map[string]int32{
	"SELECTION_REASON_UNSPECIFIED": 0,
	"CLIENT_PREFERENCE":            1,
	"CLIENT_LOCATION":              2,
	"CONSISTENT_DISTRIBUTION":      3,
}

func (x WriteSessionClusters_SelectionReason) String() string {
	return proto.EnumName(WriteSessionClusters_SelectionReason_name, int32(x))
}

func (WriteSessionClusters_SelectionReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5cad171f92634c39, []int{3, 0}
}

type WriteSessionParams struct {
	// Path to the topic to write to.
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Message group identifier.
	SourceId []byte `protobuf:"bytes,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	// Partition group to write to. 0 by default.
	PartitionGroup uint32 `protobuf:"varint,3,opt,name=partition_group,json=partitionGroup,proto3" json:"partition_group,omitempty"`
	// Force the specified cluster via its name. Leave it empty by default.
	PreferredClusterName string   `protobuf:"bytes,4,opt,name=preferred_cluster_name,json=preferredClusterName,proto3" json:"preferred_cluster_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteSessionParams) Reset()         { *m = WriteSessionParams{} }
func (m *WriteSessionParams) String() string { return proto.CompactTextString(m) }
func (*WriteSessionParams) ProtoMessage()    {}
func (*WriteSessionParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cad171f92634c39, []int{0}
}

func (m *WriteSessionParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteSessionParams.Unmarshal(m, b)
}
func (m *WriteSessionParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteSessionParams.Marshal(b, m, deterministic)
}
func (m *WriteSessionParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteSessionParams.Merge(m, src)
}
func (m *WriteSessionParams) XXX_Size() int {
	return xxx_messageInfo_WriteSessionParams.Size(m)
}
func (m *WriteSessionParams) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteSessionParams.DiscardUnknown(m)
}

var xxx_messageInfo_WriteSessionParams proto.InternalMessageInfo

func (m *WriteSessionParams) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *WriteSessionParams) GetSourceId() []byte {
	if m != nil {
		return m.SourceId
	}
	return nil
}

func (m *WriteSessionParams) GetPartitionGroup() uint32 {
	if m != nil {
		return m.PartitionGroup
	}
	return 0
}

func (m *WriteSessionParams) GetPreferredClusterName() string {
	if m != nil {
		return m.PreferredClusterName
	}
	return ""
}

type ClusterInfo struct {
	// A host discovery endpoint to use at the next step.
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// An official cluster name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Is the cluster available right now?
	Available            bool     `protobuf:"varint,3,opt,name=available,proto3" json:"available,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterInfo) Reset()         { *m = ClusterInfo{} }
func (m *ClusterInfo) String() string { return proto.CompactTextString(m) }
func (*ClusterInfo) ProtoMessage()    {}
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cad171f92634c39, []int{1}
}

func (m *ClusterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterInfo.Unmarshal(m, b)
}
func (m *ClusterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterInfo.Marshal(b, m, deterministic)
}
func (m *ClusterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterInfo.Merge(m, src)
}
func (m *ClusterInfo) XXX_Size() int {
	return xxx_messageInfo_ClusterInfo.Size(m)
}
func (m *ClusterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterInfo proto.InternalMessageInfo

func (m *ClusterInfo) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *ClusterInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClusterInfo) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

type ReadSessionParams struct {
	// Path to the topic to read from.
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Read mode is set according to the read rule.
	//
	// Types that are valid to be assigned to ReadRule:
	//	*ReadSessionParams_MirrorToCluster
	//	*ReadSessionParams_AllOriginal
	ReadRule             isReadSessionParams_ReadRule `protobuf_oneof:"read_rule"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ReadSessionParams) Reset()         { *m = ReadSessionParams{} }
func (m *ReadSessionParams) String() string { return proto.CompactTextString(m) }
func (*ReadSessionParams) ProtoMessage()    {}
func (*ReadSessionParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cad171f92634c39, []int{2}
}

func (m *ReadSessionParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadSessionParams.Unmarshal(m, b)
}
func (m *ReadSessionParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadSessionParams.Marshal(b, m, deterministic)
}
func (m *ReadSessionParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadSessionParams.Merge(m, src)
}
func (m *ReadSessionParams) XXX_Size() int {
	return xxx_messageInfo_ReadSessionParams.Size(m)
}
func (m *ReadSessionParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadSessionParams.DiscardUnknown(m)
}

var xxx_messageInfo_ReadSessionParams proto.InternalMessageInfo

func (m *ReadSessionParams) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type isReadSessionParams_ReadRule interface {
	isReadSessionParams_ReadRule()
}

type ReadSessionParams_MirrorToCluster struct {
	MirrorToCluster string `protobuf:"bytes,2,opt,name=mirror_to_cluster,json=mirrorToCluster,proto3,oneof"`
}

type ReadSessionParams_AllOriginal struct {
	AllOriginal *emptypb.Empty `protobuf:"bytes,3,opt,name=all_original,json=allOriginal,proto3,oneof"`
}

func (*ReadSessionParams_MirrorToCluster) isReadSessionParams_ReadRule() {}

func (*ReadSessionParams_AllOriginal) isReadSessionParams_ReadRule() {}

func (m *ReadSessionParams) GetReadRule() isReadSessionParams_ReadRule {
	if m != nil {
		return m.ReadRule
	}
	return nil
}

func (m *ReadSessionParams) GetMirrorToCluster() string {
	if x, ok := m.GetReadRule().(*ReadSessionParams_MirrorToCluster); ok {
		return x.MirrorToCluster
	}
	return ""
}

func (m *ReadSessionParams) GetAllOriginal() *emptypb.Empty {
	if x, ok := m.GetReadRule().(*ReadSessionParams_AllOriginal); ok {
		return x.AllOriginal
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReadSessionParams) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReadSessionParams_MirrorToCluster)(nil),
		(*ReadSessionParams_AllOriginal)(nil),
	}
}

type WriteSessionClusters struct {
	// Ordered clusters with statuses.
	Clusters []*ClusterInfo `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	// The reason why a particular cluster was prioritized.
	PrimaryClusterSelectionReason WriteSessionClusters_SelectionReason `protobuf:"varint,2,opt,name=primary_cluster_selection_reason,json=primaryClusterSelectionReason,proto3,enum=Ydb.PersQueue.ClusterDiscovery.WriteSessionClusters_SelectionReason" json:"primary_cluster_selection_reason,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}                             `json:"-"`
	XXX_unrecognized              []byte                               `json:"-"`
	XXX_sizecache                 int32                                `json:"-"`
}

func (m *WriteSessionClusters) Reset()         { *m = WriteSessionClusters{} }
func (m *WriteSessionClusters) String() string { return proto.CompactTextString(m) }
func (*WriteSessionClusters) ProtoMessage()    {}
func (*WriteSessionClusters) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cad171f92634c39, []int{3}
}

func (m *WriteSessionClusters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteSessionClusters.Unmarshal(m, b)
}
func (m *WriteSessionClusters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteSessionClusters.Marshal(b, m, deterministic)
}
func (m *WriteSessionClusters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteSessionClusters.Merge(m, src)
}
func (m *WriteSessionClusters) XXX_Size() int {
	return xxx_messageInfo_WriteSessionClusters.Size(m)
}
func (m *WriteSessionClusters) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteSessionClusters.DiscardUnknown(m)
}

var xxx_messageInfo_WriteSessionClusters proto.InternalMessageInfo

func (m *WriteSessionClusters) GetClusters() []*ClusterInfo {
	if m != nil {
		return m.Clusters
	}
	return nil
}

func (m *WriteSessionClusters) GetPrimaryClusterSelectionReason() WriteSessionClusters_SelectionReason {
	if m != nil {
		return m.PrimaryClusterSelectionReason
	}
	return WriteSessionClusters_SELECTION_REASON_UNSPECIFIED
}

type ReadSessionClusters struct {
	// Ordered clusters with statuses.
	Clusters             []*ClusterInfo `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReadSessionClusters) Reset()         { *m = ReadSessionClusters{} }
func (m *ReadSessionClusters) String() string { return proto.CompactTextString(m) }
func (*ReadSessionClusters) ProtoMessage()    {}
func (*ReadSessionClusters) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cad171f92634c39, []int{4}
}

func (m *ReadSessionClusters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadSessionClusters.Unmarshal(m, b)
}
func (m *ReadSessionClusters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadSessionClusters.Marshal(b, m, deterministic)
}
func (m *ReadSessionClusters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadSessionClusters.Merge(m, src)
}
func (m *ReadSessionClusters) XXX_Size() int {
	return xxx_messageInfo_ReadSessionClusters.Size(m)
}
func (m *ReadSessionClusters) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadSessionClusters.DiscardUnknown(m)
}

var xxx_messageInfo_ReadSessionClusters proto.InternalMessageInfo

func (m *ReadSessionClusters) GetClusters() []*ClusterInfo {
	if m != nil {
		return m.Clusters
	}
	return nil
}

type DiscoverClustersRequest struct {
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Clusters will be discovered separately for each element of the list.
	WriteSessions []*WriteSessionParams `protobuf:"bytes,2,rep,name=write_sessions,json=writeSessions,proto3" json:"write_sessions,omitempty"`
	ReadSessions  []*ReadSessionParams  `protobuf:"bytes,3,rep,name=read_sessions,json=readSessions,proto3" json:"read_sessions,omitempty"`
	// Latest clusters status version known to the client application. Use 0 by default.
	MinimalVersion       int64    `protobuf:"varint,4,opt,name=minimal_version,json=minimalVersion,proto3" json:"minimal_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoverClustersRequest) Reset()         { *m = DiscoverClustersRequest{} }
func (m *DiscoverClustersRequest) String() string { return proto.CompactTextString(m) }
func (*DiscoverClustersRequest) ProtoMessage()    {}
func (*DiscoverClustersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cad171f92634c39, []int{5}
}

func (m *DiscoverClustersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoverClustersRequest.Unmarshal(m, b)
}
func (m *DiscoverClustersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoverClustersRequest.Marshal(b, m, deterministic)
}
func (m *DiscoverClustersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverClustersRequest.Merge(m, src)
}
func (m *DiscoverClustersRequest) XXX_Size() int {
	return xxx_messageInfo_DiscoverClustersRequest.Size(m)
}
func (m *DiscoverClustersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverClustersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverClustersRequest proto.InternalMessageInfo

func (m *DiscoverClustersRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if m != nil {
		return m.OperationParams
	}
	return nil
}

func (m *DiscoverClustersRequest) GetWriteSessions() []*WriteSessionParams {
	if m != nil {
		return m.WriteSessions
	}
	return nil
}

func (m *DiscoverClustersRequest) GetReadSessions() []*ReadSessionParams {
	if m != nil {
		return m.ReadSessions
	}
	return nil
}

func (m *DiscoverClustersRequest) GetMinimalVersion() int64 {
	if m != nil {
		return m.MinimalVersion
	}
	return 0
}

type DiscoverClustersResponse struct {
	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation            *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DiscoverClustersResponse) Reset()         { *m = DiscoverClustersResponse{} }
func (m *DiscoverClustersResponse) String() string { return proto.CompactTextString(m) }
func (*DiscoverClustersResponse) ProtoMessage()    {}
func (*DiscoverClustersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cad171f92634c39, []int{6}
}

func (m *DiscoverClustersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoverClustersResponse.Unmarshal(m, b)
}
func (m *DiscoverClustersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoverClustersResponse.Marshal(b, m, deterministic)
}
func (m *DiscoverClustersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverClustersResponse.Merge(m, src)
}
func (m *DiscoverClustersResponse) XXX_Size() int {
	return xxx_messageInfo_DiscoverClustersResponse.Size(m)
}
func (m *DiscoverClustersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverClustersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverClustersResponse proto.InternalMessageInfo

func (m *DiscoverClustersResponse) GetOperation() *Ydb_Operations.Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

type DiscoverClustersResult struct {
	// Discovered per-session clusters.
	WriteSessionsClusters []*WriteSessionClusters `protobuf:"bytes,1,rep,name=write_sessions_clusters,json=writeSessionsClusters,proto3" json:"write_sessions_clusters,omitempty"`
	ReadSessionsClusters  []*ReadSessionClusters  `protobuf:"bytes,2,rep,name=read_sessions_clusters,json=readSessionsClusters,proto3" json:"read_sessions_clusters,omitempty"`
	// Latest clusters status version known to the cluster discovery service.
	Version              int64    `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoverClustersResult) Reset()         { *m = DiscoverClustersResult{} }
func (m *DiscoverClustersResult) String() string { return proto.CompactTextString(m) }
func (*DiscoverClustersResult) ProtoMessage()    {}
func (*DiscoverClustersResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cad171f92634c39, []int{7}
}

func (m *DiscoverClustersResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoverClustersResult.Unmarshal(m, b)
}
func (m *DiscoverClustersResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoverClustersResult.Marshal(b, m, deterministic)
}
func (m *DiscoverClustersResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverClustersResult.Merge(m, src)
}
func (m *DiscoverClustersResult) XXX_Size() int {
	return xxx_messageInfo_DiscoverClustersResult.Size(m)
}
func (m *DiscoverClustersResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverClustersResult.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverClustersResult proto.InternalMessageInfo

func (m *DiscoverClustersResult) GetWriteSessionsClusters() []*WriteSessionClusters {
	if m != nil {
		return m.WriteSessionsClusters
	}
	return nil
}

func (m *DiscoverClustersResult) GetReadSessionsClusters() []*ReadSessionClusters {
	if m != nil {
		return m.ReadSessionsClusters
	}
	return nil
}

func (m *DiscoverClustersResult) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func init() {
	proto.RegisterEnum("Ydb.PersQueue.ClusterDiscovery.WriteSessionClusters_SelectionReason", WriteSessionClusters_SelectionReason_name, WriteSessionClusters_SelectionReason_value)
	proto.RegisterType((*WriteSessionParams)(nil), "Ydb.PersQueue.ClusterDiscovery.WriteSessionParams")
	proto.RegisterType((*ClusterInfo)(nil), "Ydb.PersQueue.ClusterDiscovery.ClusterInfo")
	proto.RegisterType((*ReadSessionParams)(nil), "Ydb.PersQueue.ClusterDiscovery.ReadSessionParams")
	proto.RegisterType((*WriteSessionClusters)(nil), "Ydb.PersQueue.ClusterDiscovery.WriteSessionClusters")
	proto.RegisterType((*ReadSessionClusters)(nil), "Ydb.PersQueue.ClusterDiscovery.ReadSessionClusters")
	proto.RegisterType((*DiscoverClustersRequest)(nil), "Ydb.PersQueue.ClusterDiscovery.DiscoverClustersRequest")
	proto.RegisterType((*DiscoverClustersResponse)(nil), "Ydb.PersQueue.ClusterDiscovery.DiscoverClustersResponse")
	proto.RegisterType((*DiscoverClustersResult)(nil), "Ydb.PersQueue.ClusterDiscovery.DiscoverClustersResult")
}

func init() {
	proto.RegisterFile("ydb_persqueue_cluster_discovery.proto", fileDescriptor_5cad171f92634c39)
}

var fileDescriptor_5cad171f92634c39 = []byte{
	// 794 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xae, 0x93, 0x05, 0x92, 0x93, 0x36, 0x49, 0x67, 0xb3, 0xa9, 0x69, 0x17, 0x88, 0x2c, 0x21,
	0x22, 0x58, 0x39, 0x22, 0xbb, 0x12, 0x17, 0x5c, 0x6d, 0x13, 0xef, 0xae, 0x51, 0x95, 0x84, 0x71,
	0x76, 0xd1, 0x0a, 0x09, 0x6b, 0x12, 0x4f, 0xa3, 0xd1, 0xda, 0x1e, 0x77, 0xc6, 0x6e, 0x89, 0xc4,
	0x1b, 0x20, 0x1e, 0x82, 0x1b, 0xde, 0x83, 0x07, 0xe2, 0x9e, 0x4b, 0xe4, 0xf1, 0x4f, 0x92, 0xb6,
	0x50, 0x8a, 0xb8, 0xf3, 0x7c, 0xe7, 0xcc, 0xf7, 0x9d, 0xf9, 0xce, 0x99, 0x31, 0x7c, 0xba, 0xf6,
	0x16, 0x6e, 0x44, 0x85, 0xbc, 0x48, 0x68, 0x42, 0xdd, 0xa5, 0x9f, 0xc8, 0x98, 0x0a, 0xd7, 0x63,
	0x72, 0xc9, 0x2f, 0xa9, 0x58, 0x9b, 0x91, 0xe0, 0x31, 0x47, 0x1f, 0xbf, 0xf5, 0x16, 0xe6, 0x8c,
	0x0a, 0xf9, 0x6d, 0x9a, 0x66, 0x8e, 0xb2, 0xb4, 0x71, 0x91, 0x75, 0x7c, 0xb2, 0xe2, 0x7c, 0xe5,
	0xd3, 0x81, 0xca, 0x5e, 0x24, 0xe7, 0x03, 0x1a, 0x44, 0x71, 0xbe, 0xf9, 0xf8, 0xc9, 0x3b, 0xf6,
	0x8e, 0x05, 0x62, 0x10, 0x25, 0x0b, 0x9f, 0x2d, 0x07, 0x24, 0x62, 0x59, 0x9e, 0x1c, 0xa4, 0xe2,
	0x3c, 0xa2, 0x82, 0xc4, 0x8c, 0x87, 0x59, 0xb6, 0xf1, 0x9b, 0x06, 0xe8, 0x3b, 0xc1, 0x62, 0xea,
	0x50, 0x29, 0x19, 0x0f, 0x67, 0x44, 0x90, 0x40, 0xa2, 0x0e, 0xbc, 0x17, 0xf3, 0x88, 0x2d, 0x75,
	0xad, 0xa7, 0xf5, 0xeb, 0x38, 0x5b, 0xa0, 0x13, 0xa8, 0x4b, 0x9e, 0x88, 0x25, 0x75, 0x99, 0xa7,
	0x57, 0x7a, 0x5a, 0x7f, 0x1f, 0xd7, 0x32, 0xc0, 0xf6, 0xd0, 0x67, 0xd0, 0x8a, 0x88, 0x88, 0x59,
	0x4a, 0xee, 0xae, 0x04, 0x4f, 0x22, 0xbd, 0xda, 0xd3, 0xfa, 0x07, 0xb8, 0x59, 0xc2, 0x2f, 0x53,
	0x14, 0x3d, 0x83, 0x6e, 0x24, 0xe8, 0x39, 0x15, 0x82, 0x7a, 0xa5, 0x05, 0x21, 0x09, 0xa8, 0xfe,
	0x40, 0x89, 0x75, 0xca, 0x68, 0x7e, 0xf0, 0x09, 0x09, 0xa8, 0xf1, 0x3d, 0x34, 0xf2, 0xa5, 0x1d,
	0x9e, 0x73, 0x74, 0x0c, 0x35, 0x1a, 0x7a, 0x11, 0x67, 0x61, 0x9c, 0xd7, 0x58, 0xae, 0x11, 0x82,
	0x07, 0x8a, 0xae, 0xa2, 0x70, 0xf5, 0x8d, 0x1e, 0x43, 0x9d, 0x5c, 0x12, 0xe6, 0x93, 0x85, 0x4f,
	0x55, 0x5d, 0x35, 0xbc, 0x01, 0x8c, 0x5f, 0x35, 0x38, 0xc4, 0x94, 0x78, 0xff, 0xc6, 0x84, 0x27,
	0x70, 0x18, 0x30, 0x21, 0xb8, 0x70, 0x63, 0x5e, 0x94, 0x9f, 0x49, 0xbd, 0xda, 0xc3, 0xad, 0x2c,
	0x34, 0xe7, 0x79, 0xad, 0xe8, 0x6b, 0xd8, 0x27, 0xbe, 0xef, 0x72, 0xc1, 0x56, 0x2c, 0x24, 0xbe,
	0x92, 0x6e, 0x0c, 0xbb, 0x66, 0xd6, 0x41, 0xb3, 0xe8, 0xa0, 0x69, 0xa5, 0x1d, 0x7c, 0xb5, 0x87,
	0x1b, 0xc4, 0xf7, 0xa7, 0x79, 0xf2, 0x69, 0x03, 0xea, 0x82, 0x12, 0xcf, 0x15, 0x89, 0x4f, 0x8d,
	0x3f, 0x2a, 0xd0, 0xd9, 0xee, 0x54, 0xae, 0x20, 0xd1, 0x4b, 0xa8, 0xe5, 0x65, 0x48, 0x5d, 0xeb,
	0x55, 0xfb, 0x8d, 0xe1, 0x17, 0xe6, 0x3f, 0x0f, 0x90, 0xb9, 0xe5, 0x24, 0x2e, 0x37, 0xa3, 0x5f,
	0x34, 0xe8, 0x45, 0x82, 0x05, 0x44, 0xac, 0xcb, 0xbe, 0x48, 0xea, 0xd3, 0xa5, 0x6a, 0xa9, 0xa0,
	0x44, 0xf2, 0x50, 0x9d, 0xb4, 0x39, 0x1c, 0xdf, 0xa5, 0x70, 0x5b, 0xa5, 0xa6, 0x53, 0x90, 0x61,
	0xc5, 0x85, 0x3f, 0xca, 0xd5, 0xf2, 0x84, 0x6b, 0x61, 0xe3, 0x27, 0x68, 0x5d, 0x83, 0x50, 0x0f,
	0x1e, 0x3b, 0xd6, 0x99, 0x35, 0x9a, 0xdb, 0xd3, 0x89, 0x8b, 0xad, 0xe7, 0xce, 0x74, 0xe2, 0xbe,
	0x9e, 0x38, 0x33, 0x6b, 0x64, 0xbf, 0xb0, 0xad, 0x71, 0x7b, 0x0f, 0x3d, 0x82, 0xc3, 0xd1, 0x99,
	0x6d, 0x4d, 0xe6, 0xee, 0x0c, 0x5b, 0x2f, 0x2c, 0x6c, 0x4d, 0x46, 0x56, 0x5b, 0x43, 0x0f, 0xa1,
	0x95, 0xc3, 0x67, 0xd3, 0xd1, 0xf3, 0x74, 0x7b, 0xbb, 0x82, 0x4e, 0xe0, 0x68, 0x34, 0x9d, 0x38,
	0xb6, 0x33, 0x4f, 0x03, 0x63, 0xdb, 0x99, 0x63, 0xfb, 0xf4, 0xb5, 0x0a, 0x56, 0x8d, 0x1f, 0xe0,
	0xe1, 0xd6, 0x48, 0xfc, 0xef, 0x6e, 0x1b, 0xbf, 0x57, 0xe0, 0xa8, 0xc8, 0x29, 0xd8, 0x31, 0xbd,
	0x48, 0xa8, 0x8c, 0xd1, 0x37, 0xd0, 0x2e, 0x2f, 0xaa, 0x1b, 0xa9, 0x69, 0x54, 0x43, 0xd8, 0x18,
	0x7e, 0xa2, 0xc4, 0xa6, 0x45, 0x50, 0x6e, 0x3e, 0xb3, 0xa1, 0xc5, 0x2d, 0xbe, 0x0b, 0xa0, 0xb7,
	0xd0, 0xbc, 0x4a, 0x9b, 0xe1, 0xca, 0xec, 0x24, 0x52, 0xaf, 0xa8, 0xb2, 0x87, 0xf7, 0x69, 0x61,
	0x4e, 0x7e, 0x70, 0xb5, 0x85, 0x49, 0xf4, 0x06, 0x0e, 0xd4, 0x7c, 0x96, 0xcc, 0x55, 0xc5, 0xfc,
	0xe5, 0x5d, 0xcc, 0x37, 0xae, 0x1a, 0xde, 0x17, 0x1b, 0x48, 0xa6, 0x4f, 0x49, 0xc0, 0x42, 0x16,
	0x10, 0xdf, 0xbd, 0xa4, 0x22, 0xc5, 0xd4, 0xd3, 0x50, 0xc5, 0xcd, 0x1c, 0x7e, 0x93, 0xa1, 0x86,
	0x03, 0xfa, 0x4d, 0x0b, 0x65, 0xc4, 0x43, 0x49, 0xd1, 0x57, 0x50, 0x2f, 0xad, 0xc8, 0xcd, 0xfb,
	0xf0, 0x6f, 0xcd, 0xc3, 0x9b, 0x5c, 0xe3, 0xe7, 0x0a, 0x74, 0x6f, 0x61, 0x4d, 0xfc, 0x18, 0xf9,
	0x70, 0xb4, 0xeb, 0xa5, 0x7b, 0x6d, 0x16, 0x9e, 0xfd, 0x97, 0x7b, 0x81, 0x1f, 0xed, 0xd8, 0x5a,
	0x8e, 0x1a, 0x83, 0xee, 0x8e, 0xbd, 0x1b, 0xb1, 0xac, 0x83, 0x4f, 0xef, 0xe1, 0x73, 0xa9, 0xd5,
	0xd9, 0x76, 0xba, 0x94, 0xd2, 0xe1, 0x83, 0xc2, 0xe9, 0xaa, 0x72, 0xba, 0x58, 0x9e, 0x0e, 0xe0,
	0xf3, 0x25, 0x0f, 0xcc, 0x35, 0x09, 0x3d, 0xfa, 0xa3, 0xb9, 0xf6, 0x16, 0x66, 0xf9, 0xff, 0x32,
	0x6f, 0xfc, 0xbf, 0xfe, 0xd4, 0xb4, 0xc5, 0xfb, 0xea, 0x4d, 0x7b, 0xfa, 0x57, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xb8, 0xc5, 0xe9, 0x85, 0xec, 0x06, 0x00, 0x00,
}

// SetOperationParams implements ydb generic interface for setting
// operation parameters inside driver implementation.
func (m *DiscoverClustersRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	m.OperationParams = v
}
